const T = Math.PI*2;

var F = [500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500];
var r = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
var rv = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
var vt = 0.01;
var w = 80;
var wdelta = 5;
var wmin = 1;
var wmax = 500;
var opacity = 0.08;
var do_you_like_snow_question_mark = 'yes!';

const canvas = document.getElementById('screen');
const c = canvas.getContext('2d');

var running = 1;
var theta = t = 0;
var W,H;


window.onresize = ()=>{
	W =  canvas.width = document.body.clientWidth;
	H = canvas.height = document.body.clientHeight;
	c.translate(canvas.width/2, canvas.height/2);
}

window.onresize();

const grd = c.createLinearGradient(0, -H/2, 0, H);
grd.addColorStop(0, "rgb(0,0,0)");
grd.addColorStop(1, "rgb(100,100,100");

class Vertex {
	constructor(...x){
		this.pos = [];
		x.forEach((y)=>{
			this.pos.push(y);
		});
		this.n = x.length;
		this.loc = [];
	}
	rotate(r){
		r.slice(0,this.n).toReversed().forEach((s, k_)=>{
			let i,j;
			let k = this.n - k_ - 1;
			switch(k){
				case 0:
					i = 1, j = 2;
					break;
				case 1:
					i = 0, j = 2;
					break;
				case 2:
					i = 0, j = 1;
					break;
				default:
					i = 1, j = k;
			}
			let p = this.pos[i];
			this.pos[i] = p*Math.cos(s) - this.pos[j]*Math.sin(s);
			this.pos[j] = p*Math.sin(s) + this.pos[j]*Math.cos(s);
		});
	}
	project(){
		this.pos[this.n-1] += F[this.n-3];
		for(let i=this.n-1; i>=3; i--){
			for(let j=0; j<i; j++){
				this.pos[j] *= F[i-2]/this.pos[i];
			}
			this.pos[i-1] += F[i-3];
		}
		this.loc = [this.pos[0]*F[0]/this.pos[2], this.pos[1]*F[0]/this.pos[2]];
	}
}

class Face {
	constructor(color, ...v){
		this.v = v;
		this.color = color || "rgba(255,255,255,0.1)";
	}
	render(){
		c.beginPath();
		c.strokeStyle = "rgba(255,255,255,1)";
		c.moveTo(this.v[0].loc[0], this.v[0].loc[1]);
		c.lineWidth = 1;
		for(let i=1; i<this.v.length; i++) c.lineTo(this.v[i].loc[0], this.v[i].loc[1]);
		c.closePath();
		c.fillStyle = this.color;
		c.fill()
		c.stroke();
	}
}

window.onmousemove=function(e){
	if(e.ctrlKey) return;
	
	let v = 400;
	
	if(e.shiftKey){
		r[2] += e.movementX/v + e.movementY/v;
		r[2] %= T;
	}else{
		r[0] += e.movementY/v;
		r[0] %= T;
		r[1] += e.movementX/v;
		r[1] %= T;
	}
	
	if(e.altKey) {
		running = 0;
		return;
	}
	
	running = 1;
}

window.onwheel=function(e){
	if(e.deltaY<0){
		w = Math.min(w + wdelta, wmax);
	}else if(e.deltaY>0){
		w = Math.max(w - wdelta, wmin);
	}
}

window.onkeydown=function(e){
	if(e.keyCode==82){
		recording = !recording;
		if(recording){
			recorder.start();
		} else {
			recorder.stop();
		}
	}else if(e.keyCode==83){
		recorder.snap();
	}else if(do_you_like_snow_question_mark=='yes!'&&e.keyCode==32&&rate__){
		rate_=0;if(rate>-rate__){ra(1);}else{ra(-1);}
	}
}

function f(t){
	if(0<=t&&t<T/8){return t**4/(T/8)**3;}
	else if(T/8<=t&&t<T/4){return T/4 - (t-T/4)**4/(T/8)**3;}
	else if(T/4<=t&&t<=T*3/8){return T/4 + (t-T/4)**4/(T/8)**3;}
	else if(T*3/8<=t&&t<=T/2){return T/2 - (t-T/2)**4/(T/8)**3;}
	else if(t>T/2){return f(T-t);}
	else {return t;}
}

function bg(){
	c.fillStyle = grd;
	c.fillRect(-W/2, -H/2, W, H);
}


function snow(){
	
}

function auto(){
	if((x=t)>0&&x<vt*2) recorder.start();
	if((x=T-t)<vt*2&&x>0) recorder.stop();
}

function draw(){
	requestAnimationFrame(draw);
	
	bg();
	
	if(running){
		rv.forEach((s,i)=>{
			r[i] += s;
			r[i] %= T;
		});
		
		t += vt;
		t %= T;
		theta = f(t);
	}
	
	do_you_like_snow_question_mark=='yes!'?snow():0;
	
	let v1 = [], v2 = [], v3 = [], v4 = [], v5 = [], v6 = [], v7 = [], v8 = [], v9 = [], v10 = [], v11 = [], v12 = [], v13 = [], v14 = [], v15 = [], v16 = [], v17 = [], v18 = [], v19 = [], v20 = [], v21 = [], v22 = [], v23 = [], v24 = [];
	let faces = [];
	
	let color_a =  'rgba(255,   0,   0,         0.1)',
		color1  =  'rgba(255,   0,   0, '+opacity+')',
		color2  =  'rgba(  0, 255,   0, '+opacity+')',
		color3  =  'rgba(  0,   0, 255, '+opacity+')',
		color4  =  'rgba(255, 255,   0, '+opacity+')',
		color5  =  'rgba(255,   0, 255, '+opacity+')',
		color6  =  'rgba(  0, 255, 255, '+opacity+')',
		color7  =  'rgba(255, 255, 255, '+opacity+')',
		color8  =  'rgba(  0,   0,   0, '+opacity+')',
		color9  =  'rgba(  0,   0, 128, '+opacity+')',
		color10 =  'rgba(  0, 128,   0, '+opacity+')',
		color11 =  'rgba(  0, 128, 128, '+opacity+')',
		color12 =  'rgba(128,   0,   0, '+opacity+')';
		color13 =  'rgba(128,   0, 128, '+opacity+')',
		color14 =  'rgba(128, 128,   0, '+opacity+')',
		color15 =  'rgba(128, 128, 128, '+opacity+')',
		color16 =  'rgba(  0,   0,  64, '+opacity+')',
		color17 =  'rgba(  0,  64,   0, '+opacity+')',
		color18 =  'rgba(  0,  64,  64, '+opacity+')',
		color19 =  'rgba( 64,   0,   0, '+opacity+')',
		color20 =  'rgba( 64,   0,  64, '+opacity+')',
		color21 =  'rgba( 64,  64,   0, '+opacity+')',
		color22 =  'rgba( 64,  64,  64, '+opacity+')',
		color23 =  'rgba(255,   0, 128, '+opacity+')',
		color24 =  'rgba(255, 128,   0, '+opacity+')';
	
	    v1[0] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v1[1] = new Vertex(-w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v1[2] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v1[3] = new Vertex(-w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v1[4] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v1[5] = new Vertex(-w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v1[6] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v1[7] = new Vertex(-w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v1[8] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v1[9] = new Vertex(-w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v1[10] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v1[11] = new Vertex(-w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v1[12] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v1[13] = new Vertex(-w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v1[14] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2);
    v1[15] = new Vertex(-w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v1[16] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v1[17] = new Vertex(-w/2-Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v1[18] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v1[19] = new Vertex(-w/2-Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v1[20] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v1[21] = new Vertex(-w/2-Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v1[22] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2);
    v1[23] = new Vertex(-w/2-Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v1[24] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v1[25] = new Vertex(-w/2-Math.sin(theta)*w, -w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v1[26] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2);
    v1[27] = new Vertex(-w/2-Math.sin(theta)*w, -w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v1[28] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2);
    v1[29] = new Vertex(-w/2-Math.sin(theta)*w, -w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v1[30] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, w/2, w/2, -w/2);
    v1[31] = new Vertex(-w/2-Math.sin(theta)*w, -w/2, -w/2, w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v1[32] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v1[33] = new Vertex(-w/2-Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v1[34] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v1[35] = new Vertex(-w/2-Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v1[36] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v1[37] = new Vertex(-w/2-Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v1[38] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v1[39] = new Vertex(-w/2-Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v1[40] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v1[41] = new Vertex(-w/2-Math.sin(theta)*w, -w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v1[42] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v1[43] = new Vertex(-w/2-Math.sin(theta)*w, -w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v1[44] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v1[45] = new Vertex(-w/2-Math.sin(theta)*w, -w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v1[46] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, w/2, w/2, -w/2);
    v1[47] = new Vertex(-w/2-Math.sin(theta)*w, -w/2, w/2, -w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v1[48] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v1[49] = new Vertex(-w/2-Math.sin(theta)*w, -w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v1[50] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v1[51] = new Vertex(-w/2-Math.sin(theta)*w, -w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v1[52] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v1[53] = new Vertex(-w/2-Math.sin(theta)*w, -w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v1[54] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, w/2, w/2, -w/2);
    v1[55] = new Vertex(-w/2-Math.sin(theta)*w, -w/2, w/2, w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v1[56] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v1[57] = new Vertex(-w/2-Math.sin(theta)*w, -w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v1[58] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, -w/2, w/2, -w/2);
    v1[59] = new Vertex(-w/2-Math.sin(theta)*w, -w/2, w/2, w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v1[60] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, w/2, -w/2, -w/2);
    v1[61] = new Vertex(-w/2-Math.sin(theta)*w, -w/2, w/2, w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v1[62] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, w/2, w/2, -w/2);
    v1[63] = new Vertex(-w/2-Math.sin(theta)*w, -w/2, w/2, w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v1[64] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v1[65] = new Vertex(-w/2-Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v1[66] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v1[67] = new Vertex(-w/2-Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v1[68] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v1[69] = new Vertex(-w/2-Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v1[70] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v1[71] = new Vertex(-w/2-Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v1[72] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v1[73] = new Vertex(-w/2-Math.sin(theta)*w, w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v1[74] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v1[75] = new Vertex(-w/2-Math.sin(theta)*w, w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v1[76] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v1[77] = new Vertex(-w/2-Math.sin(theta)*w, w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v1[78] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2);
    v1[79] = new Vertex(-w/2-Math.sin(theta)*w, w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v1[80] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v1[81] = new Vertex(-w/2-Math.sin(theta)*w, w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v1[82] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v1[83] = new Vertex(-w/2-Math.sin(theta)*w, w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v1[84] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v1[85] = new Vertex(-w/2-Math.sin(theta)*w, w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v1[86] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2);
    v1[87] = new Vertex(-w/2-Math.sin(theta)*w, w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v1[88] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v1[89] = new Vertex(-w/2-Math.sin(theta)*w, w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v1[90] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2);
    v1[91] = new Vertex(-w/2-Math.sin(theta)*w, w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v1[92] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2);
    v1[93] = new Vertex(-w/2-Math.sin(theta)*w, w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v1[94] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, w/2, w/2, -w/2);
    v1[95] = new Vertex(-w/2-Math.sin(theta)*w, w/2, -w/2, w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v1[96] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v1[97] = new Vertex(-w/2-Math.sin(theta)*w, w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v1[98] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v1[99] = new Vertex(-w/2-Math.sin(theta)*w, w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v1[100] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v1[101] = new Vertex(-w/2-Math.sin(theta)*w, w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v1[102] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v1[103] = new Vertex(-w/2-Math.sin(theta)*w, w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v1[104] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v1[105] = new Vertex(-w/2-Math.sin(theta)*w, w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v1[106] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v1[107] = new Vertex(-w/2-Math.sin(theta)*w, w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v1[108] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v1[109] = new Vertex(-w/2-Math.sin(theta)*w, w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v1[110] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, w/2, w/2, -w/2);
    v1[111] = new Vertex(-w/2-Math.sin(theta)*w, w/2, w/2, -w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v1[112] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v1[113] = new Vertex(-w/2-Math.sin(theta)*w, w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v1[114] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v1[115] = new Vertex(-w/2-Math.sin(theta)*w, w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v1[116] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v1[117] = new Vertex(-w/2-Math.sin(theta)*w, w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v1[118] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, w/2, w/2, -w/2);
    v1[119] = new Vertex(-w/2-Math.sin(theta)*w, w/2, w/2, w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v1[120] = new Vertex(-w/2, w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v1[121] = new Vertex(-w/2-Math.sin(theta)*w, w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v1[122] = new Vertex(-w/2, w/2, w/2, w/2, w/2, -w/2, w/2, -w/2);
    v1[123] = new Vertex(-w/2-Math.sin(theta)*w, w/2, w/2, w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v1[124] = new Vertex(-w/2, w/2, w/2, w/2, w/2, w/2, -w/2, -w/2);
    v1[125] = new Vertex(-w/2-Math.sin(theta)*w, w/2, w/2, w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v1[126] = new Vertex(-w/2, w/2, w/2, w/2, w/2, w/2, w/2, -w/2);
    v1[127] = new Vertex(-w/2-Math.sin(theta)*w, w/2, w/2, w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    faces.push(new Face(color1, v1[0], v1[1], v1[3], v1[2]));
    faces.push(new Face(color1, v1[0], v1[1], v1[5], v1[4]));
    faces.push(new Face(color1, v1[0], v1[1], v1[9], v1[8]));
    faces.push(new Face(color1, v1[0], v1[1], v1[17], v1[16]));
    faces.push(new Face(color1, v1[0], v1[1], v1[33], v1[32]));
    faces.push(new Face(color1, v1[0], v1[1], v1[65], v1[64]));
    faces.push(new Face(color1, v1[0], v1[2], v1[6], v1[4]));
    faces.push(new Face(color1, v1[0], v1[2], v1[10], v1[8]));
    faces.push(new Face(color1, v1[0], v1[2], v1[18], v1[16]));
    faces.push(new Face(color1, v1[0], v1[2], v1[34], v1[32]));
    faces.push(new Face(color1, v1[0], v1[2], v1[66], v1[64]));
    faces.push(new Face(color1, v1[0], v1[4], v1[12], v1[8]));
    faces.push(new Face(color1, v1[0], v1[4], v1[20], v1[16]));
    faces.push(new Face(color1, v1[0], v1[4], v1[36], v1[32]));
    faces.push(new Face(color1, v1[0], v1[4], v1[68], v1[64]));
    faces.push(new Face(color1, v1[0], v1[8], v1[24], v1[16]));
    faces.push(new Face(color1, v1[0], v1[8], v1[40], v1[32]));
    faces.push(new Face(color1, v1[0], v1[8], v1[72], v1[64]));
    faces.push(new Face(color1, v1[0], v1[16], v1[48], v1[32]));
    faces.push(new Face(color1, v1[0], v1[16], v1[80], v1[64]));
    faces.push(new Face(color1, v1[0], v1[32], v1[96], v1[64]));
    faces.push(new Face(color1, v1[1], v1[3], v1[7], v1[5]));
    faces.push(new Face(color1, v1[1], v1[3], v1[11], v1[9]));
    faces.push(new Face(color1, v1[1], v1[3], v1[19], v1[17]));
    faces.push(new Face(color1, v1[1], v1[3], v1[35], v1[33]));
    faces.push(new Face(color1, v1[1], v1[3], v1[67], v1[65]));
    faces.push(new Face(color1, v1[1], v1[5], v1[13], v1[9]));
    faces.push(new Face(color1, v1[1], v1[5], v1[21], v1[17]));
    faces.push(new Face(color1, v1[1], v1[5], v1[37], v1[33]));
    faces.push(new Face(color1, v1[1], v1[5], v1[69], v1[65]));
    faces.push(new Face(color1, v1[1], v1[9], v1[25], v1[17]));
    faces.push(new Face(color1, v1[1], v1[9], v1[41], v1[33]));
    faces.push(new Face(color1, v1[1], v1[9], v1[73], v1[65]));
    faces.push(new Face(color1, v1[1], v1[17], v1[49], v1[33]));
    faces.push(new Face(color1, v1[1], v1[17], v1[81], v1[65]));
    faces.push(new Face(color1, v1[1], v1[33], v1[97], v1[65]));
    faces.push(new Face(color1, v1[2], v1[3], v1[7], v1[6]));
    faces.push(new Face(color1, v1[2], v1[3], v1[11], v1[10]));
    faces.push(new Face(color1, v1[2], v1[3], v1[19], v1[18]));
    faces.push(new Face(color1, v1[2], v1[3], v1[35], v1[34]));
    faces.push(new Face(color1, v1[2], v1[3], v1[67], v1[66]));
    faces.push(new Face(color1, v1[2], v1[6], v1[14], v1[10]));
    faces.push(new Face(color1, v1[2], v1[6], v1[22], v1[18]));
    faces.push(new Face(color1, v1[2], v1[6], v1[38], v1[34]));
    faces.push(new Face(color1, v1[2], v1[6], v1[70], v1[66]));
    faces.push(new Face(color1, v1[2], v1[10], v1[26], v1[18]));
    faces.push(new Face(color1, v1[2], v1[10], v1[42], v1[34]));
    faces.push(new Face(color1, v1[2], v1[10], v1[74], v1[66]));
    faces.push(new Face(color1, v1[2], v1[18], v1[50], v1[34]));
    faces.push(new Face(color1, v1[2], v1[18], v1[82], v1[66]));
    faces.push(new Face(color1, v1[2], v1[34], v1[98], v1[66]));
    faces.push(new Face(color1, v1[3], v1[7], v1[15], v1[11]));
    faces.push(new Face(color1, v1[3], v1[7], v1[23], v1[19]));
    faces.push(new Face(color1, v1[3], v1[7], v1[39], v1[35]));
    faces.push(new Face(color1, v1[3], v1[7], v1[71], v1[67]));
    faces.push(new Face(color1, v1[3], v1[11], v1[27], v1[19]));
    faces.push(new Face(color1, v1[3], v1[11], v1[43], v1[35]));
    faces.push(new Face(color1, v1[3], v1[11], v1[75], v1[67]));
    faces.push(new Face(color1, v1[3], v1[19], v1[51], v1[35]));
    faces.push(new Face(color1, v1[3], v1[19], v1[83], v1[67]));
    faces.push(new Face(color1, v1[3], v1[35], v1[99], v1[67]));
    faces.push(new Face(color1, v1[4], v1[5], v1[7], v1[6]));
    faces.push(new Face(color1, v1[4], v1[5], v1[13], v1[12]));
    faces.push(new Face(color1, v1[4], v1[5], v1[21], v1[20]));
    faces.push(new Face(color1, v1[4], v1[5], v1[37], v1[36]));
    faces.push(new Face(color1, v1[4], v1[5], v1[69], v1[68]));
    faces.push(new Face(color1, v1[4], v1[6], v1[14], v1[12]));
    faces.push(new Face(color1, v1[4], v1[6], v1[22], v1[20]));
    faces.push(new Face(color1, v1[4], v1[6], v1[38], v1[36]));
    faces.push(new Face(color1, v1[4], v1[6], v1[70], v1[68]));
    faces.push(new Face(color1, v1[4], v1[12], v1[28], v1[20]));
    faces.push(new Face(color1, v1[4], v1[12], v1[44], v1[36]));
    faces.push(new Face(color1, v1[4], v1[12], v1[76], v1[68]));
    faces.push(new Face(color1, v1[4], v1[20], v1[52], v1[36]));
    faces.push(new Face(color1, v1[4], v1[20], v1[84], v1[68]));
    faces.push(new Face(color1, v1[4], v1[36], v1[100], v1[68]));
    faces.push(new Face(color1, v1[5], v1[7], v1[15], v1[13]));
    faces.push(new Face(color1, v1[5], v1[7], v1[23], v1[21]));
    faces.push(new Face(color1, v1[5], v1[7], v1[39], v1[37]));
    faces.push(new Face(color1, v1[5], v1[7], v1[71], v1[69]));
    faces.push(new Face(color1, v1[5], v1[13], v1[29], v1[21]));
    faces.push(new Face(color1, v1[5], v1[13], v1[45], v1[37]));
    faces.push(new Face(color1, v1[5], v1[13], v1[77], v1[69]));
    faces.push(new Face(color1, v1[5], v1[21], v1[53], v1[37]));
    faces.push(new Face(color1, v1[5], v1[21], v1[85], v1[69]));
    faces.push(new Face(color1, v1[5], v1[37], v1[101], v1[69]));
    faces.push(new Face(color1, v1[6], v1[7], v1[15], v1[14]));
    faces.push(new Face(color1, v1[6], v1[7], v1[23], v1[22]));
    faces.push(new Face(color1, v1[6], v1[7], v1[39], v1[38]));
    faces.push(new Face(color1, v1[6], v1[7], v1[71], v1[70]));
    faces.push(new Face(color1, v1[6], v1[14], v1[30], v1[22]));
    faces.push(new Face(color1, v1[6], v1[14], v1[46], v1[38]));
    faces.push(new Face(color1, v1[6], v1[14], v1[78], v1[70]));
    faces.push(new Face(color1, v1[6], v1[22], v1[54], v1[38]));
    faces.push(new Face(color1, v1[6], v1[22], v1[86], v1[70]));
    faces.push(new Face(color1, v1[6], v1[38], v1[102], v1[70]));
    faces.push(new Face(color1, v1[7], v1[15], v1[31], v1[23]));
    faces.push(new Face(color1, v1[7], v1[15], v1[47], v1[39]));
    faces.push(new Face(color1, v1[7], v1[15], v1[79], v1[71]));
    faces.push(new Face(color1, v1[7], v1[23], v1[55], v1[39]));
    faces.push(new Face(color1, v1[7], v1[23], v1[87], v1[71]));
    faces.push(new Face(color1, v1[7], v1[39], v1[103], v1[71]));
    faces.push(new Face(color1, v1[8], v1[9], v1[11], v1[10]));
    faces.push(new Face(color1, v1[8], v1[9], v1[13], v1[12]));
    faces.push(new Face(color1, v1[8], v1[9], v1[25], v1[24]));
    faces.push(new Face(color1, v1[8], v1[9], v1[41], v1[40]));
    faces.push(new Face(color1, v1[8], v1[9], v1[73], v1[72]));
    faces.push(new Face(color1, v1[8], v1[10], v1[14], v1[12]));
    faces.push(new Face(color1, v1[8], v1[10], v1[26], v1[24]));
    faces.push(new Face(color1, v1[8], v1[10], v1[42], v1[40]));
    faces.push(new Face(color1, v1[8], v1[10], v1[74], v1[72]));
    faces.push(new Face(color1, v1[8], v1[12], v1[28], v1[24]));
    faces.push(new Face(color1, v1[8], v1[12], v1[44], v1[40]));
    faces.push(new Face(color1, v1[8], v1[12], v1[76], v1[72]));
    faces.push(new Face(color1, v1[8], v1[24], v1[56], v1[40]));
    faces.push(new Face(color1, v1[8], v1[24], v1[88], v1[72]));
    faces.push(new Face(color1, v1[8], v1[40], v1[104], v1[72]));
    faces.push(new Face(color1, v1[9], v1[11], v1[15], v1[13]));
    faces.push(new Face(color1, v1[9], v1[11], v1[27], v1[25]));
    faces.push(new Face(color1, v1[9], v1[11], v1[43], v1[41]));
    faces.push(new Face(color1, v1[9], v1[11], v1[75], v1[73]));
    faces.push(new Face(color1, v1[9], v1[13], v1[29], v1[25]));
    faces.push(new Face(color1, v1[9], v1[13], v1[45], v1[41]));
    faces.push(new Face(color1, v1[9], v1[13], v1[77], v1[73]));
    faces.push(new Face(color1, v1[9], v1[25], v1[57], v1[41]));
    faces.push(new Face(color1, v1[9], v1[25], v1[89], v1[73]));
    faces.push(new Face(color1, v1[9], v1[41], v1[105], v1[73]));
    faces.push(new Face(color1, v1[10], v1[11], v1[15], v1[14]));
    faces.push(new Face(color1, v1[10], v1[11], v1[27], v1[26]));
    faces.push(new Face(color1, v1[10], v1[11], v1[43], v1[42]));
    faces.push(new Face(color1, v1[10], v1[11], v1[75], v1[74]));
    faces.push(new Face(color1, v1[10], v1[14], v1[30], v1[26]));
    faces.push(new Face(color1, v1[10], v1[14], v1[46], v1[42]));
    faces.push(new Face(color1, v1[10], v1[14], v1[78], v1[74]));
    faces.push(new Face(color1, v1[10], v1[26], v1[58], v1[42]));
    faces.push(new Face(color1, v1[10], v1[26], v1[90], v1[74]));
    faces.push(new Face(color1, v1[10], v1[42], v1[106], v1[74]));
    faces.push(new Face(color1, v1[11], v1[15], v1[31], v1[27]));
    faces.push(new Face(color1, v1[11], v1[15], v1[47], v1[43]));
    faces.push(new Face(color1, v1[11], v1[15], v1[79], v1[75]));
    faces.push(new Face(color1, v1[11], v1[27], v1[59], v1[43]));
    faces.push(new Face(color1, v1[11], v1[27], v1[91], v1[75]));
    faces.push(new Face(color1, v1[11], v1[43], v1[107], v1[75]));
    faces.push(new Face(color1, v1[12], v1[13], v1[15], v1[14]));
    faces.push(new Face(color1, v1[12], v1[13], v1[29], v1[28]));
    faces.push(new Face(color1, v1[12], v1[13], v1[45], v1[44]));
    faces.push(new Face(color1, v1[12], v1[13], v1[77], v1[76]));
    faces.push(new Face(color1, v1[12], v1[14], v1[30], v1[28]));
    faces.push(new Face(color1, v1[12], v1[14], v1[46], v1[44]));
    faces.push(new Face(color1, v1[12], v1[14], v1[78], v1[76]));
    faces.push(new Face(color1, v1[12], v1[28], v1[60], v1[44]));
    faces.push(new Face(color1, v1[12], v1[28], v1[92], v1[76]));
    faces.push(new Face(color1, v1[12], v1[44], v1[108], v1[76]));
    faces.push(new Face(color1, v1[13], v1[15], v1[31], v1[29]));
    faces.push(new Face(color1, v1[13], v1[15], v1[47], v1[45]));
    faces.push(new Face(color1, v1[13], v1[15], v1[79], v1[77]));
    faces.push(new Face(color1, v1[13], v1[29], v1[61], v1[45]));
    faces.push(new Face(color1, v1[13], v1[29], v1[93], v1[77]));
    faces.push(new Face(color1, v1[13], v1[45], v1[109], v1[77]));
    faces.push(new Face(color1, v1[14], v1[15], v1[31], v1[30]));
    faces.push(new Face(color1, v1[14], v1[15], v1[47], v1[46]));
    faces.push(new Face(color1, v1[14], v1[15], v1[79], v1[78]));
    faces.push(new Face(color1, v1[14], v1[30], v1[62], v1[46]));
    faces.push(new Face(color1, v1[14], v1[30], v1[94], v1[78]));
    faces.push(new Face(color1, v1[14], v1[46], v1[110], v1[78]));
    faces.push(new Face(color1, v1[15], v1[31], v1[63], v1[47]));
    faces.push(new Face(color1, v1[15], v1[31], v1[95], v1[79]));
    faces.push(new Face(color1, v1[15], v1[47], v1[111], v1[79]));
    faces.push(new Face(color1, v1[16], v1[17], v1[19], v1[18]));
    faces.push(new Face(color1, v1[16], v1[17], v1[21], v1[20]));
    faces.push(new Face(color1, v1[16], v1[17], v1[25], v1[24]));
    faces.push(new Face(color1, v1[16], v1[17], v1[49], v1[48]));
    faces.push(new Face(color1, v1[16], v1[17], v1[81], v1[80]));
    faces.push(new Face(color1, v1[16], v1[18], v1[22], v1[20]));
    faces.push(new Face(color1, v1[16], v1[18], v1[26], v1[24]));
    faces.push(new Face(color1, v1[16], v1[18], v1[50], v1[48]));
    faces.push(new Face(color1, v1[16], v1[18], v1[82], v1[80]));
    faces.push(new Face(color1, v1[16], v1[20], v1[28], v1[24]));
    faces.push(new Face(color1, v1[16], v1[20], v1[52], v1[48]));
    faces.push(new Face(color1, v1[16], v1[20], v1[84], v1[80]));
    faces.push(new Face(color1, v1[16], v1[24], v1[56], v1[48]));
    faces.push(new Face(color1, v1[16], v1[24], v1[88], v1[80]));
    faces.push(new Face(color1, v1[16], v1[48], v1[112], v1[80]));
    faces.push(new Face(color1, v1[17], v1[19], v1[23], v1[21]));
    faces.push(new Face(color1, v1[17], v1[19], v1[27], v1[25]));
    faces.push(new Face(color1, v1[17], v1[19], v1[51], v1[49]));
    faces.push(new Face(color1, v1[17], v1[19], v1[83], v1[81]));
    faces.push(new Face(color1, v1[17], v1[21], v1[29], v1[25]));
    faces.push(new Face(color1, v1[17], v1[21], v1[53], v1[49]));
    faces.push(new Face(color1, v1[17], v1[21], v1[85], v1[81]));
    faces.push(new Face(color1, v1[17], v1[25], v1[57], v1[49]));
    faces.push(new Face(color1, v1[17], v1[25], v1[89], v1[81]));
    faces.push(new Face(color1, v1[17], v1[49], v1[113], v1[81]));
    faces.push(new Face(color1, v1[18], v1[19], v1[23], v1[22]));
    faces.push(new Face(color1, v1[18], v1[19], v1[27], v1[26]));
    faces.push(new Face(color1, v1[18], v1[19], v1[51], v1[50]));
    faces.push(new Face(color1, v1[18], v1[19], v1[83], v1[82]));
    faces.push(new Face(color1, v1[18], v1[22], v1[30], v1[26]));
    faces.push(new Face(color1, v1[18], v1[22], v1[54], v1[50]));
    faces.push(new Face(color1, v1[18], v1[22], v1[86], v1[82]));
    faces.push(new Face(color1, v1[18], v1[26], v1[58], v1[50]));
    faces.push(new Face(color1, v1[18], v1[26], v1[90], v1[82]));
    faces.push(new Face(color1, v1[18], v1[50], v1[114], v1[82]));
    faces.push(new Face(color1, v1[19], v1[23], v1[31], v1[27]));
    faces.push(new Face(color1, v1[19], v1[23], v1[55], v1[51]));
    faces.push(new Face(color1, v1[19], v1[23], v1[87], v1[83]));
    faces.push(new Face(color1, v1[19], v1[27], v1[59], v1[51]));
    faces.push(new Face(color1, v1[19], v1[27], v1[91], v1[83]));
    faces.push(new Face(color1, v1[19], v1[51], v1[115], v1[83]));
    faces.push(new Face(color1, v1[20], v1[21], v1[23], v1[22]));
    faces.push(new Face(color1, v1[20], v1[21], v1[29], v1[28]));
    faces.push(new Face(color1, v1[20], v1[21], v1[53], v1[52]));
    faces.push(new Face(color1, v1[20], v1[21], v1[85], v1[84]));
    faces.push(new Face(color1, v1[20], v1[22], v1[30], v1[28]));
    faces.push(new Face(color1, v1[20], v1[22], v1[54], v1[52]));
    faces.push(new Face(color1, v1[20], v1[22], v1[86], v1[84]));
    faces.push(new Face(color1, v1[20], v1[28], v1[60], v1[52]));
    faces.push(new Face(color1, v1[20], v1[28], v1[92], v1[84]));
    faces.push(new Face(color1, v1[20], v1[52], v1[116], v1[84]));
    faces.push(new Face(color1, v1[21], v1[23], v1[31], v1[29]));
    faces.push(new Face(color1, v1[21], v1[23], v1[55], v1[53]));
    faces.push(new Face(color1, v1[21], v1[23], v1[87], v1[85]));
    faces.push(new Face(color1, v1[21], v1[29], v1[61], v1[53]));
    faces.push(new Face(color1, v1[21], v1[29], v1[93], v1[85]));
    faces.push(new Face(color1, v1[21], v1[53], v1[117], v1[85]));
    faces.push(new Face(color1, v1[22], v1[23], v1[31], v1[30]));
    faces.push(new Face(color1, v1[22], v1[23], v1[55], v1[54]));
    faces.push(new Face(color1, v1[22], v1[23], v1[87], v1[86]));
    faces.push(new Face(color1, v1[22], v1[30], v1[62], v1[54]));
    faces.push(new Face(color1, v1[22], v1[30], v1[94], v1[86]));
    faces.push(new Face(color1, v1[22], v1[54], v1[118], v1[86]));
    faces.push(new Face(color1, v1[23], v1[31], v1[63], v1[55]));
    faces.push(new Face(color1, v1[23], v1[31], v1[95], v1[87]));
    faces.push(new Face(color1, v1[23], v1[55], v1[119], v1[87]));
    faces.push(new Face(color1, v1[24], v1[25], v1[27], v1[26]));
    faces.push(new Face(color1, v1[24], v1[25], v1[29], v1[28]));
    faces.push(new Face(color1, v1[24], v1[25], v1[57], v1[56]));
    faces.push(new Face(color1, v1[24], v1[25], v1[89], v1[88]));
    faces.push(new Face(color1, v1[24], v1[26], v1[30], v1[28]));
    faces.push(new Face(color1, v1[24], v1[26], v1[58], v1[56]));
    faces.push(new Face(color1, v1[24], v1[26], v1[90], v1[88]));
    faces.push(new Face(color1, v1[24], v1[28], v1[60], v1[56]));
    faces.push(new Face(color1, v1[24], v1[28], v1[92], v1[88]));
    faces.push(new Face(color1, v1[24], v1[56], v1[120], v1[88]));
    faces.push(new Face(color1, v1[25], v1[27], v1[31], v1[29]));
    faces.push(new Face(color1, v1[25], v1[27], v1[59], v1[57]));
    faces.push(new Face(color1, v1[25], v1[27], v1[91], v1[89]));
    faces.push(new Face(color1, v1[25], v1[29], v1[61], v1[57]));
    faces.push(new Face(color1, v1[25], v1[29], v1[93], v1[89]));
    faces.push(new Face(color1, v1[25], v1[57], v1[121], v1[89]));
    faces.push(new Face(color1, v1[26], v1[27], v1[31], v1[30]));
    faces.push(new Face(color1, v1[26], v1[27], v1[59], v1[58]));
    faces.push(new Face(color1, v1[26], v1[27], v1[91], v1[90]));
    faces.push(new Face(color1, v1[26], v1[30], v1[62], v1[58]));
    faces.push(new Face(color1, v1[26], v1[30], v1[94], v1[90]));
    faces.push(new Face(color1, v1[26], v1[58], v1[122], v1[90]));
    faces.push(new Face(color1, v1[27], v1[31], v1[63], v1[59]));
    faces.push(new Face(color1, v1[27], v1[31], v1[95], v1[91]));
    faces.push(new Face(color1, v1[27], v1[59], v1[123], v1[91]));
    faces.push(new Face(color1, v1[28], v1[29], v1[31], v1[30]));
    faces.push(new Face(color1, v1[28], v1[29], v1[61], v1[60]));
    faces.push(new Face(color1, v1[28], v1[29], v1[93], v1[92]));
    faces.push(new Face(color1, v1[28], v1[30], v1[62], v1[60]));
    faces.push(new Face(color1, v1[28], v1[30], v1[94], v1[92]));
    faces.push(new Face(color1, v1[28], v1[60], v1[124], v1[92]));
    faces.push(new Face(color1, v1[29], v1[31], v1[63], v1[61]));
    faces.push(new Face(color1, v1[29], v1[31], v1[95], v1[93]));
    faces.push(new Face(color1, v1[29], v1[61], v1[125], v1[93]));
    faces.push(new Face(color1, v1[30], v1[31], v1[63], v1[62]));
    faces.push(new Face(color1, v1[30], v1[31], v1[95], v1[94]));
    faces.push(new Face(color1, v1[30], v1[62], v1[126], v1[94]));
    faces.push(new Face(color1, v1[31], v1[63], v1[127], v1[95]));
    faces.push(new Face(color1, v1[32], v1[33], v1[35], v1[34]));
    faces.push(new Face(color1, v1[32], v1[33], v1[37], v1[36]));
    faces.push(new Face(color1, v1[32], v1[33], v1[41], v1[40]));
    faces.push(new Face(color1, v1[32], v1[33], v1[49], v1[48]));
    faces.push(new Face(color1, v1[32], v1[33], v1[97], v1[96]));
    faces.push(new Face(color1, v1[32], v1[34], v1[38], v1[36]));
    faces.push(new Face(color1, v1[32], v1[34], v1[42], v1[40]));
    faces.push(new Face(color1, v1[32], v1[34], v1[50], v1[48]));
    faces.push(new Face(color1, v1[32], v1[34], v1[98], v1[96]));
    faces.push(new Face(color1, v1[32], v1[36], v1[44], v1[40]));
    faces.push(new Face(color1, v1[32], v1[36], v1[52], v1[48]));
    faces.push(new Face(color1, v1[32], v1[36], v1[100], v1[96]));
    faces.push(new Face(color1, v1[32], v1[40], v1[56], v1[48]));
    faces.push(new Face(color1, v1[32], v1[40], v1[104], v1[96]));
    faces.push(new Face(color1, v1[32], v1[48], v1[112], v1[96]));
    faces.push(new Face(color1, v1[33], v1[35], v1[39], v1[37]));
    faces.push(new Face(color1, v1[33], v1[35], v1[43], v1[41]));
    faces.push(new Face(color1, v1[33], v1[35], v1[51], v1[49]));
    faces.push(new Face(color1, v1[33], v1[35], v1[99], v1[97]));
    faces.push(new Face(color1, v1[33], v1[37], v1[45], v1[41]));
    faces.push(new Face(color1, v1[33], v1[37], v1[53], v1[49]));
    faces.push(new Face(color1, v1[33], v1[37], v1[101], v1[97]));
    faces.push(new Face(color1, v1[33], v1[41], v1[57], v1[49]));
    faces.push(new Face(color1, v1[33], v1[41], v1[105], v1[97]));
    faces.push(new Face(color1, v1[33], v1[49], v1[113], v1[97]));
    faces.push(new Face(color1, v1[34], v1[35], v1[39], v1[38]));
    faces.push(new Face(color1, v1[34], v1[35], v1[43], v1[42]));
    faces.push(new Face(color1, v1[34], v1[35], v1[51], v1[50]));
    faces.push(new Face(color1, v1[34], v1[35], v1[99], v1[98]));
    faces.push(new Face(color1, v1[34], v1[38], v1[46], v1[42]));
    faces.push(new Face(color1, v1[34], v1[38], v1[54], v1[50]));
    faces.push(new Face(color1, v1[34], v1[38], v1[102], v1[98]));
    faces.push(new Face(color1, v1[34], v1[42], v1[58], v1[50]));
    faces.push(new Face(color1, v1[34], v1[42], v1[106], v1[98]));
    faces.push(new Face(color1, v1[34], v1[50], v1[114], v1[98]));
    faces.push(new Face(color1, v1[35], v1[39], v1[47], v1[43]));
    faces.push(new Face(color1, v1[35], v1[39], v1[55], v1[51]));
    faces.push(new Face(color1, v1[35], v1[39], v1[103], v1[99]));
    faces.push(new Face(color1, v1[35], v1[43], v1[59], v1[51]));
    faces.push(new Face(color1, v1[35], v1[43], v1[107], v1[99]));
    faces.push(new Face(color1, v1[35], v1[51], v1[115], v1[99]));
    faces.push(new Face(color1, v1[36], v1[37], v1[39], v1[38]));
    faces.push(new Face(color1, v1[36], v1[37], v1[45], v1[44]));
    faces.push(new Face(color1, v1[36], v1[37], v1[53], v1[52]));
    faces.push(new Face(color1, v1[36], v1[37], v1[101], v1[100]));
    faces.push(new Face(color1, v1[36], v1[38], v1[46], v1[44]));
    faces.push(new Face(color1, v1[36], v1[38], v1[54], v1[52]));
    faces.push(new Face(color1, v1[36], v1[38], v1[102], v1[100]));
    faces.push(new Face(color1, v1[36], v1[44], v1[60], v1[52]));
    faces.push(new Face(color1, v1[36], v1[44], v1[108], v1[100]));
    faces.push(new Face(color1, v1[36], v1[52], v1[116], v1[100]));
    faces.push(new Face(color1, v1[37], v1[39], v1[47], v1[45]));
    faces.push(new Face(color1, v1[37], v1[39], v1[55], v1[53]));
    faces.push(new Face(color1, v1[37], v1[39], v1[103], v1[101]));
    faces.push(new Face(color1, v1[37], v1[45], v1[61], v1[53]));
    faces.push(new Face(color1, v1[37], v1[45], v1[109], v1[101]));
    faces.push(new Face(color1, v1[37], v1[53], v1[117], v1[101]));
    faces.push(new Face(color1, v1[38], v1[39], v1[47], v1[46]));
    faces.push(new Face(color1, v1[38], v1[39], v1[55], v1[54]));
    faces.push(new Face(color1, v1[38], v1[39], v1[103], v1[102]));
    faces.push(new Face(color1, v1[38], v1[46], v1[62], v1[54]));
    faces.push(new Face(color1, v1[38], v1[46], v1[110], v1[102]));
    faces.push(new Face(color1, v1[38], v1[54], v1[118], v1[102]));
    faces.push(new Face(color1, v1[39], v1[47], v1[63], v1[55]));
    faces.push(new Face(color1, v1[39], v1[47], v1[111], v1[103]));
    faces.push(new Face(color1, v1[39], v1[55], v1[119], v1[103]));
    faces.push(new Face(color1, v1[40], v1[41], v1[43], v1[42]));
    faces.push(new Face(color1, v1[40], v1[41], v1[45], v1[44]));
    faces.push(new Face(color1, v1[40], v1[41], v1[57], v1[56]));
    faces.push(new Face(color1, v1[40], v1[41], v1[105], v1[104]));
    faces.push(new Face(color1, v1[40], v1[42], v1[46], v1[44]));
    faces.push(new Face(color1, v1[40], v1[42], v1[58], v1[56]));
    faces.push(new Face(color1, v1[40], v1[42], v1[106], v1[104]));
    faces.push(new Face(color1, v1[40], v1[44], v1[60], v1[56]));
    faces.push(new Face(color1, v1[40], v1[44], v1[108], v1[104]));
    faces.push(new Face(color1, v1[40], v1[56], v1[120], v1[104]));
    faces.push(new Face(color1, v1[41], v1[43], v1[47], v1[45]));
    faces.push(new Face(color1, v1[41], v1[43], v1[59], v1[57]));
    faces.push(new Face(color1, v1[41], v1[43], v1[107], v1[105]));
    faces.push(new Face(color1, v1[41], v1[45], v1[61], v1[57]));
    faces.push(new Face(color1, v1[41], v1[45], v1[109], v1[105]));
    faces.push(new Face(color1, v1[41], v1[57], v1[121], v1[105]));
    faces.push(new Face(color1, v1[42], v1[43], v1[47], v1[46]));
    faces.push(new Face(color1, v1[42], v1[43], v1[59], v1[58]));
    faces.push(new Face(color1, v1[42], v1[43], v1[107], v1[106]));
    faces.push(new Face(color1, v1[42], v1[46], v1[62], v1[58]));
    faces.push(new Face(color1, v1[42], v1[46], v1[110], v1[106]));
    faces.push(new Face(color1, v1[42], v1[58], v1[122], v1[106]));
    faces.push(new Face(color1, v1[43], v1[47], v1[63], v1[59]));
    faces.push(new Face(color1, v1[43], v1[47], v1[111], v1[107]));
    faces.push(new Face(color1, v1[43], v1[59], v1[123], v1[107]));
    faces.push(new Face(color1, v1[44], v1[45], v1[47], v1[46]));
    faces.push(new Face(color1, v1[44], v1[45], v1[61], v1[60]));
    faces.push(new Face(color1, v1[44], v1[45], v1[109], v1[108]));
    faces.push(new Face(color1, v1[44], v1[46], v1[62], v1[60]));
    faces.push(new Face(color1, v1[44], v1[46], v1[110], v1[108]));
    faces.push(new Face(color1, v1[44], v1[60], v1[124], v1[108]));
    faces.push(new Face(color1, v1[45], v1[47], v1[63], v1[61]));
    faces.push(new Face(color1, v1[45], v1[47], v1[111], v1[109]));
    faces.push(new Face(color1, v1[45], v1[61], v1[125], v1[109]));
    faces.push(new Face(color1, v1[46], v1[47], v1[63], v1[62]));
    faces.push(new Face(color1, v1[46], v1[47], v1[111], v1[110]));
    faces.push(new Face(color1, v1[46], v1[62], v1[126], v1[110]));
    faces.push(new Face(color1, v1[47], v1[63], v1[127], v1[111]));
    faces.push(new Face(color1, v1[48], v1[49], v1[51], v1[50]));
    faces.push(new Face(color1, v1[48], v1[49], v1[53], v1[52]));
    faces.push(new Face(color1, v1[48], v1[49], v1[57], v1[56]));
    faces.push(new Face(color1, v1[48], v1[49], v1[113], v1[112]));
    faces.push(new Face(color1, v1[48], v1[50], v1[54], v1[52]));
    faces.push(new Face(color1, v1[48], v1[50], v1[58], v1[56]));
    faces.push(new Face(color1, v1[48], v1[50], v1[114], v1[112]));
    faces.push(new Face(color1, v1[48], v1[52], v1[60], v1[56]));
    faces.push(new Face(color1, v1[48], v1[52], v1[116], v1[112]));
    faces.push(new Face(color1, v1[48], v1[56], v1[120], v1[112]));
    faces.push(new Face(color1, v1[49], v1[51], v1[55], v1[53]));
    faces.push(new Face(color1, v1[49], v1[51], v1[59], v1[57]));
    faces.push(new Face(color1, v1[49], v1[51], v1[115], v1[113]));
    faces.push(new Face(color1, v1[49], v1[53], v1[61], v1[57]));
    faces.push(new Face(color1, v1[49], v1[53], v1[117], v1[113]));
    faces.push(new Face(color1, v1[49], v1[57], v1[121], v1[113]));
    faces.push(new Face(color1, v1[50], v1[51], v1[55], v1[54]));
    faces.push(new Face(color1, v1[50], v1[51], v1[59], v1[58]));
    faces.push(new Face(color1, v1[50], v1[51], v1[115], v1[114]));
    faces.push(new Face(color1, v1[50], v1[54], v1[62], v1[58]));
    faces.push(new Face(color1, v1[50], v1[54], v1[118], v1[114]));
    faces.push(new Face(color1, v1[50], v1[58], v1[122], v1[114]));
    faces.push(new Face(color1, v1[51], v1[55], v1[63], v1[59]));
    faces.push(new Face(color1, v1[51], v1[55], v1[119], v1[115]));
    faces.push(new Face(color1, v1[51], v1[59], v1[123], v1[115]));
    faces.push(new Face(color1, v1[52], v1[53], v1[55], v1[54]));
    faces.push(new Face(color1, v1[52], v1[53], v1[61], v1[60]));
    faces.push(new Face(color1, v1[52], v1[53], v1[117], v1[116]));
    faces.push(new Face(color1, v1[52], v1[54], v1[62], v1[60]));
    faces.push(new Face(color1, v1[52], v1[54], v1[118], v1[116]));
    faces.push(new Face(color1, v1[52], v1[60], v1[124], v1[116]));
    faces.push(new Face(color1, v1[53], v1[55], v1[63], v1[61]));
    faces.push(new Face(color1, v1[53], v1[55], v1[119], v1[117]));
    faces.push(new Face(color1, v1[53], v1[61], v1[125], v1[117]));
    faces.push(new Face(color1, v1[54], v1[55], v1[63], v1[62]));
    faces.push(new Face(color1, v1[54], v1[55], v1[119], v1[118]));
    faces.push(new Face(color1, v1[54], v1[62], v1[126], v1[118]));
    faces.push(new Face(color1, v1[55], v1[63], v1[127], v1[119]));
    faces.push(new Face(color1, v1[56], v1[57], v1[59], v1[58]));
    faces.push(new Face(color1, v1[56], v1[57], v1[61], v1[60]));
    faces.push(new Face(color1, v1[56], v1[57], v1[121], v1[120]));
    faces.push(new Face(color1, v1[56], v1[58], v1[62], v1[60]));
    faces.push(new Face(color1, v1[56], v1[58], v1[122], v1[120]));
    faces.push(new Face(color1, v1[56], v1[60], v1[124], v1[120]));
    faces.push(new Face(color1, v1[57], v1[59], v1[63], v1[61]));
    faces.push(new Face(color1, v1[57], v1[59], v1[123], v1[121]));
    faces.push(new Face(color1, v1[57], v1[61], v1[125], v1[121]));
    faces.push(new Face(color1, v1[58], v1[59], v1[63], v1[62]));
    faces.push(new Face(color1, v1[58], v1[59], v1[123], v1[122]));
    faces.push(new Face(color1, v1[58], v1[62], v1[126], v1[122]));
    faces.push(new Face(color1, v1[59], v1[63], v1[127], v1[123]));
    faces.push(new Face(color1, v1[60], v1[61], v1[63], v1[62]));
    faces.push(new Face(color1, v1[60], v1[61], v1[125], v1[124]));
    faces.push(new Face(color1, v1[60], v1[62], v1[126], v1[124]));
    faces.push(new Face(color1, v1[61], v1[63], v1[127], v1[125]));
    faces.push(new Face(color1, v1[62], v1[63], v1[127], v1[126]));
    faces.push(new Face(color1, v1[64], v1[65], v1[67], v1[66]));
    faces.push(new Face(color1, v1[64], v1[65], v1[69], v1[68]));
    faces.push(new Face(color1, v1[64], v1[65], v1[73], v1[72]));
    faces.push(new Face(color1, v1[64], v1[65], v1[81], v1[80]));
    faces.push(new Face(color1, v1[64], v1[65], v1[97], v1[96]));
    faces.push(new Face(color1, v1[64], v1[66], v1[70], v1[68]));
    faces.push(new Face(color1, v1[64], v1[66], v1[74], v1[72]));
    faces.push(new Face(color1, v1[64], v1[66], v1[82], v1[80]));
    faces.push(new Face(color1, v1[64], v1[66], v1[98], v1[96]));
    faces.push(new Face(color1, v1[64], v1[68], v1[76], v1[72]));
    faces.push(new Face(color1, v1[64], v1[68], v1[84], v1[80]));
    faces.push(new Face(color1, v1[64], v1[68], v1[100], v1[96]));
    faces.push(new Face(color1, v1[64], v1[72], v1[88], v1[80]));
    faces.push(new Face(color1, v1[64], v1[72], v1[104], v1[96]));
    faces.push(new Face(color1, v1[64], v1[80], v1[112], v1[96]));
    faces.push(new Face(color1, v1[65], v1[67], v1[71], v1[69]));
    faces.push(new Face(color1, v1[65], v1[67], v1[75], v1[73]));
    faces.push(new Face(color1, v1[65], v1[67], v1[83], v1[81]));
    faces.push(new Face(color1, v1[65], v1[67], v1[99], v1[97]));
    faces.push(new Face(color1, v1[65], v1[69], v1[77], v1[73]));
    faces.push(new Face(color1, v1[65], v1[69], v1[85], v1[81]));
    faces.push(new Face(color1, v1[65], v1[69], v1[101], v1[97]));
    faces.push(new Face(color1, v1[65], v1[73], v1[89], v1[81]));
    faces.push(new Face(color1, v1[65], v1[73], v1[105], v1[97]));
    faces.push(new Face(color1, v1[65], v1[81], v1[113], v1[97]));
    faces.push(new Face(color1, v1[66], v1[67], v1[71], v1[70]));
    faces.push(new Face(color1, v1[66], v1[67], v1[75], v1[74]));
    faces.push(new Face(color1, v1[66], v1[67], v1[83], v1[82]));
    faces.push(new Face(color1, v1[66], v1[67], v1[99], v1[98]));
    faces.push(new Face(color1, v1[66], v1[70], v1[78], v1[74]));
    faces.push(new Face(color1, v1[66], v1[70], v1[86], v1[82]));
    faces.push(new Face(color1, v1[66], v1[70], v1[102], v1[98]));
    faces.push(new Face(color1, v1[66], v1[74], v1[90], v1[82]));
    faces.push(new Face(color1, v1[66], v1[74], v1[106], v1[98]));
    faces.push(new Face(color1, v1[66], v1[82], v1[114], v1[98]));
    faces.push(new Face(color1, v1[67], v1[71], v1[79], v1[75]));
    faces.push(new Face(color1, v1[67], v1[71], v1[87], v1[83]));
    faces.push(new Face(color1, v1[67], v1[71], v1[103], v1[99]));
    faces.push(new Face(color1, v1[67], v1[75], v1[91], v1[83]));
    faces.push(new Face(color1, v1[67], v1[75], v1[107], v1[99]));
    faces.push(new Face(color1, v1[67], v1[83], v1[115], v1[99]));
    faces.push(new Face(color1, v1[68], v1[69], v1[71], v1[70]));
    faces.push(new Face(color1, v1[68], v1[69], v1[77], v1[76]));
    faces.push(new Face(color1, v1[68], v1[69], v1[85], v1[84]));
    faces.push(new Face(color1, v1[68], v1[69], v1[101], v1[100]));
    faces.push(new Face(color1, v1[68], v1[70], v1[78], v1[76]));
    faces.push(new Face(color1, v1[68], v1[70], v1[86], v1[84]));
    faces.push(new Face(color1, v1[68], v1[70], v1[102], v1[100]));
    faces.push(new Face(color1, v1[68], v1[76], v1[92], v1[84]));
    faces.push(new Face(color1, v1[68], v1[76], v1[108], v1[100]));
    faces.push(new Face(color1, v1[68], v1[84], v1[116], v1[100]));
    faces.push(new Face(color1, v1[69], v1[71], v1[79], v1[77]));
    faces.push(new Face(color1, v1[69], v1[71], v1[87], v1[85]));
    faces.push(new Face(color1, v1[69], v1[71], v1[103], v1[101]));
    faces.push(new Face(color1, v1[69], v1[77], v1[93], v1[85]));
    faces.push(new Face(color1, v1[69], v1[77], v1[109], v1[101]));
    faces.push(new Face(color1, v1[69], v1[85], v1[117], v1[101]));
    faces.push(new Face(color1, v1[70], v1[71], v1[79], v1[78]));
    faces.push(new Face(color1, v1[70], v1[71], v1[87], v1[86]));
    faces.push(new Face(color1, v1[70], v1[71], v1[103], v1[102]));
    faces.push(new Face(color1, v1[70], v1[78], v1[94], v1[86]));
    faces.push(new Face(color1, v1[70], v1[78], v1[110], v1[102]));
    faces.push(new Face(color1, v1[70], v1[86], v1[118], v1[102]));
    faces.push(new Face(color1, v1[71], v1[79], v1[95], v1[87]));
    faces.push(new Face(color1, v1[71], v1[79], v1[111], v1[103]));
    faces.push(new Face(color1, v1[71], v1[87], v1[119], v1[103]));
    faces.push(new Face(color1, v1[72], v1[73], v1[75], v1[74]));
    faces.push(new Face(color1, v1[72], v1[73], v1[77], v1[76]));
    faces.push(new Face(color1, v1[72], v1[73], v1[89], v1[88]));
    faces.push(new Face(color1, v1[72], v1[73], v1[105], v1[104]));
    faces.push(new Face(color1, v1[72], v1[74], v1[78], v1[76]));
    faces.push(new Face(color1, v1[72], v1[74], v1[90], v1[88]));
    faces.push(new Face(color1, v1[72], v1[74], v1[106], v1[104]));
    faces.push(new Face(color1, v1[72], v1[76], v1[92], v1[88]));
    faces.push(new Face(color1, v1[72], v1[76], v1[108], v1[104]));
    faces.push(new Face(color1, v1[72], v1[88], v1[120], v1[104]));
    faces.push(new Face(color1, v1[73], v1[75], v1[79], v1[77]));
    faces.push(new Face(color1, v1[73], v1[75], v1[91], v1[89]));
    faces.push(new Face(color1, v1[73], v1[75], v1[107], v1[105]));
    faces.push(new Face(color1, v1[73], v1[77], v1[93], v1[89]));
    faces.push(new Face(color1, v1[73], v1[77], v1[109], v1[105]));
    faces.push(new Face(color1, v1[73], v1[89], v1[121], v1[105]));
    faces.push(new Face(color1, v1[74], v1[75], v1[79], v1[78]));
    faces.push(new Face(color1, v1[74], v1[75], v1[91], v1[90]));
    faces.push(new Face(color1, v1[74], v1[75], v1[107], v1[106]));
    faces.push(new Face(color1, v1[74], v1[78], v1[94], v1[90]));
    faces.push(new Face(color1, v1[74], v1[78], v1[110], v1[106]));
    faces.push(new Face(color1, v1[74], v1[90], v1[122], v1[106]));
    faces.push(new Face(color1, v1[75], v1[79], v1[95], v1[91]));
    faces.push(new Face(color1, v1[75], v1[79], v1[111], v1[107]));
    faces.push(new Face(color1, v1[75], v1[91], v1[123], v1[107]));
    faces.push(new Face(color1, v1[76], v1[77], v1[79], v1[78]));
    faces.push(new Face(color1, v1[76], v1[77], v1[93], v1[92]));
    faces.push(new Face(color1, v1[76], v1[77], v1[109], v1[108]));
    faces.push(new Face(color1, v1[76], v1[78], v1[94], v1[92]));
    faces.push(new Face(color1, v1[76], v1[78], v1[110], v1[108]));
    faces.push(new Face(color1, v1[76], v1[92], v1[124], v1[108]));
    faces.push(new Face(color1, v1[77], v1[79], v1[95], v1[93]));
    faces.push(new Face(color1, v1[77], v1[79], v1[111], v1[109]));
    faces.push(new Face(color1, v1[77], v1[93], v1[125], v1[109]));
    faces.push(new Face(color1, v1[78], v1[79], v1[95], v1[94]));
    faces.push(new Face(color1, v1[78], v1[79], v1[111], v1[110]));
    faces.push(new Face(color1, v1[78], v1[94], v1[126], v1[110]));
    faces.push(new Face(color1, v1[79], v1[95], v1[127], v1[111]));
    faces.push(new Face(color1, v1[80], v1[81], v1[83], v1[82]));
    faces.push(new Face(color1, v1[80], v1[81], v1[85], v1[84]));
    faces.push(new Face(color1, v1[80], v1[81], v1[89], v1[88]));
    faces.push(new Face(color1, v1[80], v1[81], v1[113], v1[112]));
    faces.push(new Face(color1, v1[80], v1[82], v1[86], v1[84]));
    faces.push(new Face(color1, v1[80], v1[82], v1[90], v1[88]));
    faces.push(new Face(color1, v1[80], v1[82], v1[114], v1[112]));
    faces.push(new Face(color1, v1[80], v1[84], v1[92], v1[88]));
    faces.push(new Face(color1, v1[80], v1[84], v1[116], v1[112]));
    faces.push(new Face(color1, v1[80], v1[88], v1[120], v1[112]));
    faces.push(new Face(color1, v1[81], v1[83], v1[87], v1[85]));
    faces.push(new Face(color1, v1[81], v1[83], v1[91], v1[89]));
    faces.push(new Face(color1, v1[81], v1[83], v1[115], v1[113]));
    faces.push(new Face(color1, v1[81], v1[85], v1[93], v1[89]));
    faces.push(new Face(color1, v1[81], v1[85], v1[117], v1[113]));
    faces.push(new Face(color1, v1[81], v1[89], v1[121], v1[113]));
    faces.push(new Face(color1, v1[82], v1[83], v1[87], v1[86]));
    faces.push(new Face(color1, v1[82], v1[83], v1[91], v1[90]));
    faces.push(new Face(color1, v1[82], v1[83], v1[115], v1[114]));
    faces.push(new Face(color1, v1[82], v1[86], v1[94], v1[90]));
    faces.push(new Face(color1, v1[82], v1[86], v1[118], v1[114]));
    faces.push(new Face(color1, v1[82], v1[90], v1[122], v1[114]));
    faces.push(new Face(color1, v1[83], v1[87], v1[95], v1[91]));
    faces.push(new Face(color1, v1[83], v1[87], v1[119], v1[115]));
    faces.push(new Face(color1, v1[83], v1[91], v1[123], v1[115]));
    faces.push(new Face(color1, v1[84], v1[85], v1[87], v1[86]));
    faces.push(new Face(color1, v1[84], v1[85], v1[93], v1[92]));
    faces.push(new Face(color1, v1[84], v1[85], v1[117], v1[116]));
    faces.push(new Face(color1, v1[84], v1[86], v1[94], v1[92]));
    faces.push(new Face(color1, v1[84], v1[86], v1[118], v1[116]));
    faces.push(new Face(color1, v1[84], v1[92], v1[124], v1[116]));
    faces.push(new Face(color1, v1[85], v1[87], v1[95], v1[93]));
    faces.push(new Face(color1, v1[85], v1[87], v1[119], v1[117]));
    faces.push(new Face(color1, v1[85], v1[93], v1[125], v1[117]));
    faces.push(new Face(color1, v1[86], v1[87], v1[95], v1[94]));
    faces.push(new Face(color1, v1[86], v1[87], v1[119], v1[118]));
    faces.push(new Face(color1, v1[86], v1[94], v1[126], v1[118]));
    faces.push(new Face(color1, v1[87], v1[95], v1[127], v1[119]));
    faces.push(new Face(color1, v1[88], v1[89], v1[91], v1[90]));
    faces.push(new Face(color1, v1[88], v1[89], v1[93], v1[92]));
    faces.push(new Face(color1, v1[88], v1[89], v1[121], v1[120]));
    faces.push(new Face(color1, v1[88], v1[90], v1[94], v1[92]));
    faces.push(new Face(color1, v1[88], v1[90], v1[122], v1[120]));
    faces.push(new Face(color1, v1[88], v1[92], v1[124], v1[120]));
    faces.push(new Face(color1, v1[89], v1[91], v1[95], v1[93]));
    faces.push(new Face(color1, v1[89], v1[91], v1[123], v1[121]));
    faces.push(new Face(color1, v1[89], v1[93], v1[125], v1[121]));
    faces.push(new Face(color1, v1[90], v1[91], v1[95], v1[94]));
    faces.push(new Face(color1, v1[90], v1[91], v1[123], v1[122]));
    faces.push(new Face(color1, v1[90], v1[94], v1[126], v1[122]));
    faces.push(new Face(color1, v1[91], v1[95], v1[127], v1[123]));
    faces.push(new Face(color1, v1[92], v1[93], v1[95], v1[94]));
    faces.push(new Face(color1, v1[92], v1[93], v1[125], v1[124]));
    faces.push(new Face(color1, v1[92], v1[94], v1[126], v1[124]));
    faces.push(new Face(color1, v1[93], v1[95], v1[127], v1[125]));
    faces.push(new Face(color1, v1[94], v1[95], v1[127], v1[126]));
    faces.push(new Face(color1, v1[96], v1[97], v1[99], v1[98]));
    faces.push(new Face(color1, v1[96], v1[97], v1[101], v1[100]));
    faces.push(new Face(color1, v1[96], v1[97], v1[105], v1[104]));
    faces.push(new Face(color1, v1[96], v1[97], v1[113], v1[112]));
    faces.push(new Face(color1, v1[96], v1[98], v1[102], v1[100]));
    faces.push(new Face(color1, v1[96], v1[98], v1[106], v1[104]));
    faces.push(new Face(color1, v1[96], v1[98], v1[114], v1[112]));
    faces.push(new Face(color1, v1[96], v1[100], v1[108], v1[104]));
    faces.push(new Face(color1, v1[96], v1[100], v1[116], v1[112]));
    faces.push(new Face(color1, v1[96], v1[104], v1[120], v1[112]));
    faces.push(new Face(color1, v1[97], v1[99], v1[103], v1[101]));
    faces.push(new Face(color1, v1[97], v1[99], v1[107], v1[105]));
    faces.push(new Face(color1, v1[97], v1[99], v1[115], v1[113]));
    faces.push(new Face(color1, v1[97], v1[101], v1[109], v1[105]));
    faces.push(new Face(color1, v1[97], v1[101], v1[117], v1[113]));
    faces.push(new Face(color1, v1[97], v1[105], v1[121], v1[113]));
    faces.push(new Face(color1, v1[98], v1[99], v1[103], v1[102]));
    faces.push(new Face(color1, v1[98], v1[99], v1[107], v1[106]));
    faces.push(new Face(color1, v1[98], v1[99], v1[115], v1[114]));
    faces.push(new Face(color1, v1[98], v1[102], v1[110], v1[106]));
    faces.push(new Face(color1, v1[98], v1[102], v1[118], v1[114]));
    faces.push(new Face(color1, v1[98], v1[106], v1[122], v1[114]));
    faces.push(new Face(color1, v1[99], v1[103], v1[111], v1[107]));
    faces.push(new Face(color1, v1[99], v1[103], v1[119], v1[115]));
    faces.push(new Face(color1, v1[99], v1[107], v1[123], v1[115]));
    faces.push(new Face(color1, v1[100], v1[101], v1[103], v1[102]));
    faces.push(new Face(color1, v1[100], v1[101], v1[109], v1[108]));
    faces.push(new Face(color1, v1[100], v1[101], v1[117], v1[116]));
    faces.push(new Face(color1, v1[100], v1[102], v1[110], v1[108]));
    faces.push(new Face(color1, v1[100], v1[102], v1[118], v1[116]));
    faces.push(new Face(color1, v1[100], v1[108], v1[124], v1[116]));
    faces.push(new Face(color1, v1[101], v1[103], v1[111], v1[109]));
    faces.push(new Face(color1, v1[101], v1[103], v1[119], v1[117]));
    faces.push(new Face(color1, v1[101], v1[109], v1[125], v1[117]));
    faces.push(new Face(color1, v1[102], v1[103], v1[111], v1[110]));
    faces.push(new Face(color1, v1[102], v1[103], v1[119], v1[118]));
    faces.push(new Face(color1, v1[102], v1[110], v1[126], v1[118]));
    faces.push(new Face(color1, v1[103], v1[111], v1[127], v1[119]));
    faces.push(new Face(color1, v1[104], v1[105], v1[107], v1[106]));
    faces.push(new Face(color1, v1[104], v1[105], v1[109], v1[108]));
    faces.push(new Face(color1, v1[104], v1[105], v1[121], v1[120]));
    faces.push(new Face(color1, v1[104], v1[106], v1[110], v1[108]));
    faces.push(new Face(color1, v1[104], v1[106], v1[122], v1[120]));
    faces.push(new Face(color1, v1[104], v1[108], v1[124], v1[120]));
    faces.push(new Face(color1, v1[105], v1[107], v1[111], v1[109]));
    faces.push(new Face(color1, v1[105], v1[107], v1[123], v1[121]));
    faces.push(new Face(color1, v1[105], v1[109], v1[125], v1[121]));
    faces.push(new Face(color1, v1[106], v1[107], v1[111], v1[110]));
    faces.push(new Face(color1, v1[106], v1[107], v1[123], v1[122]));
    faces.push(new Face(color1, v1[106], v1[110], v1[126], v1[122]));
    faces.push(new Face(color1, v1[107], v1[111], v1[127], v1[123]));
    faces.push(new Face(color1, v1[108], v1[109], v1[111], v1[110]));
    faces.push(new Face(color1, v1[108], v1[109], v1[125], v1[124]));
    faces.push(new Face(color1, v1[108], v1[110], v1[126], v1[124]));
    faces.push(new Face(color1, v1[109], v1[111], v1[127], v1[125]));
    faces.push(new Face(color1, v1[110], v1[111], v1[127], v1[126]));
    faces.push(new Face(color1, v1[112], v1[113], v1[115], v1[114]));
    faces.push(new Face(color1, v1[112], v1[113], v1[117], v1[116]));
    faces.push(new Face(color1, v1[112], v1[113], v1[121], v1[120]));
    faces.push(new Face(color1, v1[112], v1[114], v1[118], v1[116]));
    faces.push(new Face(color1, v1[112], v1[114], v1[122], v1[120]));
    faces.push(new Face(color1, v1[112], v1[116], v1[124], v1[120]));
    faces.push(new Face(color1, v1[113], v1[115], v1[119], v1[117]));
    faces.push(new Face(color1, v1[113], v1[115], v1[123], v1[121]));
    faces.push(new Face(color1, v1[113], v1[117], v1[125], v1[121]));
    faces.push(new Face(color1, v1[114], v1[115], v1[119], v1[118]));
    faces.push(new Face(color1, v1[114], v1[115], v1[123], v1[122]));
    faces.push(new Face(color1, v1[114], v1[118], v1[126], v1[122]));
    faces.push(new Face(color1, v1[115], v1[119], v1[127], v1[123]));
    faces.push(new Face(color1, v1[116], v1[117], v1[119], v1[118]));
    faces.push(new Face(color1, v1[116], v1[117], v1[125], v1[124]));
    faces.push(new Face(color1, v1[116], v1[118], v1[126], v1[124]));
    faces.push(new Face(color1, v1[117], v1[119], v1[127], v1[125]));
    faces.push(new Face(color1, v1[118], v1[119], v1[127], v1[126]));
    faces.push(new Face(color1, v1[120], v1[121], v1[123], v1[122]));
    faces.push(new Face(color1, v1[120], v1[121], v1[125], v1[124]));
    faces.push(new Face(color1, v1[120], v1[122], v1[126], v1[124]));
    faces.push(new Face(color1, v1[121], v1[123], v1[127], v1[125]));
    faces.push(new Face(color1, v1[122], v1[123], v1[127], v1[126]));
    faces.push(new Face(color1, v1[124], v1[125], v1[127], v1[126]));
    for (let i = 0; i < v1.length; i++) {
        v1[i].rotate(r);
        v1[i].project();
    }

    v2[0] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v2[1] = new Vertex(-w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v2[2] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v2[3] = new Vertex(-w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v2[4] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v2[5] = new Vertex(-w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v2[6] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v2[7] = new Vertex(-w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v2[8] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v2[9] = new Vertex(-w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v2[10] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v2[11] = new Vertex(-w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v2[12] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v2[13] = new Vertex(-w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v2[14] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2);
    v2[15] = new Vertex(-w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v2[16] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v2[17] = new Vertex(-w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v2[18] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v2[19] = new Vertex(-w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v2[20] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v2[21] = new Vertex(-w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v2[22] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2);
    v2[23] = new Vertex(-w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v2[24] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v2[25] = new Vertex(-w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v2[26] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2);
    v2[27] = new Vertex(-w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v2[28] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2);
    v2[29] = new Vertex(-w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v2[30] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, w/2, w/2, -w/2);
    v2[31] = new Vertex(-w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v2[32] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v2[33] = new Vertex(-w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v2[34] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v2[35] = new Vertex(-w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v2[36] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v2[37] = new Vertex(-w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v2[38] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v2[39] = new Vertex(-w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v2[40] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v2[41] = new Vertex(-w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v2[42] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v2[43] = new Vertex(-w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v2[44] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v2[45] = new Vertex(-w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v2[46] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, w/2, w/2, -w/2);
    v2[47] = new Vertex(-w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v2[48] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v2[49] = new Vertex(-w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v2[50] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v2[51] = new Vertex(-w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v2[52] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v2[53] = new Vertex(-w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v2[54] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, w/2, w/2, -w/2);
    v2[55] = new Vertex(-w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v2[56] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v2[57] = new Vertex(-w/2, -w/2-Math.sin(theta)*w, w/2, w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v2[58] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, -w/2, w/2, -w/2);
    v2[59] = new Vertex(-w/2, -w/2-Math.sin(theta)*w, w/2, w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v2[60] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, w/2, -w/2, -w/2);
    v2[61] = new Vertex(-w/2, -w/2-Math.sin(theta)*w, w/2, w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v2[62] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, w/2, w/2, -w/2);
    v2[63] = new Vertex(-w/2, -w/2-Math.sin(theta)*w, w/2, w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v2[64] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v2[65] = new Vertex(w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v2[66] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v2[67] = new Vertex(w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v2[68] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v2[69] = new Vertex(w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v2[70] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v2[71] = new Vertex(w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v2[72] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v2[73] = new Vertex(w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v2[74] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v2[75] = new Vertex(w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v2[76] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v2[77] = new Vertex(w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v2[78] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2);
    v2[79] = new Vertex(w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v2[80] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v2[81] = new Vertex(w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v2[82] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v2[83] = new Vertex(w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v2[84] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v2[85] = new Vertex(w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v2[86] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2);
    v2[87] = new Vertex(w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v2[88] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v2[89] = new Vertex(w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v2[90] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2);
    v2[91] = new Vertex(w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v2[92] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2);
    v2[93] = new Vertex(w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v2[94] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, w/2, w/2, -w/2);
    v2[95] = new Vertex(w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v2[96] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v2[97] = new Vertex(w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v2[98] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v2[99] = new Vertex(w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v2[100] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v2[101] = new Vertex(w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v2[102] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v2[103] = new Vertex(w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v2[104] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v2[105] = new Vertex(w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v2[106] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v2[107] = new Vertex(w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v2[108] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v2[109] = new Vertex(w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v2[110] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, w/2, w/2, -w/2);
    v2[111] = new Vertex(w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v2[112] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v2[113] = new Vertex(w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v2[114] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v2[115] = new Vertex(w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v2[116] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v2[117] = new Vertex(w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v2[118] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, w/2, w/2, -w/2);
    v2[119] = new Vertex(w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v2[120] = new Vertex(w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v2[121] = new Vertex(w/2, -w/2-Math.sin(theta)*w, w/2, w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v2[122] = new Vertex(w/2, -w/2, w/2, w/2, w/2, -w/2, w/2, -w/2);
    v2[123] = new Vertex(w/2, -w/2-Math.sin(theta)*w, w/2, w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v2[124] = new Vertex(w/2, -w/2, w/2, w/2, w/2, w/2, -w/2, -w/2);
    v2[125] = new Vertex(w/2, -w/2-Math.sin(theta)*w, w/2, w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v2[126] = new Vertex(w/2, -w/2, w/2, w/2, w/2, w/2, w/2, -w/2);
    v2[127] = new Vertex(w/2, -w/2-Math.sin(theta)*w, w/2, w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    faces.push(new Face(color2, v2[0], v2[1], v2[3], v2[2]));
    faces.push(new Face(color2, v2[0], v2[1], v2[5], v2[4]));
    faces.push(new Face(color2, v2[0], v2[1], v2[9], v2[8]));
    faces.push(new Face(color2, v2[0], v2[1], v2[17], v2[16]));
    faces.push(new Face(color2, v2[0], v2[1], v2[33], v2[32]));
    faces.push(new Face(color2, v2[0], v2[1], v2[65], v2[64]));
    faces.push(new Face(color2, v2[0], v2[2], v2[6], v2[4]));
    faces.push(new Face(color2, v2[0], v2[2], v2[10], v2[8]));
    faces.push(new Face(color2, v2[0], v2[2], v2[18], v2[16]));
    faces.push(new Face(color2, v2[0], v2[2], v2[34], v2[32]));
    faces.push(new Face(color2, v2[0], v2[2], v2[66], v2[64]));
    faces.push(new Face(color2, v2[0], v2[4], v2[12], v2[8]));
    faces.push(new Face(color2, v2[0], v2[4], v2[20], v2[16]));
    faces.push(new Face(color2, v2[0], v2[4], v2[36], v2[32]));
    faces.push(new Face(color2, v2[0], v2[4], v2[68], v2[64]));
    faces.push(new Face(color2, v2[0], v2[8], v2[24], v2[16]));
    faces.push(new Face(color2, v2[0], v2[8], v2[40], v2[32]));
    faces.push(new Face(color2, v2[0], v2[8], v2[72], v2[64]));
    faces.push(new Face(color2, v2[0], v2[16], v2[48], v2[32]));
    faces.push(new Face(color2, v2[0], v2[16], v2[80], v2[64]));
    faces.push(new Face(color2, v2[0], v2[32], v2[96], v2[64]));
    faces.push(new Face(color2, v2[1], v2[3], v2[7], v2[5]));
    faces.push(new Face(color2, v2[1], v2[3], v2[11], v2[9]));
    faces.push(new Face(color2, v2[1], v2[3], v2[19], v2[17]));
    faces.push(new Face(color2, v2[1], v2[3], v2[35], v2[33]));
    faces.push(new Face(color2, v2[1], v2[3], v2[67], v2[65]));
    faces.push(new Face(color2, v2[1], v2[5], v2[13], v2[9]));
    faces.push(new Face(color2, v2[1], v2[5], v2[21], v2[17]));
    faces.push(new Face(color2, v2[1], v2[5], v2[37], v2[33]));
    faces.push(new Face(color2, v2[1], v2[5], v2[69], v2[65]));
    faces.push(new Face(color2, v2[1], v2[9], v2[25], v2[17]));
    faces.push(new Face(color2, v2[1], v2[9], v2[41], v2[33]));
    faces.push(new Face(color2, v2[1], v2[9], v2[73], v2[65]));
    faces.push(new Face(color2, v2[1], v2[17], v2[49], v2[33]));
    faces.push(new Face(color2, v2[1], v2[17], v2[81], v2[65]));
    faces.push(new Face(color2, v2[1], v2[33], v2[97], v2[65]));
    faces.push(new Face(color2, v2[2], v2[3], v2[7], v2[6]));
    faces.push(new Face(color2, v2[2], v2[3], v2[11], v2[10]));
    faces.push(new Face(color2, v2[2], v2[3], v2[19], v2[18]));
    faces.push(new Face(color2, v2[2], v2[3], v2[35], v2[34]));
    faces.push(new Face(color2, v2[2], v2[3], v2[67], v2[66]));
    faces.push(new Face(color2, v2[2], v2[6], v2[14], v2[10]));
    faces.push(new Face(color2, v2[2], v2[6], v2[22], v2[18]));
    faces.push(new Face(color2, v2[2], v2[6], v2[38], v2[34]));
    faces.push(new Face(color2, v2[2], v2[6], v2[70], v2[66]));
    faces.push(new Face(color2, v2[2], v2[10], v2[26], v2[18]));
    faces.push(new Face(color2, v2[2], v2[10], v2[42], v2[34]));
    faces.push(new Face(color2, v2[2], v2[10], v2[74], v2[66]));
    faces.push(new Face(color2, v2[2], v2[18], v2[50], v2[34]));
    faces.push(new Face(color2, v2[2], v2[18], v2[82], v2[66]));
    faces.push(new Face(color2, v2[2], v2[34], v2[98], v2[66]));
    faces.push(new Face(color2, v2[3], v2[7], v2[15], v2[11]));
    faces.push(new Face(color2, v2[3], v2[7], v2[23], v2[19]));
    faces.push(new Face(color2, v2[3], v2[7], v2[39], v2[35]));
    faces.push(new Face(color2, v2[3], v2[7], v2[71], v2[67]));
    faces.push(new Face(color2, v2[3], v2[11], v2[27], v2[19]));
    faces.push(new Face(color2, v2[3], v2[11], v2[43], v2[35]));
    faces.push(new Face(color2, v2[3], v2[11], v2[75], v2[67]));
    faces.push(new Face(color2, v2[3], v2[19], v2[51], v2[35]));
    faces.push(new Face(color2, v2[3], v2[19], v2[83], v2[67]));
    faces.push(new Face(color2, v2[3], v2[35], v2[99], v2[67]));
    faces.push(new Face(color2, v2[4], v2[5], v2[7], v2[6]));
    faces.push(new Face(color2, v2[4], v2[5], v2[13], v2[12]));
    faces.push(new Face(color2, v2[4], v2[5], v2[21], v2[20]));
    faces.push(new Face(color2, v2[4], v2[5], v2[37], v2[36]));
    faces.push(new Face(color2, v2[4], v2[5], v2[69], v2[68]));
    faces.push(new Face(color2, v2[4], v2[6], v2[14], v2[12]));
    faces.push(new Face(color2, v2[4], v2[6], v2[22], v2[20]));
    faces.push(new Face(color2, v2[4], v2[6], v2[38], v2[36]));
    faces.push(new Face(color2, v2[4], v2[6], v2[70], v2[68]));
    faces.push(new Face(color2, v2[4], v2[12], v2[28], v2[20]));
    faces.push(new Face(color2, v2[4], v2[12], v2[44], v2[36]));
    faces.push(new Face(color2, v2[4], v2[12], v2[76], v2[68]));
    faces.push(new Face(color2, v2[4], v2[20], v2[52], v2[36]));
    faces.push(new Face(color2, v2[4], v2[20], v2[84], v2[68]));
    faces.push(new Face(color2, v2[4], v2[36], v2[100], v2[68]));
    faces.push(new Face(color2, v2[5], v2[7], v2[15], v2[13]));
    faces.push(new Face(color2, v2[5], v2[7], v2[23], v2[21]));
    faces.push(new Face(color2, v2[5], v2[7], v2[39], v2[37]));
    faces.push(new Face(color2, v2[5], v2[7], v2[71], v2[69]));
    faces.push(new Face(color2, v2[5], v2[13], v2[29], v2[21]));
    faces.push(new Face(color2, v2[5], v2[13], v2[45], v2[37]));
    faces.push(new Face(color2, v2[5], v2[13], v2[77], v2[69]));
    faces.push(new Face(color2, v2[5], v2[21], v2[53], v2[37]));
    faces.push(new Face(color2, v2[5], v2[21], v2[85], v2[69]));
    faces.push(new Face(color2, v2[5], v2[37], v2[101], v2[69]));
    faces.push(new Face(color2, v2[6], v2[7], v2[15], v2[14]));
    faces.push(new Face(color2, v2[6], v2[7], v2[23], v2[22]));
    faces.push(new Face(color2, v2[6], v2[7], v2[39], v2[38]));
    faces.push(new Face(color2, v2[6], v2[7], v2[71], v2[70]));
    faces.push(new Face(color2, v2[6], v2[14], v2[30], v2[22]));
    faces.push(new Face(color2, v2[6], v2[14], v2[46], v2[38]));
    faces.push(new Face(color2, v2[6], v2[14], v2[78], v2[70]));
    faces.push(new Face(color2, v2[6], v2[22], v2[54], v2[38]));
    faces.push(new Face(color2, v2[6], v2[22], v2[86], v2[70]));
    faces.push(new Face(color2, v2[6], v2[38], v2[102], v2[70]));
    faces.push(new Face(color2, v2[7], v2[15], v2[31], v2[23]));
    faces.push(new Face(color2, v2[7], v2[15], v2[47], v2[39]));
    faces.push(new Face(color2, v2[7], v2[15], v2[79], v2[71]));
    faces.push(new Face(color2, v2[7], v2[23], v2[55], v2[39]));
    faces.push(new Face(color2, v2[7], v2[23], v2[87], v2[71]));
    faces.push(new Face(color2, v2[7], v2[39], v2[103], v2[71]));
    faces.push(new Face(color2, v2[8], v2[9], v2[11], v2[10]));
    faces.push(new Face(color2, v2[8], v2[9], v2[13], v2[12]));
    faces.push(new Face(color2, v2[8], v2[9], v2[25], v2[24]));
    faces.push(new Face(color2, v2[8], v2[9], v2[41], v2[40]));
    faces.push(new Face(color2, v2[8], v2[9], v2[73], v2[72]));
    faces.push(new Face(color2, v2[8], v2[10], v2[14], v2[12]));
    faces.push(new Face(color2, v2[8], v2[10], v2[26], v2[24]));
    faces.push(new Face(color2, v2[8], v2[10], v2[42], v2[40]));
    faces.push(new Face(color2, v2[8], v2[10], v2[74], v2[72]));
    faces.push(new Face(color2, v2[8], v2[12], v2[28], v2[24]));
    faces.push(new Face(color2, v2[8], v2[12], v2[44], v2[40]));
    faces.push(new Face(color2, v2[8], v2[12], v2[76], v2[72]));
    faces.push(new Face(color2, v2[8], v2[24], v2[56], v2[40]));
    faces.push(new Face(color2, v2[8], v2[24], v2[88], v2[72]));
    faces.push(new Face(color2, v2[8], v2[40], v2[104], v2[72]));
    faces.push(new Face(color2, v2[9], v2[11], v2[15], v2[13]));
    faces.push(new Face(color2, v2[9], v2[11], v2[27], v2[25]));
    faces.push(new Face(color2, v2[9], v2[11], v2[43], v2[41]));
    faces.push(new Face(color2, v2[9], v2[11], v2[75], v2[73]));
    faces.push(new Face(color2, v2[9], v2[13], v2[29], v2[25]));
    faces.push(new Face(color2, v2[9], v2[13], v2[45], v2[41]));
    faces.push(new Face(color2, v2[9], v2[13], v2[77], v2[73]));
    faces.push(new Face(color2, v2[9], v2[25], v2[57], v2[41]));
    faces.push(new Face(color2, v2[9], v2[25], v2[89], v2[73]));
    faces.push(new Face(color2, v2[9], v2[41], v2[105], v2[73]));
    faces.push(new Face(color2, v2[10], v2[11], v2[15], v2[14]));
    faces.push(new Face(color2, v2[10], v2[11], v2[27], v2[26]));
    faces.push(new Face(color2, v2[10], v2[11], v2[43], v2[42]));
    faces.push(new Face(color2, v2[10], v2[11], v2[75], v2[74]));
    faces.push(new Face(color2, v2[10], v2[14], v2[30], v2[26]));
    faces.push(new Face(color2, v2[10], v2[14], v2[46], v2[42]));
    faces.push(new Face(color2, v2[10], v2[14], v2[78], v2[74]));
    faces.push(new Face(color2, v2[10], v2[26], v2[58], v2[42]));
    faces.push(new Face(color2, v2[10], v2[26], v2[90], v2[74]));
    faces.push(new Face(color2, v2[10], v2[42], v2[106], v2[74]));
    faces.push(new Face(color2, v2[11], v2[15], v2[31], v2[27]));
    faces.push(new Face(color2, v2[11], v2[15], v2[47], v2[43]));
    faces.push(new Face(color2, v2[11], v2[15], v2[79], v2[75]));
    faces.push(new Face(color2, v2[11], v2[27], v2[59], v2[43]));
    faces.push(new Face(color2, v2[11], v2[27], v2[91], v2[75]));
    faces.push(new Face(color2, v2[11], v2[43], v2[107], v2[75]));
    faces.push(new Face(color2, v2[12], v2[13], v2[15], v2[14]));
    faces.push(new Face(color2, v2[12], v2[13], v2[29], v2[28]));
    faces.push(new Face(color2, v2[12], v2[13], v2[45], v2[44]));
    faces.push(new Face(color2, v2[12], v2[13], v2[77], v2[76]));
    faces.push(new Face(color2, v2[12], v2[14], v2[30], v2[28]));
    faces.push(new Face(color2, v2[12], v2[14], v2[46], v2[44]));
    faces.push(new Face(color2, v2[12], v2[14], v2[78], v2[76]));
    faces.push(new Face(color2, v2[12], v2[28], v2[60], v2[44]));
    faces.push(new Face(color2, v2[12], v2[28], v2[92], v2[76]));
    faces.push(new Face(color2, v2[12], v2[44], v2[108], v2[76]));
    faces.push(new Face(color2, v2[13], v2[15], v2[31], v2[29]));
    faces.push(new Face(color2, v2[13], v2[15], v2[47], v2[45]));
    faces.push(new Face(color2, v2[13], v2[15], v2[79], v2[77]));
    faces.push(new Face(color2, v2[13], v2[29], v2[61], v2[45]));
    faces.push(new Face(color2, v2[13], v2[29], v2[93], v2[77]));
    faces.push(new Face(color2, v2[13], v2[45], v2[109], v2[77]));
    faces.push(new Face(color2, v2[14], v2[15], v2[31], v2[30]));
    faces.push(new Face(color2, v2[14], v2[15], v2[47], v2[46]));
    faces.push(new Face(color2, v2[14], v2[15], v2[79], v2[78]));
    faces.push(new Face(color2, v2[14], v2[30], v2[62], v2[46]));
    faces.push(new Face(color2, v2[14], v2[30], v2[94], v2[78]));
    faces.push(new Face(color2, v2[14], v2[46], v2[110], v2[78]));
    faces.push(new Face(color2, v2[15], v2[31], v2[63], v2[47]));
    faces.push(new Face(color2, v2[15], v2[31], v2[95], v2[79]));
    faces.push(new Face(color2, v2[15], v2[47], v2[111], v2[79]));
    faces.push(new Face(color2, v2[16], v2[17], v2[19], v2[18]));
    faces.push(new Face(color2, v2[16], v2[17], v2[21], v2[20]));
    faces.push(new Face(color2, v2[16], v2[17], v2[25], v2[24]));
    faces.push(new Face(color2, v2[16], v2[17], v2[49], v2[48]));
    faces.push(new Face(color2, v2[16], v2[17], v2[81], v2[80]));
    faces.push(new Face(color2, v2[16], v2[18], v2[22], v2[20]));
    faces.push(new Face(color2, v2[16], v2[18], v2[26], v2[24]));
    faces.push(new Face(color2, v2[16], v2[18], v2[50], v2[48]));
    faces.push(new Face(color2, v2[16], v2[18], v2[82], v2[80]));
    faces.push(new Face(color2, v2[16], v2[20], v2[28], v2[24]));
    faces.push(new Face(color2, v2[16], v2[20], v2[52], v2[48]));
    faces.push(new Face(color2, v2[16], v2[20], v2[84], v2[80]));
    faces.push(new Face(color2, v2[16], v2[24], v2[56], v2[48]));
    faces.push(new Face(color2, v2[16], v2[24], v2[88], v2[80]));
    faces.push(new Face(color2, v2[16], v2[48], v2[112], v2[80]));
    faces.push(new Face(color2, v2[17], v2[19], v2[23], v2[21]));
    faces.push(new Face(color2, v2[17], v2[19], v2[27], v2[25]));
    faces.push(new Face(color2, v2[17], v2[19], v2[51], v2[49]));
    faces.push(new Face(color2, v2[17], v2[19], v2[83], v2[81]));
    faces.push(new Face(color2, v2[17], v2[21], v2[29], v2[25]));
    faces.push(new Face(color2, v2[17], v2[21], v2[53], v2[49]));
    faces.push(new Face(color2, v2[17], v2[21], v2[85], v2[81]));
    faces.push(new Face(color2, v2[17], v2[25], v2[57], v2[49]));
    faces.push(new Face(color2, v2[17], v2[25], v2[89], v2[81]));
    faces.push(new Face(color2, v2[17], v2[49], v2[113], v2[81]));
    faces.push(new Face(color2, v2[18], v2[19], v2[23], v2[22]));
    faces.push(new Face(color2, v2[18], v2[19], v2[27], v2[26]));
    faces.push(new Face(color2, v2[18], v2[19], v2[51], v2[50]));
    faces.push(new Face(color2, v2[18], v2[19], v2[83], v2[82]));
    faces.push(new Face(color2, v2[18], v2[22], v2[30], v2[26]));
    faces.push(new Face(color2, v2[18], v2[22], v2[54], v2[50]));
    faces.push(new Face(color2, v2[18], v2[22], v2[86], v2[82]));
    faces.push(new Face(color2, v2[18], v2[26], v2[58], v2[50]));
    faces.push(new Face(color2, v2[18], v2[26], v2[90], v2[82]));
    faces.push(new Face(color2, v2[18], v2[50], v2[114], v2[82]));
    faces.push(new Face(color2, v2[19], v2[23], v2[31], v2[27]));
    faces.push(new Face(color2, v2[19], v2[23], v2[55], v2[51]));
    faces.push(new Face(color2, v2[19], v2[23], v2[87], v2[83]));
    faces.push(new Face(color2, v2[19], v2[27], v2[59], v2[51]));
    faces.push(new Face(color2, v2[19], v2[27], v2[91], v2[83]));
    faces.push(new Face(color2, v2[19], v2[51], v2[115], v2[83]));
    faces.push(new Face(color2, v2[20], v2[21], v2[23], v2[22]));
    faces.push(new Face(color2, v2[20], v2[21], v2[29], v2[28]));
    faces.push(new Face(color2, v2[20], v2[21], v2[53], v2[52]));
    faces.push(new Face(color2, v2[20], v2[21], v2[85], v2[84]));
    faces.push(new Face(color2, v2[20], v2[22], v2[30], v2[28]));
    faces.push(new Face(color2, v2[20], v2[22], v2[54], v2[52]));
    faces.push(new Face(color2, v2[20], v2[22], v2[86], v2[84]));
    faces.push(new Face(color2, v2[20], v2[28], v2[60], v2[52]));
    faces.push(new Face(color2, v2[20], v2[28], v2[92], v2[84]));
    faces.push(new Face(color2, v2[20], v2[52], v2[116], v2[84]));
    faces.push(new Face(color2, v2[21], v2[23], v2[31], v2[29]));
    faces.push(new Face(color2, v2[21], v2[23], v2[55], v2[53]));
    faces.push(new Face(color2, v2[21], v2[23], v2[87], v2[85]));
    faces.push(new Face(color2, v2[21], v2[29], v2[61], v2[53]));
    faces.push(new Face(color2, v2[21], v2[29], v2[93], v2[85]));
    faces.push(new Face(color2, v2[21], v2[53], v2[117], v2[85]));
    faces.push(new Face(color2, v2[22], v2[23], v2[31], v2[30]));
    faces.push(new Face(color2, v2[22], v2[23], v2[55], v2[54]));
    faces.push(new Face(color2, v2[22], v2[23], v2[87], v2[86]));
    faces.push(new Face(color2, v2[22], v2[30], v2[62], v2[54]));
    faces.push(new Face(color2, v2[22], v2[30], v2[94], v2[86]));
    faces.push(new Face(color2, v2[22], v2[54], v2[118], v2[86]));
    faces.push(new Face(color2, v2[23], v2[31], v2[63], v2[55]));
    faces.push(new Face(color2, v2[23], v2[31], v2[95], v2[87]));
    faces.push(new Face(color2, v2[23], v2[55], v2[119], v2[87]));
    faces.push(new Face(color2, v2[24], v2[25], v2[27], v2[26]));
    faces.push(new Face(color2, v2[24], v2[25], v2[29], v2[28]));
    faces.push(new Face(color2, v2[24], v2[25], v2[57], v2[56]));
    faces.push(new Face(color2, v2[24], v2[25], v2[89], v2[88]));
    faces.push(new Face(color2, v2[24], v2[26], v2[30], v2[28]));
    faces.push(new Face(color2, v2[24], v2[26], v2[58], v2[56]));
    faces.push(new Face(color2, v2[24], v2[26], v2[90], v2[88]));
    faces.push(new Face(color2, v2[24], v2[28], v2[60], v2[56]));
    faces.push(new Face(color2, v2[24], v2[28], v2[92], v2[88]));
    faces.push(new Face(color2, v2[24], v2[56], v2[120], v2[88]));
    faces.push(new Face(color2, v2[25], v2[27], v2[31], v2[29]));
    faces.push(new Face(color2, v2[25], v2[27], v2[59], v2[57]));
    faces.push(new Face(color2, v2[25], v2[27], v2[91], v2[89]));
    faces.push(new Face(color2, v2[25], v2[29], v2[61], v2[57]));
    faces.push(new Face(color2, v2[25], v2[29], v2[93], v2[89]));
    faces.push(new Face(color2, v2[25], v2[57], v2[121], v2[89]));
    faces.push(new Face(color2, v2[26], v2[27], v2[31], v2[30]));
    faces.push(new Face(color2, v2[26], v2[27], v2[59], v2[58]));
    faces.push(new Face(color2, v2[26], v2[27], v2[91], v2[90]));
    faces.push(new Face(color2, v2[26], v2[30], v2[62], v2[58]));
    faces.push(new Face(color2, v2[26], v2[30], v2[94], v2[90]));
    faces.push(new Face(color2, v2[26], v2[58], v2[122], v2[90]));
    faces.push(new Face(color2, v2[27], v2[31], v2[63], v2[59]));
    faces.push(new Face(color2, v2[27], v2[31], v2[95], v2[91]));
    faces.push(new Face(color2, v2[27], v2[59], v2[123], v2[91]));
    faces.push(new Face(color2, v2[28], v2[29], v2[31], v2[30]));
    faces.push(new Face(color2, v2[28], v2[29], v2[61], v2[60]));
    faces.push(new Face(color2, v2[28], v2[29], v2[93], v2[92]));
    faces.push(new Face(color2, v2[28], v2[30], v2[62], v2[60]));
    faces.push(new Face(color2, v2[28], v2[30], v2[94], v2[92]));
    faces.push(new Face(color2, v2[28], v2[60], v2[124], v2[92]));
    faces.push(new Face(color2, v2[29], v2[31], v2[63], v2[61]));
    faces.push(new Face(color2, v2[29], v2[31], v2[95], v2[93]));
    faces.push(new Face(color2, v2[29], v2[61], v2[125], v2[93]));
    faces.push(new Face(color2, v2[30], v2[31], v2[63], v2[62]));
    faces.push(new Face(color2, v2[30], v2[31], v2[95], v2[94]));
    faces.push(new Face(color2, v2[30], v2[62], v2[126], v2[94]));
    faces.push(new Face(color2, v2[31], v2[63], v2[127], v2[95]));
    faces.push(new Face(color2, v2[32], v2[33], v2[35], v2[34]));
    faces.push(new Face(color2, v2[32], v2[33], v2[37], v2[36]));
    faces.push(new Face(color2, v2[32], v2[33], v2[41], v2[40]));
    faces.push(new Face(color2, v2[32], v2[33], v2[49], v2[48]));
    faces.push(new Face(color2, v2[32], v2[33], v2[97], v2[96]));
    faces.push(new Face(color2, v2[32], v2[34], v2[38], v2[36]));
    faces.push(new Face(color2, v2[32], v2[34], v2[42], v2[40]));
    faces.push(new Face(color2, v2[32], v2[34], v2[50], v2[48]));
    faces.push(new Face(color2, v2[32], v2[34], v2[98], v2[96]));
    faces.push(new Face(color2, v2[32], v2[36], v2[44], v2[40]));
    faces.push(new Face(color2, v2[32], v2[36], v2[52], v2[48]));
    faces.push(new Face(color2, v2[32], v2[36], v2[100], v2[96]));
    faces.push(new Face(color2, v2[32], v2[40], v2[56], v2[48]));
    faces.push(new Face(color2, v2[32], v2[40], v2[104], v2[96]));
    faces.push(new Face(color2, v2[32], v2[48], v2[112], v2[96]));
    faces.push(new Face(color2, v2[33], v2[35], v2[39], v2[37]));
    faces.push(new Face(color2, v2[33], v2[35], v2[43], v2[41]));
    faces.push(new Face(color2, v2[33], v2[35], v2[51], v2[49]));
    faces.push(new Face(color2, v2[33], v2[35], v2[99], v2[97]));
    faces.push(new Face(color2, v2[33], v2[37], v2[45], v2[41]));
    faces.push(new Face(color2, v2[33], v2[37], v2[53], v2[49]));
    faces.push(new Face(color2, v2[33], v2[37], v2[101], v2[97]));
    faces.push(new Face(color2, v2[33], v2[41], v2[57], v2[49]));
    faces.push(new Face(color2, v2[33], v2[41], v2[105], v2[97]));
    faces.push(new Face(color2, v2[33], v2[49], v2[113], v2[97]));
    faces.push(new Face(color2, v2[34], v2[35], v2[39], v2[38]));
    faces.push(new Face(color2, v2[34], v2[35], v2[43], v2[42]));
    faces.push(new Face(color2, v2[34], v2[35], v2[51], v2[50]));
    faces.push(new Face(color2, v2[34], v2[35], v2[99], v2[98]));
    faces.push(new Face(color2, v2[34], v2[38], v2[46], v2[42]));
    faces.push(new Face(color2, v2[34], v2[38], v2[54], v2[50]));
    faces.push(new Face(color2, v2[34], v2[38], v2[102], v2[98]));
    faces.push(new Face(color2, v2[34], v2[42], v2[58], v2[50]));
    faces.push(new Face(color2, v2[34], v2[42], v2[106], v2[98]));
    faces.push(new Face(color2, v2[34], v2[50], v2[114], v2[98]));
    faces.push(new Face(color2, v2[35], v2[39], v2[47], v2[43]));
    faces.push(new Face(color2, v2[35], v2[39], v2[55], v2[51]));
    faces.push(new Face(color2, v2[35], v2[39], v2[103], v2[99]));
    faces.push(new Face(color2, v2[35], v2[43], v2[59], v2[51]));
    faces.push(new Face(color2, v2[35], v2[43], v2[107], v2[99]));
    faces.push(new Face(color2, v2[35], v2[51], v2[115], v2[99]));
    faces.push(new Face(color2, v2[36], v2[37], v2[39], v2[38]));
    faces.push(new Face(color2, v2[36], v2[37], v2[45], v2[44]));
    faces.push(new Face(color2, v2[36], v2[37], v2[53], v2[52]));
    faces.push(new Face(color2, v2[36], v2[37], v2[101], v2[100]));
    faces.push(new Face(color2, v2[36], v2[38], v2[46], v2[44]));
    faces.push(new Face(color2, v2[36], v2[38], v2[54], v2[52]));
    faces.push(new Face(color2, v2[36], v2[38], v2[102], v2[100]));
    faces.push(new Face(color2, v2[36], v2[44], v2[60], v2[52]));
    faces.push(new Face(color2, v2[36], v2[44], v2[108], v2[100]));
    faces.push(new Face(color2, v2[36], v2[52], v2[116], v2[100]));
    faces.push(new Face(color2, v2[37], v2[39], v2[47], v2[45]));
    faces.push(new Face(color2, v2[37], v2[39], v2[55], v2[53]));
    faces.push(new Face(color2, v2[37], v2[39], v2[103], v2[101]));
    faces.push(new Face(color2, v2[37], v2[45], v2[61], v2[53]));
    faces.push(new Face(color2, v2[37], v2[45], v2[109], v2[101]));
    faces.push(new Face(color2, v2[37], v2[53], v2[117], v2[101]));
    faces.push(new Face(color2, v2[38], v2[39], v2[47], v2[46]));
    faces.push(new Face(color2, v2[38], v2[39], v2[55], v2[54]));
    faces.push(new Face(color2, v2[38], v2[39], v2[103], v2[102]));
    faces.push(new Face(color2, v2[38], v2[46], v2[62], v2[54]));
    faces.push(new Face(color2, v2[38], v2[46], v2[110], v2[102]));
    faces.push(new Face(color2, v2[38], v2[54], v2[118], v2[102]));
    faces.push(new Face(color2, v2[39], v2[47], v2[63], v2[55]));
    faces.push(new Face(color2, v2[39], v2[47], v2[111], v2[103]));
    faces.push(new Face(color2, v2[39], v2[55], v2[119], v2[103]));
    faces.push(new Face(color2, v2[40], v2[41], v2[43], v2[42]));
    faces.push(new Face(color2, v2[40], v2[41], v2[45], v2[44]));
    faces.push(new Face(color2, v2[40], v2[41], v2[57], v2[56]));
    faces.push(new Face(color2, v2[40], v2[41], v2[105], v2[104]));
    faces.push(new Face(color2, v2[40], v2[42], v2[46], v2[44]));
    faces.push(new Face(color2, v2[40], v2[42], v2[58], v2[56]));
    faces.push(new Face(color2, v2[40], v2[42], v2[106], v2[104]));
    faces.push(new Face(color2, v2[40], v2[44], v2[60], v2[56]));
    faces.push(new Face(color2, v2[40], v2[44], v2[108], v2[104]));
    faces.push(new Face(color2, v2[40], v2[56], v2[120], v2[104]));
    faces.push(new Face(color2, v2[41], v2[43], v2[47], v2[45]));
    faces.push(new Face(color2, v2[41], v2[43], v2[59], v2[57]));
    faces.push(new Face(color2, v2[41], v2[43], v2[107], v2[105]));
    faces.push(new Face(color2, v2[41], v2[45], v2[61], v2[57]));
    faces.push(new Face(color2, v2[41], v2[45], v2[109], v2[105]));
    faces.push(new Face(color2, v2[41], v2[57], v2[121], v2[105]));
    faces.push(new Face(color2, v2[42], v2[43], v2[47], v2[46]));
    faces.push(new Face(color2, v2[42], v2[43], v2[59], v2[58]));
    faces.push(new Face(color2, v2[42], v2[43], v2[107], v2[106]));
    faces.push(new Face(color2, v2[42], v2[46], v2[62], v2[58]));
    faces.push(new Face(color2, v2[42], v2[46], v2[110], v2[106]));
    faces.push(new Face(color2, v2[42], v2[58], v2[122], v2[106]));
    faces.push(new Face(color2, v2[43], v2[47], v2[63], v2[59]));
    faces.push(new Face(color2, v2[43], v2[47], v2[111], v2[107]));
    faces.push(new Face(color2, v2[43], v2[59], v2[123], v2[107]));
    faces.push(new Face(color2, v2[44], v2[45], v2[47], v2[46]));
    faces.push(new Face(color2, v2[44], v2[45], v2[61], v2[60]));
    faces.push(new Face(color2, v2[44], v2[45], v2[109], v2[108]));
    faces.push(new Face(color2, v2[44], v2[46], v2[62], v2[60]));
    faces.push(new Face(color2, v2[44], v2[46], v2[110], v2[108]));
    faces.push(new Face(color2, v2[44], v2[60], v2[124], v2[108]));
    faces.push(new Face(color2, v2[45], v2[47], v2[63], v2[61]));
    faces.push(new Face(color2, v2[45], v2[47], v2[111], v2[109]));
    faces.push(new Face(color2, v2[45], v2[61], v2[125], v2[109]));
    faces.push(new Face(color2, v2[46], v2[47], v2[63], v2[62]));
    faces.push(new Face(color2, v2[46], v2[47], v2[111], v2[110]));
    faces.push(new Face(color2, v2[46], v2[62], v2[126], v2[110]));
    faces.push(new Face(color2, v2[47], v2[63], v2[127], v2[111]));
    faces.push(new Face(color2, v2[48], v2[49], v2[51], v2[50]));
    faces.push(new Face(color2, v2[48], v2[49], v2[53], v2[52]));
    faces.push(new Face(color2, v2[48], v2[49], v2[57], v2[56]));
    faces.push(new Face(color2, v2[48], v2[49], v2[113], v2[112]));
    faces.push(new Face(color2, v2[48], v2[50], v2[54], v2[52]));
    faces.push(new Face(color2, v2[48], v2[50], v2[58], v2[56]));
    faces.push(new Face(color2, v2[48], v2[50], v2[114], v2[112]));
    faces.push(new Face(color2, v2[48], v2[52], v2[60], v2[56]));
    faces.push(new Face(color2, v2[48], v2[52], v2[116], v2[112]));
    faces.push(new Face(color2, v2[48], v2[56], v2[120], v2[112]));
    faces.push(new Face(color2, v2[49], v2[51], v2[55], v2[53]));
    faces.push(new Face(color2, v2[49], v2[51], v2[59], v2[57]));
    faces.push(new Face(color2, v2[49], v2[51], v2[115], v2[113]));
    faces.push(new Face(color2, v2[49], v2[53], v2[61], v2[57]));
    faces.push(new Face(color2, v2[49], v2[53], v2[117], v2[113]));
    faces.push(new Face(color2, v2[49], v2[57], v2[121], v2[113]));
    faces.push(new Face(color2, v2[50], v2[51], v2[55], v2[54]));
    faces.push(new Face(color2, v2[50], v2[51], v2[59], v2[58]));
    faces.push(new Face(color2, v2[50], v2[51], v2[115], v2[114]));
    faces.push(new Face(color2, v2[50], v2[54], v2[62], v2[58]));
    faces.push(new Face(color2, v2[50], v2[54], v2[118], v2[114]));
    faces.push(new Face(color2, v2[50], v2[58], v2[122], v2[114]));
    faces.push(new Face(color2, v2[51], v2[55], v2[63], v2[59]));
    faces.push(new Face(color2, v2[51], v2[55], v2[119], v2[115]));
    faces.push(new Face(color2, v2[51], v2[59], v2[123], v2[115]));
    faces.push(new Face(color2, v2[52], v2[53], v2[55], v2[54]));
    faces.push(new Face(color2, v2[52], v2[53], v2[61], v2[60]));
    faces.push(new Face(color2, v2[52], v2[53], v2[117], v2[116]));
    faces.push(new Face(color2, v2[52], v2[54], v2[62], v2[60]));
    faces.push(new Face(color2, v2[52], v2[54], v2[118], v2[116]));
    faces.push(new Face(color2, v2[52], v2[60], v2[124], v2[116]));
    faces.push(new Face(color2, v2[53], v2[55], v2[63], v2[61]));
    faces.push(new Face(color2, v2[53], v2[55], v2[119], v2[117]));
    faces.push(new Face(color2, v2[53], v2[61], v2[125], v2[117]));
    faces.push(new Face(color2, v2[54], v2[55], v2[63], v2[62]));
    faces.push(new Face(color2, v2[54], v2[55], v2[119], v2[118]));
    faces.push(new Face(color2, v2[54], v2[62], v2[126], v2[118]));
    faces.push(new Face(color2, v2[55], v2[63], v2[127], v2[119]));
    faces.push(new Face(color2, v2[56], v2[57], v2[59], v2[58]));
    faces.push(new Face(color2, v2[56], v2[57], v2[61], v2[60]));
    faces.push(new Face(color2, v2[56], v2[57], v2[121], v2[120]));
    faces.push(new Face(color2, v2[56], v2[58], v2[62], v2[60]));
    faces.push(new Face(color2, v2[56], v2[58], v2[122], v2[120]));
    faces.push(new Face(color2, v2[56], v2[60], v2[124], v2[120]));
    faces.push(new Face(color2, v2[57], v2[59], v2[63], v2[61]));
    faces.push(new Face(color2, v2[57], v2[59], v2[123], v2[121]));
    faces.push(new Face(color2, v2[57], v2[61], v2[125], v2[121]));
    faces.push(new Face(color2, v2[58], v2[59], v2[63], v2[62]));
    faces.push(new Face(color2, v2[58], v2[59], v2[123], v2[122]));
    faces.push(new Face(color2, v2[58], v2[62], v2[126], v2[122]));
    faces.push(new Face(color2, v2[59], v2[63], v2[127], v2[123]));
    faces.push(new Face(color2, v2[60], v2[61], v2[63], v2[62]));
    faces.push(new Face(color2, v2[60], v2[61], v2[125], v2[124]));
    faces.push(new Face(color2, v2[60], v2[62], v2[126], v2[124]));
    faces.push(new Face(color2, v2[61], v2[63], v2[127], v2[125]));
    faces.push(new Face(color2, v2[62], v2[63], v2[127], v2[126]));
    faces.push(new Face(color2, v2[64], v2[65], v2[67], v2[66]));
    faces.push(new Face(color2, v2[64], v2[65], v2[69], v2[68]));
    faces.push(new Face(color2, v2[64], v2[65], v2[73], v2[72]));
    faces.push(new Face(color2, v2[64], v2[65], v2[81], v2[80]));
    faces.push(new Face(color2, v2[64], v2[65], v2[97], v2[96]));
    faces.push(new Face(color2, v2[64], v2[66], v2[70], v2[68]));
    faces.push(new Face(color2, v2[64], v2[66], v2[74], v2[72]));
    faces.push(new Face(color2, v2[64], v2[66], v2[82], v2[80]));
    faces.push(new Face(color2, v2[64], v2[66], v2[98], v2[96]));
    faces.push(new Face(color2, v2[64], v2[68], v2[76], v2[72]));
    faces.push(new Face(color2, v2[64], v2[68], v2[84], v2[80]));
    faces.push(new Face(color2, v2[64], v2[68], v2[100], v2[96]));
    faces.push(new Face(color2, v2[64], v2[72], v2[88], v2[80]));
    faces.push(new Face(color2, v2[64], v2[72], v2[104], v2[96]));
    faces.push(new Face(color2, v2[64], v2[80], v2[112], v2[96]));
    faces.push(new Face(color2, v2[65], v2[67], v2[71], v2[69]));
    faces.push(new Face(color2, v2[65], v2[67], v2[75], v2[73]));
    faces.push(new Face(color2, v2[65], v2[67], v2[83], v2[81]));
    faces.push(new Face(color2, v2[65], v2[67], v2[99], v2[97]));
    faces.push(new Face(color2, v2[65], v2[69], v2[77], v2[73]));
    faces.push(new Face(color2, v2[65], v2[69], v2[85], v2[81]));
    faces.push(new Face(color2, v2[65], v2[69], v2[101], v2[97]));
    faces.push(new Face(color2, v2[65], v2[73], v2[89], v2[81]));
    faces.push(new Face(color2, v2[65], v2[73], v2[105], v2[97]));
    faces.push(new Face(color2, v2[65], v2[81], v2[113], v2[97]));
    faces.push(new Face(color2, v2[66], v2[67], v2[71], v2[70]));
    faces.push(new Face(color2, v2[66], v2[67], v2[75], v2[74]));
    faces.push(new Face(color2, v2[66], v2[67], v2[83], v2[82]));
    faces.push(new Face(color2, v2[66], v2[67], v2[99], v2[98]));
    faces.push(new Face(color2, v2[66], v2[70], v2[78], v2[74]));
    faces.push(new Face(color2, v2[66], v2[70], v2[86], v2[82]));
    faces.push(new Face(color2, v2[66], v2[70], v2[102], v2[98]));
    faces.push(new Face(color2, v2[66], v2[74], v2[90], v2[82]));
    faces.push(new Face(color2, v2[66], v2[74], v2[106], v2[98]));
    faces.push(new Face(color2, v2[66], v2[82], v2[114], v2[98]));
    faces.push(new Face(color2, v2[67], v2[71], v2[79], v2[75]));
    faces.push(new Face(color2, v2[67], v2[71], v2[87], v2[83]));
    faces.push(new Face(color2, v2[67], v2[71], v2[103], v2[99]));
    faces.push(new Face(color2, v2[67], v2[75], v2[91], v2[83]));
    faces.push(new Face(color2, v2[67], v2[75], v2[107], v2[99]));
    faces.push(new Face(color2, v2[67], v2[83], v2[115], v2[99]));
    faces.push(new Face(color2, v2[68], v2[69], v2[71], v2[70]));
    faces.push(new Face(color2, v2[68], v2[69], v2[77], v2[76]));
    faces.push(new Face(color2, v2[68], v2[69], v2[85], v2[84]));
    faces.push(new Face(color2, v2[68], v2[69], v2[101], v2[100]));
    faces.push(new Face(color2, v2[68], v2[70], v2[78], v2[76]));
    faces.push(new Face(color2, v2[68], v2[70], v2[86], v2[84]));
    faces.push(new Face(color2, v2[68], v2[70], v2[102], v2[100]));
    faces.push(new Face(color2, v2[68], v2[76], v2[92], v2[84]));
    faces.push(new Face(color2, v2[68], v2[76], v2[108], v2[100]));
    faces.push(new Face(color2, v2[68], v2[84], v2[116], v2[100]));
    faces.push(new Face(color2, v2[69], v2[71], v2[79], v2[77]));
    faces.push(new Face(color2, v2[69], v2[71], v2[87], v2[85]));
    faces.push(new Face(color2, v2[69], v2[71], v2[103], v2[101]));
    faces.push(new Face(color2, v2[69], v2[77], v2[93], v2[85]));
    faces.push(new Face(color2, v2[69], v2[77], v2[109], v2[101]));
    faces.push(new Face(color2, v2[69], v2[85], v2[117], v2[101]));
    faces.push(new Face(color2, v2[70], v2[71], v2[79], v2[78]));
    faces.push(new Face(color2, v2[70], v2[71], v2[87], v2[86]));
    faces.push(new Face(color2, v2[70], v2[71], v2[103], v2[102]));
    faces.push(new Face(color2, v2[70], v2[78], v2[94], v2[86]));
    faces.push(new Face(color2, v2[70], v2[78], v2[110], v2[102]));
    faces.push(new Face(color2, v2[70], v2[86], v2[118], v2[102]));
    faces.push(new Face(color2, v2[71], v2[79], v2[95], v2[87]));
    faces.push(new Face(color2, v2[71], v2[79], v2[111], v2[103]));
    faces.push(new Face(color2, v2[71], v2[87], v2[119], v2[103]));
    faces.push(new Face(color2, v2[72], v2[73], v2[75], v2[74]));
    faces.push(new Face(color2, v2[72], v2[73], v2[77], v2[76]));
    faces.push(new Face(color2, v2[72], v2[73], v2[89], v2[88]));
    faces.push(new Face(color2, v2[72], v2[73], v2[105], v2[104]));
    faces.push(new Face(color2, v2[72], v2[74], v2[78], v2[76]));
    faces.push(new Face(color2, v2[72], v2[74], v2[90], v2[88]));
    faces.push(new Face(color2, v2[72], v2[74], v2[106], v2[104]));
    faces.push(new Face(color2, v2[72], v2[76], v2[92], v2[88]));
    faces.push(new Face(color2, v2[72], v2[76], v2[108], v2[104]));
    faces.push(new Face(color2, v2[72], v2[88], v2[120], v2[104]));
    faces.push(new Face(color2, v2[73], v2[75], v2[79], v2[77]));
    faces.push(new Face(color2, v2[73], v2[75], v2[91], v2[89]));
    faces.push(new Face(color2, v2[73], v2[75], v2[107], v2[105]));
    faces.push(new Face(color2, v2[73], v2[77], v2[93], v2[89]));
    faces.push(new Face(color2, v2[73], v2[77], v2[109], v2[105]));
    faces.push(new Face(color2, v2[73], v2[89], v2[121], v2[105]));
    faces.push(new Face(color2, v2[74], v2[75], v2[79], v2[78]));
    faces.push(new Face(color2, v2[74], v2[75], v2[91], v2[90]));
    faces.push(new Face(color2, v2[74], v2[75], v2[107], v2[106]));
    faces.push(new Face(color2, v2[74], v2[78], v2[94], v2[90]));
    faces.push(new Face(color2, v2[74], v2[78], v2[110], v2[106]));
    faces.push(new Face(color2, v2[74], v2[90], v2[122], v2[106]));
    faces.push(new Face(color2, v2[75], v2[79], v2[95], v2[91]));
    faces.push(new Face(color2, v2[75], v2[79], v2[111], v2[107]));
    faces.push(new Face(color2, v2[75], v2[91], v2[123], v2[107]));
    faces.push(new Face(color2, v2[76], v2[77], v2[79], v2[78]));
    faces.push(new Face(color2, v2[76], v2[77], v2[93], v2[92]));
    faces.push(new Face(color2, v2[76], v2[77], v2[109], v2[108]));
    faces.push(new Face(color2, v2[76], v2[78], v2[94], v2[92]));
    faces.push(new Face(color2, v2[76], v2[78], v2[110], v2[108]));
    faces.push(new Face(color2, v2[76], v2[92], v2[124], v2[108]));
    faces.push(new Face(color2, v2[77], v2[79], v2[95], v2[93]));
    faces.push(new Face(color2, v2[77], v2[79], v2[111], v2[109]));
    faces.push(new Face(color2, v2[77], v2[93], v2[125], v2[109]));
    faces.push(new Face(color2, v2[78], v2[79], v2[95], v2[94]));
    faces.push(new Face(color2, v2[78], v2[79], v2[111], v2[110]));
    faces.push(new Face(color2, v2[78], v2[94], v2[126], v2[110]));
    faces.push(new Face(color2, v2[79], v2[95], v2[127], v2[111]));
    faces.push(new Face(color2, v2[80], v2[81], v2[83], v2[82]));
    faces.push(new Face(color2, v2[80], v2[81], v2[85], v2[84]));
    faces.push(new Face(color2, v2[80], v2[81], v2[89], v2[88]));
    faces.push(new Face(color2, v2[80], v2[81], v2[113], v2[112]));
    faces.push(new Face(color2, v2[80], v2[82], v2[86], v2[84]));
    faces.push(new Face(color2, v2[80], v2[82], v2[90], v2[88]));
    faces.push(new Face(color2, v2[80], v2[82], v2[114], v2[112]));
    faces.push(new Face(color2, v2[80], v2[84], v2[92], v2[88]));
    faces.push(new Face(color2, v2[80], v2[84], v2[116], v2[112]));
    faces.push(new Face(color2, v2[80], v2[88], v2[120], v2[112]));
    faces.push(new Face(color2, v2[81], v2[83], v2[87], v2[85]));
    faces.push(new Face(color2, v2[81], v2[83], v2[91], v2[89]));
    faces.push(new Face(color2, v2[81], v2[83], v2[115], v2[113]));
    faces.push(new Face(color2, v2[81], v2[85], v2[93], v2[89]));
    faces.push(new Face(color2, v2[81], v2[85], v2[117], v2[113]));
    faces.push(new Face(color2, v2[81], v2[89], v2[121], v2[113]));
    faces.push(new Face(color2, v2[82], v2[83], v2[87], v2[86]));
    faces.push(new Face(color2, v2[82], v2[83], v2[91], v2[90]));
    faces.push(new Face(color2, v2[82], v2[83], v2[115], v2[114]));
    faces.push(new Face(color2, v2[82], v2[86], v2[94], v2[90]));
    faces.push(new Face(color2, v2[82], v2[86], v2[118], v2[114]));
    faces.push(new Face(color2, v2[82], v2[90], v2[122], v2[114]));
    faces.push(new Face(color2, v2[83], v2[87], v2[95], v2[91]));
    faces.push(new Face(color2, v2[83], v2[87], v2[119], v2[115]));
    faces.push(new Face(color2, v2[83], v2[91], v2[123], v2[115]));
    faces.push(new Face(color2, v2[84], v2[85], v2[87], v2[86]));
    faces.push(new Face(color2, v2[84], v2[85], v2[93], v2[92]));
    faces.push(new Face(color2, v2[84], v2[85], v2[117], v2[116]));
    faces.push(new Face(color2, v2[84], v2[86], v2[94], v2[92]));
    faces.push(new Face(color2, v2[84], v2[86], v2[118], v2[116]));
    faces.push(new Face(color2, v2[84], v2[92], v2[124], v2[116]));
    faces.push(new Face(color2, v2[85], v2[87], v2[95], v2[93]));
    faces.push(new Face(color2, v2[85], v2[87], v2[119], v2[117]));
    faces.push(new Face(color2, v2[85], v2[93], v2[125], v2[117]));
    faces.push(new Face(color2, v2[86], v2[87], v2[95], v2[94]));
    faces.push(new Face(color2, v2[86], v2[87], v2[119], v2[118]));
    faces.push(new Face(color2, v2[86], v2[94], v2[126], v2[118]));
    faces.push(new Face(color2, v2[87], v2[95], v2[127], v2[119]));
    faces.push(new Face(color2, v2[88], v2[89], v2[91], v2[90]));
    faces.push(new Face(color2, v2[88], v2[89], v2[93], v2[92]));
    faces.push(new Face(color2, v2[88], v2[89], v2[121], v2[120]));
    faces.push(new Face(color2, v2[88], v2[90], v2[94], v2[92]));
    faces.push(new Face(color2, v2[88], v2[90], v2[122], v2[120]));
    faces.push(new Face(color2, v2[88], v2[92], v2[124], v2[120]));
    faces.push(new Face(color2, v2[89], v2[91], v2[95], v2[93]));
    faces.push(new Face(color2, v2[89], v2[91], v2[123], v2[121]));
    faces.push(new Face(color2, v2[89], v2[93], v2[125], v2[121]));
    faces.push(new Face(color2, v2[90], v2[91], v2[95], v2[94]));
    faces.push(new Face(color2, v2[90], v2[91], v2[123], v2[122]));
    faces.push(new Face(color2, v2[90], v2[94], v2[126], v2[122]));
    faces.push(new Face(color2, v2[91], v2[95], v2[127], v2[123]));
    faces.push(new Face(color2, v2[92], v2[93], v2[95], v2[94]));
    faces.push(new Face(color2, v2[92], v2[93], v2[125], v2[124]));
    faces.push(new Face(color2, v2[92], v2[94], v2[126], v2[124]));
    faces.push(new Face(color2, v2[93], v2[95], v2[127], v2[125]));
    faces.push(new Face(color2, v2[94], v2[95], v2[127], v2[126]));
    faces.push(new Face(color2, v2[96], v2[97], v2[99], v2[98]));
    faces.push(new Face(color2, v2[96], v2[97], v2[101], v2[100]));
    faces.push(new Face(color2, v2[96], v2[97], v2[105], v2[104]));
    faces.push(new Face(color2, v2[96], v2[97], v2[113], v2[112]));
    faces.push(new Face(color2, v2[96], v2[98], v2[102], v2[100]));
    faces.push(new Face(color2, v2[96], v2[98], v2[106], v2[104]));
    faces.push(new Face(color2, v2[96], v2[98], v2[114], v2[112]));
    faces.push(new Face(color2, v2[96], v2[100], v2[108], v2[104]));
    faces.push(new Face(color2, v2[96], v2[100], v2[116], v2[112]));
    faces.push(new Face(color2, v2[96], v2[104], v2[120], v2[112]));
    faces.push(new Face(color2, v2[97], v2[99], v2[103], v2[101]));
    faces.push(new Face(color2, v2[97], v2[99], v2[107], v2[105]));
    faces.push(new Face(color2, v2[97], v2[99], v2[115], v2[113]));
    faces.push(new Face(color2, v2[97], v2[101], v2[109], v2[105]));
    faces.push(new Face(color2, v2[97], v2[101], v2[117], v2[113]));
    faces.push(new Face(color2, v2[97], v2[105], v2[121], v2[113]));
    faces.push(new Face(color2, v2[98], v2[99], v2[103], v2[102]));
    faces.push(new Face(color2, v2[98], v2[99], v2[107], v2[106]));
    faces.push(new Face(color2, v2[98], v2[99], v2[115], v2[114]));
    faces.push(new Face(color2, v2[98], v2[102], v2[110], v2[106]));
    faces.push(new Face(color2, v2[98], v2[102], v2[118], v2[114]));
    faces.push(new Face(color2, v2[98], v2[106], v2[122], v2[114]));
    faces.push(new Face(color2, v2[99], v2[103], v2[111], v2[107]));
    faces.push(new Face(color2, v2[99], v2[103], v2[119], v2[115]));
    faces.push(new Face(color2, v2[99], v2[107], v2[123], v2[115]));
    faces.push(new Face(color2, v2[100], v2[101], v2[103], v2[102]));
    faces.push(new Face(color2, v2[100], v2[101], v2[109], v2[108]));
    faces.push(new Face(color2, v2[100], v2[101], v2[117], v2[116]));
    faces.push(new Face(color2, v2[100], v2[102], v2[110], v2[108]));
    faces.push(new Face(color2, v2[100], v2[102], v2[118], v2[116]));
    faces.push(new Face(color2, v2[100], v2[108], v2[124], v2[116]));
    faces.push(new Face(color2, v2[101], v2[103], v2[111], v2[109]));
    faces.push(new Face(color2, v2[101], v2[103], v2[119], v2[117]));
    faces.push(new Face(color2, v2[101], v2[109], v2[125], v2[117]));
    faces.push(new Face(color2, v2[102], v2[103], v2[111], v2[110]));
    faces.push(new Face(color2, v2[102], v2[103], v2[119], v2[118]));
    faces.push(new Face(color2, v2[102], v2[110], v2[126], v2[118]));
    faces.push(new Face(color2, v2[103], v2[111], v2[127], v2[119]));
    faces.push(new Face(color2, v2[104], v2[105], v2[107], v2[106]));
    faces.push(new Face(color2, v2[104], v2[105], v2[109], v2[108]));
    faces.push(new Face(color2, v2[104], v2[105], v2[121], v2[120]));
    faces.push(new Face(color2, v2[104], v2[106], v2[110], v2[108]));
    faces.push(new Face(color2, v2[104], v2[106], v2[122], v2[120]));
    faces.push(new Face(color2, v2[104], v2[108], v2[124], v2[120]));
    faces.push(new Face(color2, v2[105], v2[107], v2[111], v2[109]));
    faces.push(new Face(color2, v2[105], v2[107], v2[123], v2[121]));
    faces.push(new Face(color2, v2[105], v2[109], v2[125], v2[121]));
    faces.push(new Face(color2, v2[106], v2[107], v2[111], v2[110]));
    faces.push(new Face(color2, v2[106], v2[107], v2[123], v2[122]));
    faces.push(new Face(color2, v2[106], v2[110], v2[126], v2[122]));
    faces.push(new Face(color2, v2[107], v2[111], v2[127], v2[123]));
    faces.push(new Face(color2, v2[108], v2[109], v2[111], v2[110]));
    faces.push(new Face(color2, v2[108], v2[109], v2[125], v2[124]));
    faces.push(new Face(color2, v2[108], v2[110], v2[126], v2[124]));
    faces.push(new Face(color2, v2[109], v2[111], v2[127], v2[125]));
    faces.push(new Face(color2, v2[110], v2[111], v2[127], v2[126]));
    faces.push(new Face(color2, v2[112], v2[113], v2[115], v2[114]));
    faces.push(new Face(color2, v2[112], v2[113], v2[117], v2[116]));
    faces.push(new Face(color2, v2[112], v2[113], v2[121], v2[120]));
    faces.push(new Face(color2, v2[112], v2[114], v2[118], v2[116]));
    faces.push(new Face(color2, v2[112], v2[114], v2[122], v2[120]));
    faces.push(new Face(color2, v2[112], v2[116], v2[124], v2[120]));
    faces.push(new Face(color2, v2[113], v2[115], v2[119], v2[117]));
    faces.push(new Face(color2, v2[113], v2[115], v2[123], v2[121]));
    faces.push(new Face(color2, v2[113], v2[117], v2[125], v2[121]));
    faces.push(new Face(color2, v2[114], v2[115], v2[119], v2[118]));
    faces.push(new Face(color2, v2[114], v2[115], v2[123], v2[122]));
    faces.push(new Face(color2, v2[114], v2[118], v2[126], v2[122]));
    faces.push(new Face(color2, v2[115], v2[119], v2[127], v2[123]));
    faces.push(new Face(color2, v2[116], v2[117], v2[119], v2[118]));
    faces.push(new Face(color2, v2[116], v2[117], v2[125], v2[124]));
    faces.push(new Face(color2, v2[116], v2[118], v2[126], v2[124]));
    faces.push(new Face(color2, v2[117], v2[119], v2[127], v2[125]));
    faces.push(new Face(color2, v2[118], v2[119], v2[127], v2[126]));
    faces.push(new Face(color2, v2[120], v2[121], v2[123], v2[122]));
    faces.push(new Face(color2, v2[120], v2[121], v2[125], v2[124]));
    faces.push(new Face(color2, v2[120], v2[122], v2[126], v2[124]));
    faces.push(new Face(color2, v2[121], v2[123], v2[127], v2[125]));
    faces.push(new Face(color2, v2[122], v2[123], v2[127], v2[126]));
    faces.push(new Face(color2, v2[124], v2[125], v2[127], v2[126]));
    for (let i = 0; i < v2.length; i++) {
        v2[i].rotate(r);
        v2[i].project();
    }

    v3[0] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v3[1] = new Vertex(-w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v3[2] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v3[3] = new Vertex(-w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v3[4] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v3[5] = new Vertex(-w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v3[6] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v3[7] = new Vertex(-w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v3[8] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v3[9] = new Vertex(-w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v3[10] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v3[11] = new Vertex(-w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v3[12] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v3[13] = new Vertex(-w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v3[14] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2);
    v3[15] = new Vertex(-w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v3[16] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v3[17] = new Vertex(-w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v3[18] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v3[19] = new Vertex(-w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v3[20] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v3[21] = new Vertex(-w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v3[22] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2);
    v3[23] = new Vertex(-w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v3[24] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v3[25] = new Vertex(-w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v3[26] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2);
    v3[27] = new Vertex(-w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v3[28] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2);
    v3[29] = new Vertex(-w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v3[30] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, w/2, w/2, -w/2);
    v3[31] = new Vertex(-w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v3[32] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v3[33] = new Vertex(-w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v3[34] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v3[35] = new Vertex(-w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v3[36] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v3[37] = new Vertex(-w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v3[38] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v3[39] = new Vertex(-w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v3[40] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v3[41] = new Vertex(-w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v3[42] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v3[43] = new Vertex(-w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v3[44] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v3[45] = new Vertex(-w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v3[46] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2);
    v3[47] = new Vertex(-w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v3[48] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v3[49] = new Vertex(-w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v3[50] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v3[51] = new Vertex(-w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v3[52] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v3[53] = new Vertex(-w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v3[54] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2);
    v3[55] = new Vertex(-w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v3[56] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v3[57] = new Vertex(-w/2, w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v3[58] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2);
    v3[59] = new Vertex(-w/2, w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v3[60] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2);
    v3[61] = new Vertex(-w/2, w/2, -w/2-Math.sin(theta)*w, w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v3[62] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, w/2, w/2, -w/2);
    v3[63] = new Vertex(-w/2, w/2, -w/2-Math.sin(theta)*w, w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v3[64] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v3[65] = new Vertex(w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v3[66] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v3[67] = new Vertex(w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v3[68] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v3[69] = new Vertex(w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v3[70] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v3[71] = new Vertex(w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v3[72] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v3[73] = new Vertex(w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v3[74] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v3[75] = new Vertex(w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v3[76] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v3[77] = new Vertex(w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v3[78] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2);
    v3[79] = new Vertex(w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v3[80] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v3[81] = new Vertex(w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v3[82] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v3[83] = new Vertex(w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v3[84] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v3[85] = new Vertex(w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v3[86] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2);
    v3[87] = new Vertex(w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v3[88] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v3[89] = new Vertex(w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v3[90] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2);
    v3[91] = new Vertex(w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v3[92] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2);
    v3[93] = new Vertex(w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v3[94] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, w/2, w/2, -w/2);
    v3[95] = new Vertex(w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v3[96] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v3[97] = new Vertex(w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v3[98] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v3[99] = new Vertex(w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v3[100] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v3[101] = new Vertex(w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v3[102] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v3[103] = new Vertex(w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v3[104] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v3[105] = new Vertex(w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v3[106] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v3[107] = new Vertex(w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v3[108] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v3[109] = new Vertex(w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v3[110] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2);
    v3[111] = new Vertex(w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v3[112] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v3[113] = new Vertex(w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v3[114] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v3[115] = new Vertex(w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v3[116] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v3[117] = new Vertex(w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v3[118] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2);
    v3[119] = new Vertex(w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v3[120] = new Vertex(w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v3[121] = new Vertex(w/2, w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v3[122] = new Vertex(w/2, w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2);
    v3[123] = new Vertex(w/2, w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v3[124] = new Vertex(w/2, w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2);
    v3[125] = new Vertex(w/2, w/2, -w/2-Math.sin(theta)*w, w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v3[126] = new Vertex(w/2, w/2, -w/2, w/2, w/2, w/2, w/2, -w/2);
    v3[127] = new Vertex(w/2, w/2, -w/2-Math.sin(theta)*w, w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    faces.push(new Face(color3, v3[0], v3[1], v3[3], v3[2]));
    faces.push(new Face(color3, v3[0], v3[1], v3[5], v3[4]));
    faces.push(new Face(color3, v3[0], v3[1], v3[9], v3[8]));
    faces.push(new Face(color3, v3[0], v3[1], v3[17], v3[16]));
    faces.push(new Face(color3, v3[0], v3[1], v3[33], v3[32]));
    faces.push(new Face(color3, v3[0], v3[1], v3[65], v3[64]));
    faces.push(new Face(color3, v3[0], v3[2], v3[6], v3[4]));
    faces.push(new Face(color3, v3[0], v3[2], v3[10], v3[8]));
    faces.push(new Face(color3, v3[0], v3[2], v3[18], v3[16]));
    faces.push(new Face(color3, v3[0], v3[2], v3[34], v3[32]));
    faces.push(new Face(color3, v3[0], v3[2], v3[66], v3[64]));
    faces.push(new Face(color3, v3[0], v3[4], v3[12], v3[8]));
    faces.push(new Face(color3, v3[0], v3[4], v3[20], v3[16]));
    faces.push(new Face(color3, v3[0], v3[4], v3[36], v3[32]));
    faces.push(new Face(color3, v3[0], v3[4], v3[68], v3[64]));
    faces.push(new Face(color3, v3[0], v3[8], v3[24], v3[16]));
    faces.push(new Face(color3, v3[0], v3[8], v3[40], v3[32]));
    faces.push(new Face(color3, v3[0], v3[8], v3[72], v3[64]));
    faces.push(new Face(color3, v3[0], v3[16], v3[48], v3[32]));
    faces.push(new Face(color3, v3[0], v3[16], v3[80], v3[64]));
    faces.push(new Face(color3, v3[0], v3[32], v3[96], v3[64]));
    faces.push(new Face(color3, v3[1], v3[3], v3[7], v3[5]));
    faces.push(new Face(color3, v3[1], v3[3], v3[11], v3[9]));
    faces.push(new Face(color3, v3[1], v3[3], v3[19], v3[17]));
    faces.push(new Face(color3, v3[1], v3[3], v3[35], v3[33]));
    faces.push(new Face(color3, v3[1], v3[3], v3[67], v3[65]));
    faces.push(new Face(color3, v3[1], v3[5], v3[13], v3[9]));
    faces.push(new Face(color3, v3[1], v3[5], v3[21], v3[17]));
    faces.push(new Face(color3, v3[1], v3[5], v3[37], v3[33]));
    faces.push(new Face(color3, v3[1], v3[5], v3[69], v3[65]));
    faces.push(new Face(color3, v3[1], v3[9], v3[25], v3[17]));
    faces.push(new Face(color3, v3[1], v3[9], v3[41], v3[33]));
    faces.push(new Face(color3, v3[1], v3[9], v3[73], v3[65]));
    faces.push(new Face(color3, v3[1], v3[17], v3[49], v3[33]));
    faces.push(new Face(color3, v3[1], v3[17], v3[81], v3[65]));
    faces.push(new Face(color3, v3[1], v3[33], v3[97], v3[65]));
    faces.push(new Face(color3, v3[2], v3[3], v3[7], v3[6]));
    faces.push(new Face(color3, v3[2], v3[3], v3[11], v3[10]));
    faces.push(new Face(color3, v3[2], v3[3], v3[19], v3[18]));
    faces.push(new Face(color3, v3[2], v3[3], v3[35], v3[34]));
    faces.push(new Face(color3, v3[2], v3[3], v3[67], v3[66]));
    faces.push(new Face(color3, v3[2], v3[6], v3[14], v3[10]));
    faces.push(new Face(color3, v3[2], v3[6], v3[22], v3[18]));
    faces.push(new Face(color3, v3[2], v3[6], v3[38], v3[34]));
    faces.push(new Face(color3, v3[2], v3[6], v3[70], v3[66]));
    faces.push(new Face(color3, v3[2], v3[10], v3[26], v3[18]));
    faces.push(new Face(color3, v3[2], v3[10], v3[42], v3[34]));
    faces.push(new Face(color3, v3[2], v3[10], v3[74], v3[66]));
    faces.push(new Face(color3, v3[2], v3[18], v3[50], v3[34]));
    faces.push(new Face(color3, v3[2], v3[18], v3[82], v3[66]));
    faces.push(new Face(color3, v3[2], v3[34], v3[98], v3[66]));
    faces.push(new Face(color3, v3[3], v3[7], v3[15], v3[11]));
    faces.push(new Face(color3, v3[3], v3[7], v3[23], v3[19]));
    faces.push(new Face(color3, v3[3], v3[7], v3[39], v3[35]));
    faces.push(new Face(color3, v3[3], v3[7], v3[71], v3[67]));
    faces.push(new Face(color3, v3[3], v3[11], v3[27], v3[19]));
    faces.push(new Face(color3, v3[3], v3[11], v3[43], v3[35]));
    faces.push(new Face(color3, v3[3], v3[11], v3[75], v3[67]));
    faces.push(new Face(color3, v3[3], v3[19], v3[51], v3[35]));
    faces.push(new Face(color3, v3[3], v3[19], v3[83], v3[67]));
    faces.push(new Face(color3, v3[3], v3[35], v3[99], v3[67]));
    faces.push(new Face(color3, v3[4], v3[5], v3[7], v3[6]));
    faces.push(new Face(color3, v3[4], v3[5], v3[13], v3[12]));
    faces.push(new Face(color3, v3[4], v3[5], v3[21], v3[20]));
    faces.push(new Face(color3, v3[4], v3[5], v3[37], v3[36]));
    faces.push(new Face(color3, v3[4], v3[5], v3[69], v3[68]));
    faces.push(new Face(color3, v3[4], v3[6], v3[14], v3[12]));
    faces.push(new Face(color3, v3[4], v3[6], v3[22], v3[20]));
    faces.push(new Face(color3, v3[4], v3[6], v3[38], v3[36]));
    faces.push(new Face(color3, v3[4], v3[6], v3[70], v3[68]));
    faces.push(new Face(color3, v3[4], v3[12], v3[28], v3[20]));
    faces.push(new Face(color3, v3[4], v3[12], v3[44], v3[36]));
    faces.push(new Face(color3, v3[4], v3[12], v3[76], v3[68]));
    faces.push(new Face(color3, v3[4], v3[20], v3[52], v3[36]));
    faces.push(new Face(color3, v3[4], v3[20], v3[84], v3[68]));
    faces.push(new Face(color3, v3[4], v3[36], v3[100], v3[68]));
    faces.push(new Face(color3, v3[5], v3[7], v3[15], v3[13]));
    faces.push(new Face(color3, v3[5], v3[7], v3[23], v3[21]));
    faces.push(new Face(color3, v3[5], v3[7], v3[39], v3[37]));
    faces.push(new Face(color3, v3[5], v3[7], v3[71], v3[69]));
    faces.push(new Face(color3, v3[5], v3[13], v3[29], v3[21]));
    faces.push(new Face(color3, v3[5], v3[13], v3[45], v3[37]));
    faces.push(new Face(color3, v3[5], v3[13], v3[77], v3[69]));
    faces.push(new Face(color3, v3[5], v3[21], v3[53], v3[37]));
    faces.push(new Face(color3, v3[5], v3[21], v3[85], v3[69]));
    faces.push(new Face(color3, v3[5], v3[37], v3[101], v3[69]));
    faces.push(new Face(color3, v3[6], v3[7], v3[15], v3[14]));
    faces.push(new Face(color3, v3[6], v3[7], v3[23], v3[22]));
    faces.push(new Face(color3, v3[6], v3[7], v3[39], v3[38]));
    faces.push(new Face(color3, v3[6], v3[7], v3[71], v3[70]));
    faces.push(new Face(color3, v3[6], v3[14], v3[30], v3[22]));
    faces.push(new Face(color3, v3[6], v3[14], v3[46], v3[38]));
    faces.push(new Face(color3, v3[6], v3[14], v3[78], v3[70]));
    faces.push(new Face(color3, v3[6], v3[22], v3[54], v3[38]));
    faces.push(new Face(color3, v3[6], v3[22], v3[86], v3[70]));
    faces.push(new Face(color3, v3[6], v3[38], v3[102], v3[70]));
    faces.push(new Face(color3, v3[7], v3[15], v3[31], v3[23]));
    faces.push(new Face(color3, v3[7], v3[15], v3[47], v3[39]));
    faces.push(new Face(color3, v3[7], v3[15], v3[79], v3[71]));
    faces.push(new Face(color3, v3[7], v3[23], v3[55], v3[39]));
    faces.push(new Face(color3, v3[7], v3[23], v3[87], v3[71]));
    faces.push(new Face(color3, v3[7], v3[39], v3[103], v3[71]));
    faces.push(new Face(color3, v3[8], v3[9], v3[11], v3[10]));
    faces.push(new Face(color3, v3[8], v3[9], v3[13], v3[12]));
    faces.push(new Face(color3, v3[8], v3[9], v3[25], v3[24]));
    faces.push(new Face(color3, v3[8], v3[9], v3[41], v3[40]));
    faces.push(new Face(color3, v3[8], v3[9], v3[73], v3[72]));
    faces.push(new Face(color3, v3[8], v3[10], v3[14], v3[12]));
    faces.push(new Face(color3, v3[8], v3[10], v3[26], v3[24]));
    faces.push(new Face(color3, v3[8], v3[10], v3[42], v3[40]));
    faces.push(new Face(color3, v3[8], v3[10], v3[74], v3[72]));
    faces.push(new Face(color3, v3[8], v3[12], v3[28], v3[24]));
    faces.push(new Face(color3, v3[8], v3[12], v3[44], v3[40]));
    faces.push(new Face(color3, v3[8], v3[12], v3[76], v3[72]));
    faces.push(new Face(color3, v3[8], v3[24], v3[56], v3[40]));
    faces.push(new Face(color3, v3[8], v3[24], v3[88], v3[72]));
    faces.push(new Face(color3, v3[8], v3[40], v3[104], v3[72]));
    faces.push(new Face(color3, v3[9], v3[11], v3[15], v3[13]));
    faces.push(new Face(color3, v3[9], v3[11], v3[27], v3[25]));
    faces.push(new Face(color3, v3[9], v3[11], v3[43], v3[41]));
    faces.push(new Face(color3, v3[9], v3[11], v3[75], v3[73]));
    faces.push(new Face(color3, v3[9], v3[13], v3[29], v3[25]));
    faces.push(new Face(color3, v3[9], v3[13], v3[45], v3[41]));
    faces.push(new Face(color3, v3[9], v3[13], v3[77], v3[73]));
    faces.push(new Face(color3, v3[9], v3[25], v3[57], v3[41]));
    faces.push(new Face(color3, v3[9], v3[25], v3[89], v3[73]));
    faces.push(new Face(color3, v3[9], v3[41], v3[105], v3[73]));
    faces.push(new Face(color3, v3[10], v3[11], v3[15], v3[14]));
    faces.push(new Face(color3, v3[10], v3[11], v3[27], v3[26]));
    faces.push(new Face(color3, v3[10], v3[11], v3[43], v3[42]));
    faces.push(new Face(color3, v3[10], v3[11], v3[75], v3[74]));
    faces.push(new Face(color3, v3[10], v3[14], v3[30], v3[26]));
    faces.push(new Face(color3, v3[10], v3[14], v3[46], v3[42]));
    faces.push(new Face(color3, v3[10], v3[14], v3[78], v3[74]));
    faces.push(new Face(color3, v3[10], v3[26], v3[58], v3[42]));
    faces.push(new Face(color3, v3[10], v3[26], v3[90], v3[74]));
    faces.push(new Face(color3, v3[10], v3[42], v3[106], v3[74]));
    faces.push(new Face(color3, v3[11], v3[15], v3[31], v3[27]));
    faces.push(new Face(color3, v3[11], v3[15], v3[47], v3[43]));
    faces.push(new Face(color3, v3[11], v3[15], v3[79], v3[75]));
    faces.push(new Face(color3, v3[11], v3[27], v3[59], v3[43]));
    faces.push(new Face(color3, v3[11], v3[27], v3[91], v3[75]));
    faces.push(new Face(color3, v3[11], v3[43], v3[107], v3[75]));
    faces.push(new Face(color3, v3[12], v3[13], v3[15], v3[14]));
    faces.push(new Face(color3, v3[12], v3[13], v3[29], v3[28]));
    faces.push(new Face(color3, v3[12], v3[13], v3[45], v3[44]));
    faces.push(new Face(color3, v3[12], v3[13], v3[77], v3[76]));
    faces.push(new Face(color3, v3[12], v3[14], v3[30], v3[28]));
    faces.push(new Face(color3, v3[12], v3[14], v3[46], v3[44]));
    faces.push(new Face(color3, v3[12], v3[14], v3[78], v3[76]));
    faces.push(new Face(color3, v3[12], v3[28], v3[60], v3[44]));
    faces.push(new Face(color3, v3[12], v3[28], v3[92], v3[76]));
    faces.push(new Face(color3, v3[12], v3[44], v3[108], v3[76]));
    faces.push(new Face(color3, v3[13], v3[15], v3[31], v3[29]));
    faces.push(new Face(color3, v3[13], v3[15], v3[47], v3[45]));
    faces.push(new Face(color3, v3[13], v3[15], v3[79], v3[77]));
    faces.push(new Face(color3, v3[13], v3[29], v3[61], v3[45]));
    faces.push(new Face(color3, v3[13], v3[29], v3[93], v3[77]));
    faces.push(new Face(color3, v3[13], v3[45], v3[109], v3[77]));
    faces.push(new Face(color3, v3[14], v3[15], v3[31], v3[30]));
    faces.push(new Face(color3, v3[14], v3[15], v3[47], v3[46]));
    faces.push(new Face(color3, v3[14], v3[15], v3[79], v3[78]));
    faces.push(new Face(color3, v3[14], v3[30], v3[62], v3[46]));
    faces.push(new Face(color3, v3[14], v3[30], v3[94], v3[78]));
    faces.push(new Face(color3, v3[14], v3[46], v3[110], v3[78]));
    faces.push(new Face(color3, v3[15], v3[31], v3[63], v3[47]));
    faces.push(new Face(color3, v3[15], v3[31], v3[95], v3[79]));
    faces.push(new Face(color3, v3[15], v3[47], v3[111], v3[79]));
    faces.push(new Face(color3, v3[16], v3[17], v3[19], v3[18]));
    faces.push(new Face(color3, v3[16], v3[17], v3[21], v3[20]));
    faces.push(new Face(color3, v3[16], v3[17], v3[25], v3[24]));
    faces.push(new Face(color3, v3[16], v3[17], v3[49], v3[48]));
    faces.push(new Face(color3, v3[16], v3[17], v3[81], v3[80]));
    faces.push(new Face(color3, v3[16], v3[18], v3[22], v3[20]));
    faces.push(new Face(color3, v3[16], v3[18], v3[26], v3[24]));
    faces.push(new Face(color3, v3[16], v3[18], v3[50], v3[48]));
    faces.push(new Face(color3, v3[16], v3[18], v3[82], v3[80]));
    faces.push(new Face(color3, v3[16], v3[20], v3[28], v3[24]));
    faces.push(new Face(color3, v3[16], v3[20], v3[52], v3[48]));
    faces.push(new Face(color3, v3[16], v3[20], v3[84], v3[80]));
    faces.push(new Face(color3, v3[16], v3[24], v3[56], v3[48]));
    faces.push(new Face(color3, v3[16], v3[24], v3[88], v3[80]));
    faces.push(new Face(color3, v3[16], v3[48], v3[112], v3[80]));
    faces.push(new Face(color3, v3[17], v3[19], v3[23], v3[21]));
    faces.push(new Face(color3, v3[17], v3[19], v3[27], v3[25]));
    faces.push(new Face(color3, v3[17], v3[19], v3[51], v3[49]));
    faces.push(new Face(color3, v3[17], v3[19], v3[83], v3[81]));
    faces.push(new Face(color3, v3[17], v3[21], v3[29], v3[25]));
    faces.push(new Face(color3, v3[17], v3[21], v3[53], v3[49]));
    faces.push(new Face(color3, v3[17], v3[21], v3[85], v3[81]));
    faces.push(new Face(color3, v3[17], v3[25], v3[57], v3[49]));
    faces.push(new Face(color3, v3[17], v3[25], v3[89], v3[81]));
    faces.push(new Face(color3, v3[17], v3[49], v3[113], v3[81]));
    faces.push(new Face(color3, v3[18], v3[19], v3[23], v3[22]));
    faces.push(new Face(color3, v3[18], v3[19], v3[27], v3[26]));
    faces.push(new Face(color3, v3[18], v3[19], v3[51], v3[50]));
    faces.push(new Face(color3, v3[18], v3[19], v3[83], v3[82]));
    faces.push(new Face(color3, v3[18], v3[22], v3[30], v3[26]));
    faces.push(new Face(color3, v3[18], v3[22], v3[54], v3[50]));
    faces.push(new Face(color3, v3[18], v3[22], v3[86], v3[82]));
    faces.push(new Face(color3, v3[18], v3[26], v3[58], v3[50]));
    faces.push(new Face(color3, v3[18], v3[26], v3[90], v3[82]));
    faces.push(new Face(color3, v3[18], v3[50], v3[114], v3[82]));
    faces.push(new Face(color3, v3[19], v3[23], v3[31], v3[27]));
    faces.push(new Face(color3, v3[19], v3[23], v3[55], v3[51]));
    faces.push(new Face(color3, v3[19], v3[23], v3[87], v3[83]));
    faces.push(new Face(color3, v3[19], v3[27], v3[59], v3[51]));
    faces.push(new Face(color3, v3[19], v3[27], v3[91], v3[83]));
    faces.push(new Face(color3, v3[19], v3[51], v3[115], v3[83]));
    faces.push(new Face(color3, v3[20], v3[21], v3[23], v3[22]));
    faces.push(new Face(color3, v3[20], v3[21], v3[29], v3[28]));
    faces.push(new Face(color3, v3[20], v3[21], v3[53], v3[52]));
    faces.push(new Face(color3, v3[20], v3[21], v3[85], v3[84]));
    faces.push(new Face(color3, v3[20], v3[22], v3[30], v3[28]));
    faces.push(new Face(color3, v3[20], v3[22], v3[54], v3[52]));
    faces.push(new Face(color3, v3[20], v3[22], v3[86], v3[84]));
    faces.push(new Face(color3, v3[20], v3[28], v3[60], v3[52]));
    faces.push(new Face(color3, v3[20], v3[28], v3[92], v3[84]));
    faces.push(new Face(color3, v3[20], v3[52], v3[116], v3[84]));
    faces.push(new Face(color3, v3[21], v3[23], v3[31], v3[29]));
    faces.push(new Face(color3, v3[21], v3[23], v3[55], v3[53]));
    faces.push(new Face(color3, v3[21], v3[23], v3[87], v3[85]));
    faces.push(new Face(color3, v3[21], v3[29], v3[61], v3[53]));
    faces.push(new Face(color3, v3[21], v3[29], v3[93], v3[85]));
    faces.push(new Face(color3, v3[21], v3[53], v3[117], v3[85]));
    faces.push(new Face(color3, v3[22], v3[23], v3[31], v3[30]));
    faces.push(new Face(color3, v3[22], v3[23], v3[55], v3[54]));
    faces.push(new Face(color3, v3[22], v3[23], v3[87], v3[86]));
    faces.push(new Face(color3, v3[22], v3[30], v3[62], v3[54]));
    faces.push(new Face(color3, v3[22], v3[30], v3[94], v3[86]));
    faces.push(new Face(color3, v3[22], v3[54], v3[118], v3[86]));
    faces.push(new Face(color3, v3[23], v3[31], v3[63], v3[55]));
    faces.push(new Face(color3, v3[23], v3[31], v3[95], v3[87]));
    faces.push(new Face(color3, v3[23], v3[55], v3[119], v3[87]));
    faces.push(new Face(color3, v3[24], v3[25], v3[27], v3[26]));
    faces.push(new Face(color3, v3[24], v3[25], v3[29], v3[28]));
    faces.push(new Face(color3, v3[24], v3[25], v3[57], v3[56]));
    faces.push(new Face(color3, v3[24], v3[25], v3[89], v3[88]));
    faces.push(new Face(color3, v3[24], v3[26], v3[30], v3[28]));
    faces.push(new Face(color3, v3[24], v3[26], v3[58], v3[56]));
    faces.push(new Face(color3, v3[24], v3[26], v3[90], v3[88]));
    faces.push(new Face(color3, v3[24], v3[28], v3[60], v3[56]));
    faces.push(new Face(color3, v3[24], v3[28], v3[92], v3[88]));
    faces.push(new Face(color3, v3[24], v3[56], v3[120], v3[88]));
    faces.push(new Face(color3, v3[25], v3[27], v3[31], v3[29]));
    faces.push(new Face(color3, v3[25], v3[27], v3[59], v3[57]));
    faces.push(new Face(color3, v3[25], v3[27], v3[91], v3[89]));
    faces.push(new Face(color3, v3[25], v3[29], v3[61], v3[57]));
    faces.push(new Face(color3, v3[25], v3[29], v3[93], v3[89]));
    faces.push(new Face(color3, v3[25], v3[57], v3[121], v3[89]));
    faces.push(new Face(color3, v3[26], v3[27], v3[31], v3[30]));
    faces.push(new Face(color3, v3[26], v3[27], v3[59], v3[58]));
    faces.push(new Face(color3, v3[26], v3[27], v3[91], v3[90]));
    faces.push(new Face(color3, v3[26], v3[30], v3[62], v3[58]));
    faces.push(new Face(color3, v3[26], v3[30], v3[94], v3[90]));
    faces.push(new Face(color3, v3[26], v3[58], v3[122], v3[90]));
    faces.push(new Face(color3, v3[27], v3[31], v3[63], v3[59]));
    faces.push(new Face(color3, v3[27], v3[31], v3[95], v3[91]));
    faces.push(new Face(color3, v3[27], v3[59], v3[123], v3[91]));
    faces.push(new Face(color3, v3[28], v3[29], v3[31], v3[30]));
    faces.push(new Face(color3, v3[28], v3[29], v3[61], v3[60]));
    faces.push(new Face(color3, v3[28], v3[29], v3[93], v3[92]));
    faces.push(new Face(color3, v3[28], v3[30], v3[62], v3[60]));
    faces.push(new Face(color3, v3[28], v3[30], v3[94], v3[92]));
    faces.push(new Face(color3, v3[28], v3[60], v3[124], v3[92]));
    faces.push(new Face(color3, v3[29], v3[31], v3[63], v3[61]));
    faces.push(new Face(color3, v3[29], v3[31], v3[95], v3[93]));
    faces.push(new Face(color3, v3[29], v3[61], v3[125], v3[93]));
    faces.push(new Face(color3, v3[30], v3[31], v3[63], v3[62]));
    faces.push(new Face(color3, v3[30], v3[31], v3[95], v3[94]));
    faces.push(new Face(color3, v3[30], v3[62], v3[126], v3[94]));
    faces.push(new Face(color3, v3[31], v3[63], v3[127], v3[95]));
    faces.push(new Face(color3, v3[32], v3[33], v3[35], v3[34]));
    faces.push(new Face(color3, v3[32], v3[33], v3[37], v3[36]));
    faces.push(new Face(color3, v3[32], v3[33], v3[41], v3[40]));
    faces.push(new Face(color3, v3[32], v3[33], v3[49], v3[48]));
    faces.push(new Face(color3, v3[32], v3[33], v3[97], v3[96]));
    faces.push(new Face(color3, v3[32], v3[34], v3[38], v3[36]));
    faces.push(new Face(color3, v3[32], v3[34], v3[42], v3[40]));
    faces.push(new Face(color3, v3[32], v3[34], v3[50], v3[48]));
    faces.push(new Face(color3, v3[32], v3[34], v3[98], v3[96]));
    faces.push(new Face(color3, v3[32], v3[36], v3[44], v3[40]));
    faces.push(new Face(color3, v3[32], v3[36], v3[52], v3[48]));
    faces.push(new Face(color3, v3[32], v3[36], v3[100], v3[96]));
    faces.push(new Face(color3, v3[32], v3[40], v3[56], v3[48]));
    faces.push(new Face(color3, v3[32], v3[40], v3[104], v3[96]));
    faces.push(new Face(color3, v3[32], v3[48], v3[112], v3[96]));
    faces.push(new Face(color3, v3[33], v3[35], v3[39], v3[37]));
    faces.push(new Face(color3, v3[33], v3[35], v3[43], v3[41]));
    faces.push(new Face(color3, v3[33], v3[35], v3[51], v3[49]));
    faces.push(new Face(color3, v3[33], v3[35], v3[99], v3[97]));
    faces.push(new Face(color3, v3[33], v3[37], v3[45], v3[41]));
    faces.push(new Face(color3, v3[33], v3[37], v3[53], v3[49]));
    faces.push(new Face(color3, v3[33], v3[37], v3[101], v3[97]));
    faces.push(new Face(color3, v3[33], v3[41], v3[57], v3[49]));
    faces.push(new Face(color3, v3[33], v3[41], v3[105], v3[97]));
    faces.push(new Face(color3, v3[33], v3[49], v3[113], v3[97]));
    faces.push(new Face(color3, v3[34], v3[35], v3[39], v3[38]));
    faces.push(new Face(color3, v3[34], v3[35], v3[43], v3[42]));
    faces.push(new Face(color3, v3[34], v3[35], v3[51], v3[50]));
    faces.push(new Face(color3, v3[34], v3[35], v3[99], v3[98]));
    faces.push(new Face(color3, v3[34], v3[38], v3[46], v3[42]));
    faces.push(new Face(color3, v3[34], v3[38], v3[54], v3[50]));
    faces.push(new Face(color3, v3[34], v3[38], v3[102], v3[98]));
    faces.push(new Face(color3, v3[34], v3[42], v3[58], v3[50]));
    faces.push(new Face(color3, v3[34], v3[42], v3[106], v3[98]));
    faces.push(new Face(color3, v3[34], v3[50], v3[114], v3[98]));
    faces.push(new Face(color3, v3[35], v3[39], v3[47], v3[43]));
    faces.push(new Face(color3, v3[35], v3[39], v3[55], v3[51]));
    faces.push(new Face(color3, v3[35], v3[39], v3[103], v3[99]));
    faces.push(new Face(color3, v3[35], v3[43], v3[59], v3[51]));
    faces.push(new Face(color3, v3[35], v3[43], v3[107], v3[99]));
    faces.push(new Face(color3, v3[35], v3[51], v3[115], v3[99]));
    faces.push(new Face(color3, v3[36], v3[37], v3[39], v3[38]));
    faces.push(new Face(color3, v3[36], v3[37], v3[45], v3[44]));
    faces.push(new Face(color3, v3[36], v3[37], v3[53], v3[52]));
    faces.push(new Face(color3, v3[36], v3[37], v3[101], v3[100]));
    faces.push(new Face(color3, v3[36], v3[38], v3[46], v3[44]));
    faces.push(new Face(color3, v3[36], v3[38], v3[54], v3[52]));
    faces.push(new Face(color3, v3[36], v3[38], v3[102], v3[100]));
    faces.push(new Face(color3, v3[36], v3[44], v3[60], v3[52]));
    faces.push(new Face(color3, v3[36], v3[44], v3[108], v3[100]));
    faces.push(new Face(color3, v3[36], v3[52], v3[116], v3[100]));
    faces.push(new Face(color3, v3[37], v3[39], v3[47], v3[45]));
    faces.push(new Face(color3, v3[37], v3[39], v3[55], v3[53]));
    faces.push(new Face(color3, v3[37], v3[39], v3[103], v3[101]));
    faces.push(new Face(color3, v3[37], v3[45], v3[61], v3[53]));
    faces.push(new Face(color3, v3[37], v3[45], v3[109], v3[101]));
    faces.push(new Face(color3, v3[37], v3[53], v3[117], v3[101]));
    faces.push(new Face(color3, v3[38], v3[39], v3[47], v3[46]));
    faces.push(new Face(color3, v3[38], v3[39], v3[55], v3[54]));
    faces.push(new Face(color3, v3[38], v3[39], v3[103], v3[102]));
    faces.push(new Face(color3, v3[38], v3[46], v3[62], v3[54]));
    faces.push(new Face(color3, v3[38], v3[46], v3[110], v3[102]));
    faces.push(new Face(color3, v3[38], v3[54], v3[118], v3[102]));
    faces.push(new Face(color3, v3[39], v3[47], v3[63], v3[55]));
    faces.push(new Face(color3, v3[39], v3[47], v3[111], v3[103]));
    faces.push(new Face(color3, v3[39], v3[55], v3[119], v3[103]));
    faces.push(new Face(color3, v3[40], v3[41], v3[43], v3[42]));
    faces.push(new Face(color3, v3[40], v3[41], v3[45], v3[44]));
    faces.push(new Face(color3, v3[40], v3[41], v3[57], v3[56]));
    faces.push(new Face(color3, v3[40], v3[41], v3[105], v3[104]));
    faces.push(new Face(color3, v3[40], v3[42], v3[46], v3[44]));
    faces.push(new Face(color3, v3[40], v3[42], v3[58], v3[56]));
    faces.push(new Face(color3, v3[40], v3[42], v3[106], v3[104]));
    faces.push(new Face(color3, v3[40], v3[44], v3[60], v3[56]));
    faces.push(new Face(color3, v3[40], v3[44], v3[108], v3[104]));
    faces.push(new Face(color3, v3[40], v3[56], v3[120], v3[104]));
    faces.push(new Face(color3, v3[41], v3[43], v3[47], v3[45]));
    faces.push(new Face(color3, v3[41], v3[43], v3[59], v3[57]));
    faces.push(new Face(color3, v3[41], v3[43], v3[107], v3[105]));
    faces.push(new Face(color3, v3[41], v3[45], v3[61], v3[57]));
    faces.push(new Face(color3, v3[41], v3[45], v3[109], v3[105]));
    faces.push(new Face(color3, v3[41], v3[57], v3[121], v3[105]));
    faces.push(new Face(color3, v3[42], v3[43], v3[47], v3[46]));
    faces.push(new Face(color3, v3[42], v3[43], v3[59], v3[58]));
    faces.push(new Face(color3, v3[42], v3[43], v3[107], v3[106]));
    faces.push(new Face(color3, v3[42], v3[46], v3[62], v3[58]));
    faces.push(new Face(color3, v3[42], v3[46], v3[110], v3[106]));
    faces.push(new Face(color3, v3[42], v3[58], v3[122], v3[106]));
    faces.push(new Face(color3, v3[43], v3[47], v3[63], v3[59]));
    faces.push(new Face(color3, v3[43], v3[47], v3[111], v3[107]));
    faces.push(new Face(color3, v3[43], v3[59], v3[123], v3[107]));
    faces.push(new Face(color3, v3[44], v3[45], v3[47], v3[46]));
    faces.push(new Face(color3, v3[44], v3[45], v3[61], v3[60]));
    faces.push(new Face(color3, v3[44], v3[45], v3[109], v3[108]));
    faces.push(new Face(color3, v3[44], v3[46], v3[62], v3[60]));
    faces.push(new Face(color3, v3[44], v3[46], v3[110], v3[108]));
    faces.push(new Face(color3, v3[44], v3[60], v3[124], v3[108]));
    faces.push(new Face(color3, v3[45], v3[47], v3[63], v3[61]));
    faces.push(new Face(color3, v3[45], v3[47], v3[111], v3[109]));
    faces.push(new Face(color3, v3[45], v3[61], v3[125], v3[109]));
    faces.push(new Face(color3, v3[46], v3[47], v3[63], v3[62]));
    faces.push(new Face(color3, v3[46], v3[47], v3[111], v3[110]));
    faces.push(new Face(color3, v3[46], v3[62], v3[126], v3[110]));
    faces.push(new Face(color3, v3[47], v3[63], v3[127], v3[111]));
    faces.push(new Face(color3, v3[48], v3[49], v3[51], v3[50]));
    faces.push(new Face(color3, v3[48], v3[49], v3[53], v3[52]));
    faces.push(new Face(color3, v3[48], v3[49], v3[57], v3[56]));
    faces.push(new Face(color3, v3[48], v3[49], v3[113], v3[112]));
    faces.push(new Face(color3, v3[48], v3[50], v3[54], v3[52]));
    faces.push(new Face(color3, v3[48], v3[50], v3[58], v3[56]));
    faces.push(new Face(color3, v3[48], v3[50], v3[114], v3[112]));
    faces.push(new Face(color3, v3[48], v3[52], v3[60], v3[56]));
    faces.push(new Face(color3, v3[48], v3[52], v3[116], v3[112]));
    faces.push(new Face(color3, v3[48], v3[56], v3[120], v3[112]));
    faces.push(new Face(color3, v3[49], v3[51], v3[55], v3[53]));
    faces.push(new Face(color3, v3[49], v3[51], v3[59], v3[57]));
    faces.push(new Face(color3, v3[49], v3[51], v3[115], v3[113]));
    faces.push(new Face(color3, v3[49], v3[53], v3[61], v3[57]));
    faces.push(new Face(color3, v3[49], v3[53], v3[117], v3[113]));
    faces.push(new Face(color3, v3[49], v3[57], v3[121], v3[113]));
    faces.push(new Face(color3, v3[50], v3[51], v3[55], v3[54]));
    faces.push(new Face(color3, v3[50], v3[51], v3[59], v3[58]));
    faces.push(new Face(color3, v3[50], v3[51], v3[115], v3[114]));
    faces.push(new Face(color3, v3[50], v3[54], v3[62], v3[58]));
    faces.push(new Face(color3, v3[50], v3[54], v3[118], v3[114]));
    faces.push(new Face(color3, v3[50], v3[58], v3[122], v3[114]));
    faces.push(new Face(color3, v3[51], v3[55], v3[63], v3[59]));
    faces.push(new Face(color3, v3[51], v3[55], v3[119], v3[115]));
    faces.push(new Face(color3, v3[51], v3[59], v3[123], v3[115]));
    faces.push(new Face(color3, v3[52], v3[53], v3[55], v3[54]));
    faces.push(new Face(color3, v3[52], v3[53], v3[61], v3[60]));
    faces.push(new Face(color3, v3[52], v3[53], v3[117], v3[116]));
    faces.push(new Face(color3, v3[52], v3[54], v3[62], v3[60]));
    faces.push(new Face(color3, v3[52], v3[54], v3[118], v3[116]));
    faces.push(new Face(color3, v3[52], v3[60], v3[124], v3[116]));
    faces.push(new Face(color3, v3[53], v3[55], v3[63], v3[61]));
    faces.push(new Face(color3, v3[53], v3[55], v3[119], v3[117]));
    faces.push(new Face(color3, v3[53], v3[61], v3[125], v3[117]));
    faces.push(new Face(color3, v3[54], v3[55], v3[63], v3[62]));
    faces.push(new Face(color3, v3[54], v3[55], v3[119], v3[118]));
    faces.push(new Face(color3, v3[54], v3[62], v3[126], v3[118]));
    faces.push(new Face(color3, v3[55], v3[63], v3[127], v3[119]));
    faces.push(new Face(color3, v3[56], v3[57], v3[59], v3[58]));
    faces.push(new Face(color3, v3[56], v3[57], v3[61], v3[60]));
    faces.push(new Face(color3, v3[56], v3[57], v3[121], v3[120]));
    faces.push(new Face(color3, v3[56], v3[58], v3[62], v3[60]));
    faces.push(new Face(color3, v3[56], v3[58], v3[122], v3[120]));
    faces.push(new Face(color3, v3[56], v3[60], v3[124], v3[120]));
    faces.push(new Face(color3, v3[57], v3[59], v3[63], v3[61]));
    faces.push(new Face(color3, v3[57], v3[59], v3[123], v3[121]));
    faces.push(new Face(color3, v3[57], v3[61], v3[125], v3[121]));
    faces.push(new Face(color3, v3[58], v3[59], v3[63], v3[62]));
    faces.push(new Face(color3, v3[58], v3[59], v3[123], v3[122]));
    faces.push(new Face(color3, v3[58], v3[62], v3[126], v3[122]));
    faces.push(new Face(color3, v3[59], v3[63], v3[127], v3[123]));
    faces.push(new Face(color3, v3[60], v3[61], v3[63], v3[62]));
    faces.push(new Face(color3, v3[60], v3[61], v3[125], v3[124]));
    faces.push(new Face(color3, v3[60], v3[62], v3[126], v3[124]));
    faces.push(new Face(color3, v3[61], v3[63], v3[127], v3[125]));
    faces.push(new Face(color3, v3[62], v3[63], v3[127], v3[126]));
    faces.push(new Face(color3, v3[64], v3[65], v3[67], v3[66]));
    faces.push(new Face(color3, v3[64], v3[65], v3[69], v3[68]));
    faces.push(new Face(color3, v3[64], v3[65], v3[73], v3[72]));
    faces.push(new Face(color3, v3[64], v3[65], v3[81], v3[80]));
    faces.push(new Face(color3, v3[64], v3[65], v3[97], v3[96]));
    faces.push(new Face(color3, v3[64], v3[66], v3[70], v3[68]));
    faces.push(new Face(color3, v3[64], v3[66], v3[74], v3[72]));
    faces.push(new Face(color3, v3[64], v3[66], v3[82], v3[80]));
    faces.push(new Face(color3, v3[64], v3[66], v3[98], v3[96]));
    faces.push(new Face(color3, v3[64], v3[68], v3[76], v3[72]));
    faces.push(new Face(color3, v3[64], v3[68], v3[84], v3[80]));
    faces.push(new Face(color3, v3[64], v3[68], v3[100], v3[96]));
    faces.push(new Face(color3, v3[64], v3[72], v3[88], v3[80]));
    faces.push(new Face(color3, v3[64], v3[72], v3[104], v3[96]));
    faces.push(new Face(color3, v3[64], v3[80], v3[112], v3[96]));
    faces.push(new Face(color3, v3[65], v3[67], v3[71], v3[69]));
    faces.push(new Face(color3, v3[65], v3[67], v3[75], v3[73]));
    faces.push(new Face(color3, v3[65], v3[67], v3[83], v3[81]));
    faces.push(new Face(color3, v3[65], v3[67], v3[99], v3[97]));
    faces.push(new Face(color3, v3[65], v3[69], v3[77], v3[73]));
    faces.push(new Face(color3, v3[65], v3[69], v3[85], v3[81]));
    faces.push(new Face(color3, v3[65], v3[69], v3[101], v3[97]));
    faces.push(new Face(color3, v3[65], v3[73], v3[89], v3[81]));
    faces.push(new Face(color3, v3[65], v3[73], v3[105], v3[97]));
    faces.push(new Face(color3, v3[65], v3[81], v3[113], v3[97]));
    faces.push(new Face(color3, v3[66], v3[67], v3[71], v3[70]));
    faces.push(new Face(color3, v3[66], v3[67], v3[75], v3[74]));
    faces.push(new Face(color3, v3[66], v3[67], v3[83], v3[82]));
    faces.push(new Face(color3, v3[66], v3[67], v3[99], v3[98]));
    faces.push(new Face(color3, v3[66], v3[70], v3[78], v3[74]));
    faces.push(new Face(color3, v3[66], v3[70], v3[86], v3[82]));
    faces.push(new Face(color3, v3[66], v3[70], v3[102], v3[98]));
    faces.push(new Face(color3, v3[66], v3[74], v3[90], v3[82]));
    faces.push(new Face(color3, v3[66], v3[74], v3[106], v3[98]));
    faces.push(new Face(color3, v3[66], v3[82], v3[114], v3[98]));
    faces.push(new Face(color3, v3[67], v3[71], v3[79], v3[75]));
    faces.push(new Face(color3, v3[67], v3[71], v3[87], v3[83]));
    faces.push(new Face(color3, v3[67], v3[71], v3[103], v3[99]));
    faces.push(new Face(color3, v3[67], v3[75], v3[91], v3[83]));
    faces.push(new Face(color3, v3[67], v3[75], v3[107], v3[99]));
    faces.push(new Face(color3, v3[67], v3[83], v3[115], v3[99]));
    faces.push(new Face(color3, v3[68], v3[69], v3[71], v3[70]));
    faces.push(new Face(color3, v3[68], v3[69], v3[77], v3[76]));
    faces.push(new Face(color3, v3[68], v3[69], v3[85], v3[84]));
    faces.push(new Face(color3, v3[68], v3[69], v3[101], v3[100]));
    faces.push(new Face(color3, v3[68], v3[70], v3[78], v3[76]));
    faces.push(new Face(color3, v3[68], v3[70], v3[86], v3[84]));
    faces.push(new Face(color3, v3[68], v3[70], v3[102], v3[100]));
    faces.push(new Face(color3, v3[68], v3[76], v3[92], v3[84]));
    faces.push(new Face(color3, v3[68], v3[76], v3[108], v3[100]));
    faces.push(new Face(color3, v3[68], v3[84], v3[116], v3[100]));
    faces.push(new Face(color3, v3[69], v3[71], v3[79], v3[77]));
    faces.push(new Face(color3, v3[69], v3[71], v3[87], v3[85]));
    faces.push(new Face(color3, v3[69], v3[71], v3[103], v3[101]));
    faces.push(new Face(color3, v3[69], v3[77], v3[93], v3[85]));
    faces.push(new Face(color3, v3[69], v3[77], v3[109], v3[101]));
    faces.push(new Face(color3, v3[69], v3[85], v3[117], v3[101]));
    faces.push(new Face(color3, v3[70], v3[71], v3[79], v3[78]));
    faces.push(new Face(color3, v3[70], v3[71], v3[87], v3[86]));
    faces.push(new Face(color3, v3[70], v3[71], v3[103], v3[102]));
    faces.push(new Face(color3, v3[70], v3[78], v3[94], v3[86]));
    faces.push(new Face(color3, v3[70], v3[78], v3[110], v3[102]));
    faces.push(new Face(color3, v3[70], v3[86], v3[118], v3[102]));
    faces.push(new Face(color3, v3[71], v3[79], v3[95], v3[87]));
    faces.push(new Face(color3, v3[71], v3[79], v3[111], v3[103]));
    faces.push(new Face(color3, v3[71], v3[87], v3[119], v3[103]));
    faces.push(new Face(color3, v3[72], v3[73], v3[75], v3[74]));
    faces.push(new Face(color3, v3[72], v3[73], v3[77], v3[76]));
    faces.push(new Face(color3, v3[72], v3[73], v3[89], v3[88]));
    faces.push(new Face(color3, v3[72], v3[73], v3[105], v3[104]));
    faces.push(new Face(color3, v3[72], v3[74], v3[78], v3[76]));
    faces.push(new Face(color3, v3[72], v3[74], v3[90], v3[88]));
    faces.push(new Face(color3, v3[72], v3[74], v3[106], v3[104]));
    faces.push(new Face(color3, v3[72], v3[76], v3[92], v3[88]));
    faces.push(new Face(color3, v3[72], v3[76], v3[108], v3[104]));
    faces.push(new Face(color3, v3[72], v3[88], v3[120], v3[104]));
    faces.push(new Face(color3, v3[73], v3[75], v3[79], v3[77]));
    faces.push(new Face(color3, v3[73], v3[75], v3[91], v3[89]));
    faces.push(new Face(color3, v3[73], v3[75], v3[107], v3[105]));
    faces.push(new Face(color3, v3[73], v3[77], v3[93], v3[89]));
    faces.push(new Face(color3, v3[73], v3[77], v3[109], v3[105]));
    faces.push(new Face(color3, v3[73], v3[89], v3[121], v3[105]));
    faces.push(new Face(color3, v3[74], v3[75], v3[79], v3[78]));
    faces.push(new Face(color3, v3[74], v3[75], v3[91], v3[90]));
    faces.push(new Face(color3, v3[74], v3[75], v3[107], v3[106]));
    faces.push(new Face(color3, v3[74], v3[78], v3[94], v3[90]));
    faces.push(new Face(color3, v3[74], v3[78], v3[110], v3[106]));
    faces.push(new Face(color3, v3[74], v3[90], v3[122], v3[106]));
    faces.push(new Face(color3, v3[75], v3[79], v3[95], v3[91]));
    faces.push(new Face(color3, v3[75], v3[79], v3[111], v3[107]));
    faces.push(new Face(color3, v3[75], v3[91], v3[123], v3[107]));
    faces.push(new Face(color3, v3[76], v3[77], v3[79], v3[78]));
    faces.push(new Face(color3, v3[76], v3[77], v3[93], v3[92]));
    faces.push(new Face(color3, v3[76], v3[77], v3[109], v3[108]));
    faces.push(new Face(color3, v3[76], v3[78], v3[94], v3[92]));
    faces.push(new Face(color3, v3[76], v3[78], v3[110], v3[108]));
    faces.push(new Face(color3, v3[76], v3[92], v3[124], v3[108]));
    faces.push(new Face(color3, v3[77], v3[79], v3[95], v3[93]));
    faces.push(new Face(color3, v3[77], v3[79], v3[111], v3[109]));
    faces.push(new Face(color3, v3[77], v3[93], v3[125], v3[109]));
    faces.push(new Face(color3, v3[78], v3[79], v3[95], v3[94]));
    faces.push(new Face(color3, v3[78], v3[79], v3[111], v3[110]));
    faces.push(new Face(color3, v3[78], v3[94], v3[126], v3[110]));
    faces.push(new Face(color3, v3[79], v3[95], v3[127], v3[111]));
    faces.push(new Face(color3, v3[80], v3[81], v3[83], v3[82]));
    faces.push(new Face(color3, v3[80], v3[81], v3[85], v3[84]));
    faces.push(new Face(color3, v3[80], v3[81], v3[89], v3[88]));
    faces.push(new Face(color3, v3[80], v3[81], v3[113], v3[112]));
    faces.push(new Face(color3, v3[80], v3[82], v3[86], v3[84]));
    faces.push(new Face(color3, v3[80], v3[82], v3[90], v3[88]));
    faces.push(new Face(color3, v3[80], v3[82], v3[114], v3[112]));
    faces.push(new Face(color3, v3[80], v3[84], v3[92], v3[88]));
    faces.push(new Face(color3, v3[80], v3[84], v3[116], v3[112]));
    faces.push(new Face(color3, v3[80], v3[88], v3[120], v3[112]));
    faces.push(new Face(color3, v3[81], v3[83], v3[87], v3[85]));
    faces.push(new Face(color3, v3[81], v3[83], v3[91], v3[89]));
    faces.push(new Face(color3, v3[81], v3[83], v3[115], v3[113]));
    faces.push(new Face(color3, v3[81], v3[85], v3[93], v3[89]));
    faces.push(new Face(color3, v3[81], v3[85], v3[117], v3[113]));
    faces.push(new Face(color3, v3[81], v3[89], v3[121], v3[113]));
    faces.push(new Face(color3, v3[82], v3[83], v3[87], v3[86]));
    faces.push(new Face(color3, v3[82], v3[83], v3[91], v3[90]));
    faces.push(new Face(color3, v3[82], v3[83], v3[115], v3[114]));
    faces.push(new Face(color3, v3[82], v3[86], v3[94], v3[90]));
    faces.push(new Face(color3, v3[82], v3[86], v3[118], v3[114]));
    faces.push(new Face(color3, v3[82], v3[90], v3[122], v3[114]));
    faces.push(new Face(color3, v3[83], v3[87], v3[95], v3[91]));
    faces.push(new Face(color3, v3[83], v3[87], v3[119], v3[115]));
    faces.push(new Face(color3, v3[83], v3[91], v3[123], v3[115]));
    faces.push(new Face(color3, v3[84], v3[85], v3[87], v3[86]));
    faces.push(new Face(color3, v3[84], v3[85], v3[93], v3[92]));
    faces.push(new Face(color3, v3[84], v3[85], v3[117], v3[116]));
    faces.push(new Face(color3, v3[84], v3[86], v3[94], v3[92]));
    faces.push(new Face(color3, v3[84], v3[86], v3[118], v3[116]));
    faces.push(new Face(color3, v3[84], v3[92], v3[124], v3[116]));
    faces.push(new Face(color3, v3[85], v3[87], v3[95], v3[93]));
    faces.push(new Face(color3, v3[85], v3[87], v3[119], v3[117]));
    faces.push(new Face(color3, v3[85], v3[93], v3[125], v3[117]));
    faces.push(new Face(color3, v3[86], v3[87], v3[95], v3[94]));
    faces.push(new Face(color3, v3[86], v3[87], v3[119], v3[118]));
    faces.push(new Face(color3, v3[86], v3[94], v3[126], v3[118]));
    faces.push(new Face(color3, v3[87], v3[95], v3[127], v3[119]));
    faces.push(new Face(color3, v3[88], v3[89], v3[91], v3[90]));
    faces.push(new Face(color3, v3[88], v3[89], v3[93], v3[92]));
    faces.push(new Face(color3, v3[88], v3[89], v3[121], v3[120]));
    faces.push(new Face(color3, v3[88], v3[90], v3[94], v3[92]));
    faces.push(new Face(color3, v3[88], v3[90], v3[122], v3[120]));
    faces.push(new Face(color3, v3[88], v3[92], v3[124], v3[120]));
    faces.push(new Face(color3, v3[89], v3[91], v3[95], v3[93]));
    faces.push(new Face(color3, v3[89], v3[91], v3[123], v3[121]));
    faces.push(new Face(color3, v3[89], v3[93], v3[125], v3[121]));
    faces.push(new Face(color3, v3[90], v3[91], v3[95], v3[94]));
    faces.push(new Face(color3, v3[90], v3[91], v3[123], v3[122]));
    faces.push(new Face(color3, v3[90], v3[94], v3[126], v3[122]));
    faces.push(new Face(color3, v3[91], v3[95], v3[127], v3[123]));
    faces.push(new Face(color3, v3[92], v3[93], v3[95], v3[94]));
    faces.push(new Face(color3, v3[92], v3[93], v3[125], v3[124]));
    faces.push(new Face(color3, v3[92], v3[94], v3[126], v3[124]));
    faces.push(new Face(color3, v3[93], v3[95], v3[127], v3[125]));
    faces.push(new Face(color3, v3[94], v3[95], v3[127], v3[126]));
    faces.push(new Face(color3, v3[96], v3[97], v3[99], v3[98]));
    faces.push(new Face(color3, v3[96], v3[97], v3[101], v3[100]));
    faces.push(new Face(color3, v3[96], v3[97], v3[105], v3[104]));
    faces.push(new Face(color3, v3[96], v3[97], v3[113], v3[112]));
    faces.push(new Face(color3, v3[96], v3[98], v3[102], v3[100]));
    faces.push(new Face(color3, v3[96], v3[98], v3[106], v3[104]));
    faces.push(new Face(color3, v3[96], v3[98], v3[114], v3[112]));
    faces.push(new Face(color3, v3[96], v3[100], v3[108], v3[104]));
    faces.push(new Face(color3, v3[96], v3[100], v3[116], v3[112]));
    faces.push(new Face(color3, v3[96], v3[104], v3[120], v3[112]));
    faces.push(new Face(color3, v3[97], v3[99], v3[103], v3[101]));
    faces.push(new Face(color3, v3[97], v3[99], v3[107], v3[105]));
    faces.push(new Face(color3, v3[97], v3[99], v3[115], v3[113]));
    faces.push(new Face(color3, v3[97], v3[101], v3[109], v3[105]));
    faces.push(new Face(color3, v3[97], v3[101], v3[117], v3[113]));
    faces.push(new Face(color3, v3[97], v3[105], v3[121], v3[113]));
    faces.push(new Face(color3, v3[98], v3[99], v3[103], v3[102]));
    faces.push(new Face(color3, v3[98], v3[99], v3[107], v3[106]));
    faces.push(new Face(color3, v3[98], v3[99], v3[115], v3[114]));
    faces.push(new Face(color3, v3[98], v3[102], v3[110], v3[106]));
    faces.push(new Face(color3, v3[98], v3[102], v3[118], v3[114]));
    faces.push(new Face(color3, v3[98], v3[106], v3[122], v3[114]));
    faces.push(new Face(color3, v3[99], v3[103], v3[111], v3[107]));
    faces.push(new Face(color3, v3[99], v3[103], v3[119], v3[115]));
    faces.push(new Face(color3, v3[99], v3[107], v3[123], v3[115]));
    faces.push(new Face(color3, v3[100], v3[101], v3[103], v3[102]));
    faces.push(new Face(color3, v3[100], v3[101], v3[109], v3[108]));
    faces.push(new Face(color3, v3[100], v3[101], v3[117], v3[116]));
    faces.push(new Face(color3, v3[100], v3[102], v3[110], v3[108]));
    faces.push(new Face(color3, v3[100], v3[102], v3[118], v3[116]));
    faces.push(new Face(color3, v3[100], v3[108], v3[124], v3[116]));
    faces.push(new Face(color3, v3[101], v3[103], v3[111], v3[109]));
    faces.push(new Face(color3, v3[101], v3[103], v3[119], v3[117]));
    faces.push(new Face(color3, v3[101], v3[109], v3[125], v3[117]));
    faces.push(new Face(color3, v3[102], v3[103], v3[111], v3[110]));
    faces.push(new Face(color3, v3[102], v3[103], v3[119], v3[118]));
    faces.push(new Face(color3, v3[102], v3[110], v3[126], v3[118]));
    faces.push(new Face(color3, v3[103], v3[111], v3[127], v3[119]));
    faces.push(new Face(color3, v3[104], v3[105], v3[107], v3[106]));
    faces.push(new Face(color3, v3[104], v3[105], v3[109], v3[108]));
    faces.push(new Face(color3, v3[104], v3[105], v3[121], v3[120]));
    faces.push(new Face(color3, v3[104], v3[106], v3[110], v3[108]));
    faces.push(new Face(color3, v3[104], v3[106], v3[122], v3[120]));
    faces.push(new Face(color3, v3[104], v3[108], v3[124], v3[120]));
    faces.push(new Face(color3, v3[105], v3[107], v3[111], v3[109]));
    faces.push(new Face(color3, v3[105], v3[107], v3[123], v3[121]));
    faces.push(new Face(color3, v3[105], v3[109], v3[125], v3[121]));
    faces.push(new Face(color3, v3[106], v3[107], v3[111], v3[110]));
    faces.push(new Face(color3, v3[106], v3[107], v3[123], v3[122]));
    faces.push(new Face(color3, v3[106], v3[110], v3[126], v3[122]));
    faces.push(new Face(color3, v3[107], v3[111], v3[127], v3[123]));
    faces.push(new Face(color3, v3[108], v3[109], v3[111], v3[110]));
    faces.push(new Face(color3, v3[108], v3[109], v3[125], v3[124]));
    faces.push(new Face(color3, v3[108], v3[110], v3[126], v3[124]));
    faces.push(new Face(color3, v3[109], v3[111], v3[127], v3[125]));
    faces.push(new Face(color3, v3[110], v3[111], v3[127], v3[126]));
    faces.push(new Face(color3, v3[112], v3[113], v3[115], v3[114]));
    faces.push(new Face(color3, v3[112], v3[113], v3[117], v3[116]));
    faces.push(new Face(color3, v3[112], v3[113], v3[121], v3[120]));
    faces.push(new Face(color3, v3[112], v3[114], v3[118], v3[116]));
    faces.push(new Face(color3, v3[112], v3[114], v3[122], v3[120]));
    faces.push(new Face(color3, v3[112], v3[116], v3[124], v3[120]));
    faces.push(new Face(color3, v3[113], v3[115], v3[119], v3[117]));
    faces.push(new Face(color3, v3[113], v3[115], v3[123], v3[121]));
    faces.push(new Face(color3, v3[113], v3[117], v3[125], v3[121]));
    faces.push(new Face(color3, v3[114], v3[115], v3[119], v3[118]));
    faces.push(new Face(color3, v3[114], v3[115], v3[123], v3[122]));
    faces.push(new Face(color3, v3[114], v3[118], v3[126], v3[122]));
    faces.push(new Face(color3, v3[115], v3[119], v3[127], v3[123]));
    faces.push(new Face(color3, v3[116], v3[117], v3[119], v3[118]));
    faces.push(new Face(color3, v3[116], v3[117], v3[125], v3[124]));
    faces.push(new Face(color3, v3[116], v3[118], v3[126], v3[124]));
    faces.push(new Face(color3, v3[117], v3[119], v3[127], v3[125]));
    faces.push(new Face(color3, v3[118], v3[119], v3[127], v3[126]));
    faces.push(new Face(color3, v3[120], v3[121], v3[123], v3[122]));
    faces.push(new Face(color3, v3[120], v3[121], v3[125], v3[124]));
    faces.push(new Face(color3, v3[120], v3[122], v3[126], v3[124]));
    faces.push(new Face(color3, v3[121], v3[123], v3[127], v3[125]));
    faces.push(new Face(color3, v3[122], v3[123], v3[127], v3[126]));
    faces.push(new Face(color3, v3[124], v3[125], v3[127], v3[126]));
    for (let i = 0; i < v3.length; i++) {
        v3[i].rotate(r);
        v3[i].project();
    }

    v4[0] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v4[1] = new Vertex(-w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v4[2] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v4[3] = new Vertex(-w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v4[4] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v4[5] = new Vertex(-w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v4[6] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v4[7] = new Vertex(-w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v4[8] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v4[9] = new Vertex(-w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v4[10] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v4[11] = new Vertex(-w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v4[12] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v4[13] = new Vertex(-w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v4[14] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2);
    v4[15] = new Vertex(-w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v4[16] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v4[17] = new Vertex(-w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v4[18] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v4[19] = new Vertex(-w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v4[20] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v4[21] = new Vertex(-w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v4[22] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v4[23] = new Vertex(-w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v4[24] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v4[25] = new Vertex(-w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v4[26] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v4[27] = new Vertex(-w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v4[28] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v4[29] = new Vertex(-w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v4[30] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, w/2, w/2, -w/2);
    v4[31] = new Vertex(-w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v4[32] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v4[33] = new Vertex(-w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v4[34] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v4[35] = new Vertex(-w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v4[36] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v4[37] = new Vertex(-w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v4[38] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v4[39] = new Vertex(-w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v4[40] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v4[41] = new Vertex(-w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v4[42] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v4[43] = new Vertex(-w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v4[44] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v4[45] = new Vertex(-w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v4[46] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2);
    v4[47] = new Vertex(-w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v4[48] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v4[49] = new Vertex(-w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v4[50] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v4[51] = new Vertex(-w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v4[52] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v4[53] = new Vertex(-w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v4[54] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v4[55] = new Vertex(-w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v4[56] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v4[57] = new Vertex(-w/2, w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v4[58] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v4[59] = new Vertex(-w/2, w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v4[60] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v4[61] = new Vertex(-w/2, w/2, w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v4[62] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, w/2, w/2, -w/2);
    v4[63] = new Vertex(-w/2, w/2, w/2, -w/2-Math.sin(theta)*w, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v4[64] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v4[65] = new Vertex(w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v4[66] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v4[67] = new Vertex(w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v4[68] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v4[69] = new Vertex(w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v4[70] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v4[71] = new Vertex(w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v4[72] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v4[73] = new Vertex(w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v4[74] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v4[75] = new Vertex(w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v4[76] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v4[77] = new Vertex(w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v4[78] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2);
    v4[79] = new Vertex(w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v4[80] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v4[81] = new Vertex(w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v4[82] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v4[83] = new Vertex(w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v4[84] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v4[85] = new Vertex(w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v4[86] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v4[87] = new Vertex(w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v4[88] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v4[89] = new Vertex(w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v4[90] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v4[91] = new Vertex(w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v4[92] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v4[93] = new Vertex(w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v4[94] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, w/2, w/2, -w/2);
    v4[95] = new Vertex(w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v4[96] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v4[97] = new Vertex(w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v4[98] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v4[99] = new Vertex(w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v4[100] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v4[101] = new Vertex(w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v4[102] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v4[103] = new Vertex(w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v4[104] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v4[105] = new Vertex(w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v4[106] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v4[107] = new Vertex(w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v4[108] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v4[109] = new Vertex(w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v4[110] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2);
    v4[111] = new Vertex(w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v4[112] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v4[113] = new Vertex(w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v4[114] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v4[115] = new Vertex(w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v4[116] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v4[117] = new Vertex(w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v4[118] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v4[119] = new Vertex(w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v4[120] = new Vertex(w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v4[121] = new Vertex(w/2, w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v4[122] = new Vertex(w/2, w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v4[123] = new Vertex(w/2, w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v4[124] = new Vertex(w/2, w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v4[125] = new Vertex(w/2, w/2, w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v4[126] = new Vertex(w/2, w/2, w/2, -w/2, w/2, w/2, w/2, -w/2);
    v4[127] = new Vertex(w/2, w/2, w/2, -w/2-Math.sin(theta)*w, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    faces.push(new Face(color4, v4[0], v4[1], v4[3], v4[2]));
    faces.push(new Face(color4, v4[0], v4[1], v4[5], v4[4]));
    faces.push(new Face(color4, v4[0], v4[1], v4[9], v4[8]));
    faces.push(new Face(color4, v4[0], v4[1], v4[17], v4[16]));
    faces.push(new Face(color4, v4[0], v4[1], v4[33], v4[32]));
    faces.push(new Face(color4, v4[0], v4[1], v4[65], v4[64]));
    faces.push(new Face(color4, v4[0], v4[2], v4[6], v4[4]));
    faces.push(new Face(color4, v4[0], v4[2], v4[10], v4[8]));
    faces.push(new Face(color4, v4[0], v4[2], v4[18], v4[16]));
    faces.push(new Face(color4, v4[0], v4[2], v4[34], v4[32]));
    faces.push(new Face(color4, v4[0], v4[2], v4[66], v4[64]));
    faces.push(new Face(color4, v4[0], v4[4], v4[12], v4[8]));
    faces.push(new Face(color4, v4[0], v4[4], v4[20], v4[16]));
    faces.push(new Face(color4, v4[0], v4[4], v4[36], v4[32]));
    faces.push(new Face(color4, v4[0], v4[4], v4[68], v4[64]));
    faces.push(new Face(color4, v4[0], v4[8], v4[24], v4[16]));
    faces.push(new Face(color4, v4[0], v4[8], v4[40], v4[32]));
    faces.push(new Face(color4, v4[0], v4[8], v4[72], v4[64]));
    faces.push(new Face(color4, v4[0], v4[16], v4[48], v4[32]));
    faces.push(new Face(color4, v4[0], v4[16], v4[80], v4[64]));
    faces.push(new Face(color4, v4[0], v4[32], v4[96], v4[64]));
    faces.push(new Face(color4, v4[1], v4[3], v4[7], v4[5]));
    faces.push(new Face(color4, v4[1], v4[3], v4[11], v4[9]));
    faces.push(new Face(color4, v4[1], v4[3], v4[19], v4[17]));
    faces.push(new Face(color4, v4[1], v4[3], v4[35], v4[33]));
    faces.push(new Face(color4, v4[1], v4[3], v4[67], v4[65]));
    faces.push(new Face(color4, v4[1], v4[5], v4[13], v4[9]));
    faces.push(new Face(color4, v4[1], v4[5], v4[21], v4[17]));
    faces.push(new Face(color4, v4[1], v4[5], v4[37], v4[33]));
    faces.push(new Face(color4, v4[1], v4[5], v4[69], v4[65]));
    faces.push(new Face(color4, v4[1], v4[9], v4[25], v4[17]));
    faces.push(new Face(color4, v4[1], v4[9], v4[41], v4[33]));
    faces.push(new Face(color4, v4[1], v4[9], v4[73], v4[65]));
    faces.push(new Face(color4, v4[1], v4[17], v4[49], v4[33]));
    faces.push(new Face(color4, v4[1], v4[17], v4[81], v4[65]));
    faces.push(new Face(color4, v4[1], v4[33], v4[97], v4[65]));
    faces.push(new Face(color4, v4[2], v4[3], v4[7], v4[6]));
    faces.push(new Face(color4, v4[2], v4[3], v4[11], v4[10]));
    faces.push(new Face(color4, v4[2], v4[3], v4[19], v4[18]));
    faces.push(new Face(color4, v4[2], v4[3], v4[35], v4[34]));
    faces.push(new Face(color4, v4[2], v4[3], v4[67], v4[66]));
    faces.push(new Face(color4, v4[2], v4[6], v4[14], v4[10]));
    faces.push(new Face(color4, v4[2], v4[6], v4[22], v4[18]));
    faces.push(new Face(color4, v4[2], v4[6], v4[38], v4[34]));
    faces.push(new Face(color4, v4[2], v4[6], v4[70], v4[66]));
    faces.push(new Face(color4, v4[2], v4[10], v4[26], v4[18]));
    faces.push(new Face(color4, v4[2], v4[10], v4[42], v4[34]));
    faces.push(new Face(color4, v4[2], v4[10], v4[74], v4[66]));
    faces.push(new Face(color4, v4[2], v4[18], v4[50], v4[34]));
    faces.push(new Face(color4, v4[2], v4[18], v4[82], v4[66]));
    faces.push(new Face(color4, v4[2], v4[34], v4[98], v4[66]));
    faces.push(new Face(color4, v4[3], v4[7], v4[15], v4[11]));
    faces.push(new Face(color4, v4[3], v4[7], v4[23], v4[19]));
    faces.push(new Face(color4, v4[3], v4[7], v4[39], v4[35]));
    faces.push(new Face(color4, v4[3], v4[7], v4[71], v4[67]));
    faces.push(new Face(color4, v4[3], v4[11], v4[27], v4[19]));
    faces.push(new Face(color4, v4[3], v4[11], v4[43], v4[35]));
    faces.push(new Face(color4, v4[3], v4[11], v4[75], v4[67]));
    faces.push(new Face(color4, v4[3], v4[19], v4[51], v4[35]));
    faces.push(new Face(color4, v4[3], v4[19], v4[83], v4[67]));
    faces.push(new Face(color4, v4[3], v4[35], v4[99], v4[67]));
    faces.push(new Face(color4, v4[4], v4[5], v4[7], v4[6]));
    faces.push(new Face(color4, v4[4], v4[5], v4[13], v4[12]));
    faces.push(new Face(color4, v4[4], v4[5], v4[21], v4[20]));
    faces.push(new Face(color4, v4[4], v4[5], v4[37], v4[36]));
    faces.push(new Face(color4, v4[4], v4[5], v4[69], v4[68]));
    faces.push(new Face(color4, v4[4], v4[6], v4[14], v4[12]));
    faces.push(new Face(color4, v4[4], v4[6], v4[22], v4[20]));
    faces.push(new Face(color4, v4[4], v4[6], v4[38], v4[36]));
    faces.push(new Face(color4, v4[4], v4[6], v4[70], v4[68]));
    faces.push(new Face(color4, v4[4], v4[12], v4[28], v4[20]));
    faces.push(new Face(color4, v4[4], v4[12], v4[44], v4[36]));
    faces.push(new Face(color4, v4[4], v4[12], v4[76], v4[68]));
    faces.push(new Face(color4, v4[4], v4[20], v4[52], v4[36]));
    faces.push(new Face(color4, v4[4], v4[20], v4[84], v4[68]));
    faces.push(new Face(color4, v4[4], v4[36], v4[100], v4[68]));
    faces.push(new Face(color4, v4[5], v4[7], v4[15], v4[13]));
    faces.push(new Face(color4, v4[5], v4[7], v4[23], v4[21]));
    faces.push(new Face(color4, v4[5], v4[7], v4[39], v4[37]));
    faces.push(new Face(color4, v4[5], v4[7], v4[71], v4[69]));
    faces.push(new Face(color4, v4[5], v4[13], v4[29], v4[21]));
    faces.push(new Face(color4, v4[5], v4[13], v4[45], v4[37]));
    faces.push(new Face(color4, v4[5], v4[13], v4[77], v4[69]));
    faces.push(new Face(color4, v4[5], v4[21], v4[53], v4[37]));
    faces.push(new Face(color4, v4[5], v4[21], v4[85], v4[69]));
    faces.push(new Face(color4, v4[5], v4[37], v4[101], v4[69]));
    faces.push(new Face(color4, v4[6], v4[7], v4[15], v4[14]));
    faces.push(new Face(color4, v4[6], v4[7], v4[23], v4[22]));
    faces.push(new Face(color4, v4[6], v4[7], v4[39], v4[38]));
    faces.push(new Face(color4, v4[6], v4[7], v4[71], v4[70]));
    faces.push(new Face(color4, v4[6], v4[14], v4[30], v4[22]));
    faces.push(new Face(color4, v4[6], v4[14], v4[46], v4[38]));
    faces.push(new Face(color4, v4[6], v4[14], v4[78], v4[70]));
    faces.push(new Face(color4, v4[6], v4[22], v4[54], v4[38]));
    faces.push(new Face(color4, v4[6], v4[22], v4[86], v4[70]));
    faces.push(new Face(color4, v4[6], v4[38], v4[102], v4[70]));
    faces.push(new Face(color4, v4[7], v4[15], v4[31], v4[23]));
    faces.push(new Face(color4, v4[7], v4[15], v4[47], v4[39]));
    faces.push(new Face(color4, v4[7], v4[15], v4[79], v4[71]));
    faces.push(new Face(color4, v4[7], v4[23], v4[55], v4[39]));
    faces.push(new Face(color4, v4[7], v4[23], v4[87], v4[71]));
    faces.push(new Face(color4, v4[7], v4[39], v4[103], v4[71]));
    faces.push(new Face(color4, v4[8], v4[9], v4[11], v4[10]));
    faces.push(new Face(color4, v4[8], v4[9], v4[13], v4[12]));
    faces.push(new Face(color4, v4[8], v4[9], v4[25], v4[24]));
    faces.push(new Face(color4, v4[8], v4[9], v4[41], v4[40]));
    faces.push(new Face(color4, v4[8], v4[9], v4[73], v4[72]));
    faces.push(new Face(color4, v4[8], v4[10], v4[14], v4[12]));
    faces.push(new Face(color4, v4[8], v4[10], v4[26], v4[24]));
    faces.push(new Face(color4, v4[8], v4[10], v4[42], v4[40]));
    faces.push(new Face(color4, v4[8], v4[10], v4[74], v4[72]));
    faces.push(new Face(color4, v4[8], v4[12], v4[28], v4[24]));
    faces.push(new Face(color4, v4[8], v4[12], v4[44], v4[40]));
    faces.push(new Face(color4, v4[8], v4[12], v4[76], v4[72]));
    faces.push(new Face(color4, v4[8], v4[24], v4[56], v4[40]));
    faces.push(new Face(color4, v4[8], v4[24], v4[88], v4[72]));
    faces.push(new Face(color4, v4[8], v4[40], v4[104], v4[72]));
    faces.push(new Face(color4, v4[9], v4[11], v4[15], v4[13]));
    faces.push(new Face(color4, v4[9], v4[11], v4[27], v4[25]));
    faces.push(new Face(color4, v4[9], v4[11], v4[43], v4[41]));
    faces.push(new Face(color4, v4[9], v4[11], v4[75], v4[73]));
    faces.push(new Face(color4, v4[9], v4[13], v4[29], v4[25]));
    faces.push(new Face(color4, v4[9], v4[13], v4[45], v4[41]));
    faces.push(new Face(color4, v4[9], v4[13], v4[77], v4[73]));
    faces.push(new Face(color4, v4[9], v4[25], v4[57], v4[41]));
    faces.push(new Face(color4, v4[9], v4[25], v4[89], v4[73]));
    faces.push(new Face(color4, v4[9], v4[41], v4[105], v4[73]));
    faces.push(new Face(color4, v4[10], v4[11], v4[15], v4[14]));
    faces.push(new Face(color4, v4[10], v4[11], v4[27], v4[26]));
    faces.push(new Face(color4, v4[10], v4[11], v4[43], v4[42]));
    faces.push(new Face(color4, v4[10], v4[11], v4[75], v4[74]));
    faces.push(new Face(color4, v4[10], v4[14], v4[30], v4[26]));
    faces.push(new Face(color4, v4[10], v4[14], v4[46], v4[42]));
    faces.push(new Face(color4, v4[10], v4[14], v4[78], v4[74]));
    faces.push(new Face(color4, v4[10], v4[26], v4[58], v4[42]));
    faces.push(new Face(color4, v4[10], v4[26], v4[90], v4[74]));
    faces.push(new Face(color4, v4[10], v4[42], v4[106], v4[74]));
    faces.push(new Face(color4, v4[11], v4[15], v4[31], v4[27]));
    faces.push(new Face(color4, v4[11], v4[15], v4[47], v4[43]));
    faces.push(new Face(color4, v4[11], v4[15], v4[79], v4[75]));
    faces.push(new Face(color4, v4[11], v4[27], v4[59], v4[43]));
    faces.push(new Face(color4, v4[11], v4[27], v4[91], v4[75]));
    faces.push(new Face(color4, v4[11], v4[43], v4[107], v4[75]));
    faces.push(new Face(color4, v4[12], v4[13], v4[15], v4[14]));
    faces.push(new Face(color4, v4[12], v4[13], v4[29], v4[28]));
    faces.push(new Face(color4, v4[12], v4[13], v4[45], v4[44]));
    faces.push(new Face(color4, v4[12], v4[13], v4[77], v4[76]));
    faces.push(new Face(color4, v4[12], v4[14], v4[30], v4[28]));
    faces.push(new Face(color4, v4[12], v4[14], v4[46], v4[44]));
    faces.push(new Face(color4, v4[12], v4[14], v4[78], v4[76]));
    faces.push(new Face(color4, v4[12], v4[28], v4[60], v4[44]));
    faces.push(new Face(color4, v4[12], v4[28], v4[92], v4[76]));
    faces.push(new Face(color4, v4[12], v4[44], v4[108], v4[76]));
    faces.push(new Face(color4, v4[13], v4[15], v4[31], v4[29]));
    faces.push(new Face(color4, v4[13], v4[15], v4[47], v4[45]));
    faces.push(new Face(color4, v4[13], v4[15], v4[79], v4[77]));
    faces.push(new Face(color4, v4[13], v4[29], v4[61], v4[45]));
    faces.push(new Face(color4, v4[13], v4[29], v4[93], v4[77]));
    faces.push(new Face(color4, v4[13], v4[45], v4[109], v4[77]));
    faces.push(new Face(color4, v4[14], v4[15], v4[31], v4[30]));
    faces.push(new Face(color4, v4[14], v4[15], v4[47], v4[46]));
    faces.push(new Face(color4, v4[14], v4[15], v4[79], v4[78]));
    faces.push(new Face(color4, v4[14], v4[30], v4[62], v4[46]));
    faces.push(new Face(color4, v4[14], v4[30], v4[94], v4[78]));
    faces.push(new Face(color4, v4[14], v4[46], v4[110], v4[78]));
    faces.push(new Face(color4, v4[15], v4[31], v4[63], v4[47]));
    faces.push(new Face(color4, v4[15], v4[31], v4[95], v4[79]));
    faces.push(new Face(color4, v4[15], v4[47], v4[111], v4[79]));
    faces.push(new Face(color4, v4[16], v4[17], v4[19], v4[18]));
    faces.push(new Face(color4, v4[16], v4[17], v4[21], v4[20]));
    faces.push(new Face(color4, v4[16], v4[17], v4[25], v4[24]));
    faces.push(new Face(color4, v4[16], v4[17], v4[49], v4[48]));
    faces.push(new Face(color4, v4[16], v4[17], v4[81], v4[80]));
    faces.push(new Face(color4, v4[16], v4[18], v4[22], v4[20]));
    faces.push(new Face(color4, v4[16], v4[18], v4[26], v4[24]));
    faces.push(new Face(color4, v4[16], v4[18], v4[50], v4[48]));
    faces.push(new Face(color4, v4[16], v4[18], v4[82], v4[80]));
    faces.push(new Face(color4, v4[16], v4[20], v4[28], v4[24]));
    faces.push(new Face(color4, v4[16], v4[20], v4[52], v4[48]));
    faces.push(new Face(color4, v4[16], v4[20], v4[84], v4[80]));
    faces.push(new Face(color4, v4[16], v4[24], v4[56], v4[48]));
    faces.push(new Face(color4, v4[16], v4[24], v4[88], v4[80]));
    faces.push(new Face(color4, v4[16], v4[48], v4[112], v4[80]));
    faces.push(new Face(color4, v4[17], v4[19], v4[23], v4[21]));
    faces.push(new Face(color4, v4[17], v4[19], v4[27], v4[25]));
    faces.push(new Face(color4, v4[17], v4[19], v4[51], v4[49]));
    faces.push(new Face(color4, v4[17], v4[19], v4[83], v4[81]));
    faces.push(new Face(color4, v4[17], v4[21], v4[29], v4[25]));
    faces.push(new Face(color4, v4[17], v4[21], v4[53], v4[49]));
    faces.push(new Face(color4, v4[17], v4[21], v4[85], v4[81]));
    faces.push(new Face(color4, v4[17], v4[25], v4[57], v4[49]));
    faces.push(new Face(color4, v4[17], v4[25], v4[89], v4[81]));
    faces.push(new Face(color4, v4[17], v4[49], v4[113], v4[81]));
    faces.push(new Face(color4, v4[18], v4[19], v4[23], v4[22]));
    faces.push(new Face(color4, v4[18], v4[19], v4[27], v4[26]));
    faces.push(new Face(color4, v4[18], v4[19], v4[51], v4[50]));
    faces.push(new Face(color4, v4[18], v4[19], v4[83], v4[82]));
    faces.push(new Face(color4, v4[18], v4[22], v4[30], v4[26]));
    faces.push(new Face(color4, v4[18], v4[22], v4[54], v4[50]));
    faces.push(new Face(color4, v4[18], v4[22], v4[86], v4[82]));
    faces.push(new Face(color4, v4[18], v4[26], v4[58], v4[50]));
    faces.push(new Face(color4, v4[18], v4[26], v4[90], v4[82]));
    faces.push(new Face(color4, v4[18], v4[50], v4[114], v4[82]));
    faces.push(new Face(color4, v4[19], v4[23], v4[31], v4[27]));
    faces.push(new Face(color4, v4[19], v4[23], v4[55], v4[51]));
    faces.push(new Face(color4, v4[19], v4[23], v4[87], v4[83]));
    faces.push(new Face(color4, v4[19], v4[27], v4[59], v4[51]));
    faces.push(new Face(color4, v4[19], v4[27], v4[91], v4[83]));
    faces.push(new Face(color4, v4[19], v4[51], v4[115], v4[83]));
    faces.push(new Face(color4, v4[20], v4[21], v4[23], v4[22]));
    faces.push(new Face(color4, v4[20], v4[21], v4[29], v4[28]));
    faces.push(new Face(color4, v4[20], v4[21], v4[53], v4[52]));
    faces.push(new Face(color4, v4[20], v4[21], v4[85], v4[84]));
    faces.push(new Face(color4, v4[20], v4[22], v4[30], v4[28]));
    faces.push(new Face(color4, v4[20], v4[22], v4[54], v4[52]));
    faces.push(new Face(color4, v4[20], v4[22], v4[86], v4[84]));
    faces.push(new Face(color4, v4[20], v4[28], v4[60], v4[52]));
    faces.push(new Face(color4, v4[20], v4[28], v4[92], v4[84]));
    faces.push(new Face(color4, v4[20], v4[52], v4[116], v4[84]));
    faces.push(new Face(color4, v4[21], v4[23], v4[31], v4[29]));
    faces.push(new Face(color4, v4[21], v4[23], v4[55], v4[53]));
    faces.push(new Face(color4, v4[21], v4[23], v4[87], v4[85]));
    faces.push(new Face(color4, v4[21], v4[29], v4[61], v4[53]));
    faces.push(new Face(color4, v4[21], v4[29], v4[93], v4[85]));
    faces.push(new Face(color4, v4[21], v4[53], v4[117], v4[85]));
    faces.push(new Face(color4, v4[22], v4[23], v4[31], v4[30]));
    faces.push(new Face(color4, v4[22], v4[23], v4[55], v4[54]));
    faces.push(new Face(color4, v4[22], v4[23], v4[87], v4[86]));
    faces.push(new Face(color4, v4[22], v4[30], v4[62], v4[54]));
    faces.push(new Face(color4, v4[22], v4[30], v4[94], v4[86]));
    faces.push(new Face(color4, v4[22], v4[54], v4[118], v4[86]));
    faces.push(new Face(color4, v4[23], v4[31], v4[63], v4[55]));
    faces.push(new Face(color4, v4[23], v4[31], v4[95], v4[87]));
    faces.push(new Face(color4, v4[23], v4[55], v4[119], v4[87]));
    faces.push(new Face(color4, v4[24], v4[25], v4[27], v4[26]));
    faces.push(new Face(color4, v4[24], v4[25], v4[29], v4[28]));
    faces.push(new Face(color4, v4[24], v4[25], v4[57], v4[56]));
    faces.push(new Face(color4, v4[24], v4[25], v4[89], v4[88]));
    faces.push(new Face(color4, v4[24], v4[26], v4[30], v4[28]));
    faces.push(new Face(color4, v4[24], v4[26], v4[58], v4[56]));
    faces.push(new Face(color4, v4[24], v4[26], v4[90], v4[88]));
    faces.push(new Face(color4, v4[24], v4[28], v4[60], v4[56]));
    faces.push(new Face(color4, v4[24], v4[28], v4[92], v4[88]));
    faces.push(new Face(color4, v4[24], v4[56], v4[120], v4[88]));
    faces.push(new Face(color4, v4[25], v4[27], v4[31], v4[29]));
    faces.push(new Face(color4, v4[25], v4[27], v4[59], v4[57]));
    faces.push(new Face(color4, v4[25], v4[27], v4[91], v4[89]));
    faces.push(new Face(color4, v4[25], v4[29], v4[61], v4[57]));
    faces.push(new Face(color4, v4[25], v4[29], v4[93], v4[89]));
    faces.push(new Face(color4, v4[25], v4[57], v4[121], v4[89]));
    faces.push(new Face(color4, v4[26], v4[27], v4[31], v4[30]));
    faces.push(new Face(color4, v4[26], v4[27], v4[59], v4[58]));
    faces.push(new Face(color4, v4[26], v4[27], v4[91], v4[90]));
    faces.push(new Face(color4, v4[26], v4[30], v4[62], v4[58]));
    faces.push(new Face(color4, v4[26], v4[30], v4[94], v4[90]));
    faces.push(new Face(color4, v4[26], v4[58], v4[122], v4[90]));
    faces.push(new Face(color4, v4[27], v4[31], v4[63], v4[59]));
    faces.push(new Face(color4, v4[27], v4[31], v4[95], v4[91]));
    faces.push(new Face(color4, v4[27], v4[59], v4[123], v4[91]));
    faces.push(new Face(color4, v4[28], v4[29], v4[31], v4[30]));
    faces.push(new Face(color4, v4[28], v4[29], v4[61], v4[60]));
    faces.push(new Face(color4, v4[28], v4[29], v4[93], v4[92]));
    faces.push(new Face(color4, v4[28], v4[30], v4[62], v4[60]));
    faces.push(new Face(color4, v4[28], v4[30], v4[94], v4[92]));
    faces.push(new Face(color4, v4[28], v4[60], v4[124], v4[92]));
    faces.push(new Face(color4, v4[29], v4[31], v4[63], v4[61]));
    faces.push(new Face(color4, v4[29], v4[31], v4[95], v4[93]));
    faces.push(new Face(color4, v4[29], v4[61], v4[125], v4[93]));
    faces.push(new Face(color4, v4[30], v4[31], v4[63], v4[62]));
    faces.push(new Face(color4, v4[30], v4[31], v4[95], v4[94]));
    faces.push(new Face(color4, v4[30], v4[62], v4[126], v4[94]));
    faces.push(new Face(color4, v4[31], v4[63], v4[127], v4[95]));
    faces.push(new Face(color4, v4[32], v4[33], v4[35], v4[34]));
    faces.push(new Face(color4, v4[32], v4[33], v4[37], v4[36]));
    faces.push(new Face(color4, v4[32], v4[33], v4[41], v4[40]));
    faces.push(new Face(color4, v4[32], v4[33], v4[49], v4[48]));
    faces.push(new Face(color4, v4[32], v4[33], v4[97], v4[96]));
    faces.push(new Face(color4, v4[32], v4[34], v4[38], v4[36]));
    faces.push(new Face(color4, v4[32], v4[34], v4[42], v4[40]));
    faces.push(new Face(color4, v4[32], v4[34], v4[50], v4[48]));
    faces.push(new Face(color4, v4[32], v4[34], v4[98], v4[96]));
    faces.push(new Face(color4, v4[32], v4[36], v4[44], v4[40]));
    faces.push(new Face(color4, v4[32], v4[36], v4[52], v4[48]));
    faces.push(new Face(color4, v4[32], v4[36], v4[100], v4[96]));
    faces.push(new Face(color4, v4[32], v4[40], v4[56], v4[48]));
    faces.push(new Face(color4, v4[32], v4[40], v4[104], v4[96]));
    faces.push(new Face(color4, v4[32], v4[48], v4[112], v4[96]));
    faces.push(new Face(color4, v4[33], v4[35], v4[39], v4[37]));
    faces.push(new Face(color4, v4[33], v4[35], v4[43], v4[41]));
    faces.push(new Face(color4, v4[33], v4[35], v4[51], v4[49]));
    faces.push(new Face(color4, v4[33], v4[35], v4[99], v4[97]));
    faces.push(new Face(color4, v4[33], v4[37], v4[45], v4[41]));
    faces.push(new Face(color4, v4[33], v4[37], v4[53], v4[49]));
    faces.push(new Face(color4, v4[33], v4[37], v4[101], v4[97]));
    faces.push(new Face(color4, v4[33], v4[41], v4[57], v4[49]));
    faces.push(new Face(color4, v4[33], v4[41], v4[105], v4[97]));
    faces.push(new Face(color4, v4[33], v4[49], v4[113], v4[97]));
    faces.push(new Face(color4, v4[34], v4[35], v4[39], v4[38]));
    faces.push(new Face(color4, v4[34], v4[35], v4[43], v4[42]));
    faces.push(new Face(color4, v4[34], v4[35], v4[51], v4[50]));
    faces.push(new Face(color4, v4[34], v4[35], v4[99], v4[98]));
    faces.push(new Face(color4, v4[34], v4[38], v4[46], v4[42]));
    faces.push(new Face(color4, v4[34], v4[38], v4[54], v4[50]));
    faces.push(new Face(color4, v4[34], v4[38], v4[102], v4[98]));
    faces.push(new Face(color4, v4[34], v4[42], v4[58], v4[50]));
    faces.push(new Face(color4, v4[34], v4[42], v4[106], v4[98]));
    faces.push(new Face(color4, v4[34], v4[50], v4[114], v4[98]));
    faces.push(new Face(color4, v4[35], v4[39], v4[47], v4[43]));
    faces.push(new Face(color4, v4[35], v4[39], v4[55], v4[51]));
    faces.push(new Face(color4, v4[35], v4[39], v4[103], v4[99]));
    faces.push(new Face(color4, v4[35], v4[43], v4[59], v4[51]));
    faces.push(new Face(color4, v4[35], v4[43], v4[107], v4[99]));
    faces.push(new Face(color4, v4[35], v4[51], v4[115], v4[99]));
    faces.push(new Face(color4, v4[36], v4[37], v4[39], v4[38]));
    faces.push(new Face(color4, v4[36], v4[37], v4[45], v4[44]));
    faces.push(new Face(color4, v4[36], v4[37], v4[53], v4[52]));
    faces.push(new Face(color4, v4[36], v4[37], v4[101], v4[100]));
    faces.push(new Face(color4, v4[36], v4[38], v4[46], v4[44]));
    faces.push(new Face(color4, v4[36], v4[38], v4[54], v4[52]));
    faces.push(new Face(color4, v4[36], v4[38], v4[102], v4[100]));
    faces.push(new Face(color4, v4[36], v4[44], v4[60], v4[52]));
    faces.push(new Face(color4, v4[36], v4[44], v4[108], v4[100]));
    faces.push(new Face(color4, v4[36], v4[52], v4[116], v4[100]));
    faces.push(new Face(color4, v4[37], v4[39], v4[47], v4[45]));
    faces.push(new Face(color4, v4[37], v4[39], v4[55], v4[53]));
    faces.push(new Face(color4, v4[37], v4[39], v4[103], v4[101]));
    faces.push(new Face(color4, v4[37], v4[45], v4[61], v4[53]));
    faces.push(new Face(color4, v4[37], v4[45], v4[109], v4[101]));
    faces.push(new Face(color4, v4[37], v4[53], v4[117], v4[101]));
    faces.push(new Face(color4, v4[38], v4[39], v4[47], v4[46]));
    faces.push(new Face(color4, v4[38], v4[39], v4[55], v4[54]));
    faces.push(new Face(color4, v4[38], v4[39], v4[103], v4[102]));
    faces.push(new Face(color4, v4[38], v4[46], v4[62], v4[54]));
    faces.push(new Face(color4, v4[38], v4[46], v4[110], v4[102]));
    faces.push(new Face(color4, v4[38], v4[54], v4[118], v4[102]));
    faces.push(new Face(color4, v4[39], v4[47], v4[63], v4[55]));
    faces.push(new Face(color4, v4[39], v4[47], v4[111], v4[103]));
    faces.push(new Face(color4, v4[39], v4[55], v4[119], v4[103]));
    faces.push(new Face(color4, v4[40], v4[41], v4[43], v4[42]));
    faces.push(new Face(color4, v4[40], v4[41], v4[45], v4[44]));
    faces.push(new Face(color4, v4[40], v4[41], v4[57], v4[56]));
    faces.push(new Face(color4, v4[40], v4[41], v4[105], v4[104]));
    faces.push(new Face(color4, v4[40], v4[42], v4[46], v4[44]));
    faces.push(new Face(color4, v4[40], v4[42], v4[58], v4[56]));
    faces.push(new Face(color4, v4[40], v4[42], v4[106], v4[104]));
    faces.push(new Face(color4, v4[40], v4[44], v4[60], v4[56]));
    faces.push(new Face(color4, v4[40], v4[44], v4[108], v4[104]));
    faces.push(new Face(color4, v4[40], v4[56], v4[120], v4[104]));
    faces.push(new Face(color4, v4[41], v4[43], v4[47], v4[45]));
    faces.push(new Face(color4, v4[41], v4[43], v4[59], v4[57]));
    faces.push(new Face(color4, v4[41], v4[43], v4[107], v4[105]));
    faces.push(new Face(color4, v4[41], v4[45], v4[61], v4[57]));
    faces.push(new Face(color4, v4[41], v4[45], v4[109], v4[105]));
    faces.push(new Face(color4, v4[41], v4[57], v4[121], v4[105]));
    faces.push(new Face(color4, v4[42], v4[43], v4[47], v4[46]));
    faces.push(new Face(color4, v4[42], v4[43], v4[59], v4[58]));
    faces.push(new Face(color4, v4[42], v4[43], v4[107], v4[106]));
    faces.push(new Face(color4, v4[42], v4[46], v4[62], v4[58]));
    faces.push(new Face(color4, v4[42], v4[46], v4[110], v4[106]));
    faces.push(new Face(color4, v4[42], v4[58], v4[122], v4[106]));
    faces.push(new Face(color4, v4[43], v4[47], v4[63], v4[59]));
    faces.push(new Face(color4, v4[43], v4[47], v4[111], v4[107]));
    faces.push(new Face(color4, v4[43], v4[59], v4[123], v4[107]));
    faces.push(new Face(color4, v4[44], v4[45], v4[47], v4[46]));
    faces.push(new Face(color4, v4[44], v4[45], v4[61], v4[60]));
    faces.push(new Face(color4, v4[44], v4[45], v4[109], v4[108]));
    faces.push(new Face(color4, v4[44], v4[46], v4[62], v4[60]));
    faces.push(new Face(color4, v4[44], v4[46], v4[110], v4[108]));
    faces.push(new Face(color4, v4[44], v4[60], v4[124], v4[108]));
    faces.push(new Face(color4, v4[45], v4[47], v4[63], v4[61]));
    faces.push(new Face(color4, v4[45], v4[47], v4[111], v4[109]));
    faces.push(new Face(color4, v4[45], v4[61], v4[125], v4[109]));
    faces.push(new Face(color4, v4[46], v4[47], v4[63], v4[62]));
    faces.push(new Face(color4, v4[46], v4[47], v4[111], v4[110]));
    faces.push(new Face(color4, v4[46], v4[62], v4[126], v4[110]));
    faces.push(new Face(color4, v4[47], v4[63], v4[127], v4[111]));
    faces.push(new Face(color4, v4[48], v4[49], v4[51], v4[50]));
    faces.push(new Face(color4, v4[48], v4[49], v4[53], v4[52]));
    faces.push(new Face(color4, v4[48], v4[49], v4[57], v4[56]));
    faces.push(new Face(color4, v4[48], v4[49], v4[113], v4[112]));
    faces.push(new Face(color4, v4[48], v4[50], v4[54], v4[52]));
    faces.push(new Face(color4, v4[48], v4[50], v4[58], v4[56]));
    faces.push(new Face(color4, v4[48], v4[50], v4[114], v4[112]));
    faces.push(new Face(color4, v4[48], v4[52], v4[60], v4[56]));
    faces.push(new Face(color4, v4[48], v4[52], v4[116], v4[112]));
    faces.push(new Face(color4, v4[48], v4[56], v4[120], v4[112]));
    faces.push(new Face(color4, v4[49], v4[51], v4[55], v4[53]));
    faces.push(new Face(color4, v4[49], v4[51], v4[59], v4[57]));
    faces.push(new Face(color4, v4[49], v4[51], v4[115], v4[113]));
    faces.push(new Face(color4, v4[49], v4[53], v4[61], v4[57]));
    faces.push(new Face(color4, v4[49], v4[53], v4[117], v4[113]));
    faces.push(new Face(color4, v4[49], v4[57], v4[121], v4[113]));
    faces.push(new Face(color4, v4[50], v4[51], v4[55], v4[54]));
    faces.push(new Face(color4, v4[50], v4[51], v4[59], v4[58]));
    faces.push(new Face(color4, v4[50], v4[51], v4[115], v4[114]));
    faces.push(new Face(color4, v4[50], v4[54], v4[62], v4[58]));
    faces.push(new Face(color4, v4[50], v4[54], v4[118], v4[114]));
    faces.push(new Face(color4, v4[50], v4[58], v4[122], v4[114]));
    faces.push(new Face(color4, v4[51], v4[55], v4[63], v4[59]));
    faces.push(new Face(color4, v4[51], v4[55], v4[119], v4[115]));
    faces.push(new Face(color4, v4[51], v4[59], v4[123], v4[115]));
    faces.push(new Face(color4, v4[52], v4[53], v4[55], v4[54]));
    faces.push(new Face(color4, v4[52], v4[53], v4[61], v4[60]));
    faces.push(new Face(color4, v4[52], v4[53], v4[117], v4[116]));
    faces.push(new Face(color4, v4[52], v4[54], v4[62], v4[60]));
    faces.push(new Face(color4, v4[52], v4[54], v4[118], v4[116]));
    faces.push(new Face(color4, v4[52], v4[60], v4[124], v4[116]));
    faces.push(new Face(color4, v4[53], v4[55], v4[63], v4[61]));
    faces.push(new Face(color4, v4[53], v4[55], v4[119], v4[117]));
    faces.push(new Face(color4, v4[53], v4[61], v4[125], v4[117]));
    faces.push(new Face(color4, v4[54], v4[55], v4[63], v4[62]));
    faces.push(new Face(color4, v4[54], v4[55], v4[119], v4[118]));
    faces.push(new Face(color4, v4[54], v4[62], v4[126], v4[118]));
    faces.push(new Face(color4, v4[55], v4[63], v4[127], v4[119]));
    faces.push(new Face(color4, v4[56], v4[57], v4[59], v4[58]));
    faces.push(new Face(color4, v4[56], v4[57], v4[61], v4[60]));
    faces.push(new Face(color4, v4[56], v4[57], v4[121], v4[120]));
    faces.push(new Face(color4, v4[56], v4[58], v4[62], v4[60]));
    faces.push(new Face(color4, v4[56], v4[58], v4[122], v4[120]));
    faces.push(new Face(color4, v4[56], v4[60], v4[124], v4[120]));
    faces.push(new Face(color4, v4[57], v4[59], v4[63], v4[61]));
    faces.push(new Face(color4, v4[57], v4[59], v4[123], v4[121]));
    faces.push(new Face(color4, v4[57], v4[61], v4[125], v4[121]));
    faces.push(new Face(color4, v4[58], v4[59], v4[63], v4[62]));
    faces.push(new Face(color4, v4[58], v4[59], v4[123], v4[122]));
    faces.push(new Face(color4, v4[58], v4[62], v4[126], v4[122]));
    faces.push(new Face(color4, v4[59], v4[63], v4[127], v4[123]));
    faces.push(new Face(color4, v4[60], v4[61], v4[63], v4[62]));
    faces.push(new Face(color4, v4[60], v4[61], v4[125], v4[124]));
    faces.push(new Face(color4, v4[60], v4[62], v4[126], v4[124]));
    faces.push(new Face(color4, v4[61], v4[63], v4[127], v4[125]));
    faces.push(new Face(color4, v4[62], v4[63], v4[127], v4[126]));
    faces.push(new Face(color4, v4[64], v4[65], v4[67], v4[66]));
    faces.push(new Face(color4, v4[64], v4[65], v4[69], v4[68]));
    faces.push(new Face(color4, v4[64], v4[65], v4[73], v4[72]));
    faces.push(new Face(color4, v4[64], v4[65], v4[81], v4[80]));
    faces.push(new Face(color4, v4[64], v4[65], v4[97], v4[96]));
    faces.push(new Face(color4, v4[64], v4[66], v4[70], v4[68]));
    faces.push(new Face(color4, v4[64], v4[66], v4[74], v4[72]));
    faces.push(new Face(color4, v4[64], v4[66], v4[82], v4[80]));
    faces.push(new Face(color4, v4[64], v4[66], v4[98], v4[96]));
    faces.push(new Face(color4, v4[64], v4[68], v4[76], v4[72]));
    faces.push(new Face(color4, v4[64], v4[68], v4[84], v4[80]));
    faces.push(new Face(color4, v4[64], v4[68], v4[100], v4[96]));
    faces.push(new Face(color4, v4[64], v4[72], v4[88], v4[80]));
    faces.push(new Face(color4, v4[64], v4[72], v4[104], v4[96]));
    faces.push(new Face(color4, v4[64], v4[80], v4[112], v4[96]));
    faces.push(new Face(color4, v4[65], v4[67], v4[71], v4[69]));
    faces.push(new Face(color4, v4[65], v4[67], v4[75], v4[73]));
    faces.push(new Face(color4, v4[65], v4[67], v4[83], v4[81]));
    faces.push(new Face(color4, v4[65], v4[67], v4[99], v4[97]));
    faces.push(new Face(color4, v4[65], v4[69], v4[77], v4[73]));
    faces.push(new Face(color4, v4[65], v4[69], v4[85], v4[81]));
    faces.push(new Face(color4, v4[65], v4[69], v4[101], v4[97]));
    faces.push(new Face(color4, v4[65], v4[73], v4[89], v4[81]));
    faces.push(new Face(color4, v4[65], v4[73], v4[105], v4[97]));
    faces.push(new Face(color4, v4[65], v4[81], v4[113], v4[97]));
    faces.push(new Face(color4, v4[66], v4[67], v4[71], v4[70]));
    faces.push(new Face(color4, v4[66], v4[67], v4[75], v4[74]));
    faces.push(new Face(color4, v4[66], v4[67], v4[83], v4[82]));
    faces.push(new Face(color4, v4[66], v4[67], v4[99], v4[98]));
    faces.push(new Face(color4, v4[66], v4[70], v4[78], v4[74]));
    faces.push(new Face(color4, v4[66], v4[70], v4[86], v4[82]));
    faces.push(new Face(color4, v4[66], v4[70], v4[102], v4[98]));
    faces.push(new Face(color4, v4[66], v4[74], v4[90], v4[82]));
    faces.push(new Face(color4, v4[66], v4[74], v4[106], v4[98]));
    faces.push(new Face(color4, v4[66], v4[82], v4[114], v4[98]));
    faces.push(new Face(color4, v4[67], v4[71], v4[79], v4[75]));
    faces.push(new Face(color4, v4[67], v4[71], v4[87], v4[83]));
    faces.push(new Face(color4, v4[67], v4[71], v4[103], v4[99]));
    faces.push(new Face(color4, v4[67], v4[75], v4[91], v4[83]));
    faces.push(new Face(color4, v4[67], v4[75], v4[107], v4[99]));
    faces.push(new Face(color4, v4[67], v4[83], v4[115], v4[99]));
    faces.push(new Face(color4, v4[68], v4[69], v4[71], v4[70]));
    faces.push(new Face(color4, v4[68], v4[69], v4[77], v4[76]));
    faces.push(new Face(color4, v4[68], v4[69], v4[85], v4[84]));
    faces.push(new Face(color4, v4[68], v4[69], v4[101], v4[100]));
    faces.push(new Face(color4, v4[68], v4[70], v4[78], v4[76]));
    faces.push(new Face(color4, v4[68], v4[70], v4[86], v4[84]));
    faces.push(new Face(color4, v4[68], v4[70], v4[102], v4[100]));
    faces.push(new Face(color4, v4[68], v4[76], v4[92], v4[84]));
    faces.push(new Face(color4, v4[68], v4[76], v4[108], v4[100]));
    faces.push(new Face(color4, v4[68], v4[84], v4[116], v4[100]));
    faces.push(new Face(color4, v4[69], v4[71], v4[79], v4[77]));
    faces.push(new Face(color4, v4[69], v4[71], v4[87], v4[85]));
    faces.push(new Face(color4, v4[69], v4[71], v4[103], v4[101]));
    faces.push(new Face(color4, v4[69], v4[77], v4[93], v4[85]));
    faces.push(new Face(color4, v4[69], v4[77], v4[109], v4[101]));
    faces.push(new Face(color4, v4[69], v4[85], v4[117], v4[101]));
    faces.push(new Face(color4, v4[70], v4[71], v4[79], v4[78]));
    faces.push(new Face(color4, v4[70], v4[71], v4[87], v4[86]));
    faces.push(new Face(color4, v4[70], v4[71], v4[103], v4[102]));
    faces.push(new Face(color4, v4[70], v4[78], v4[94], v4[86]));
    faces.push(new Face(color4, v4[70], v4[78], v4[110], v4[102]));
    faces.push(new Face(color4, v4[70], v4[86], v4[118], v4[102]));
    faces.push(new Face(color4, v4[71], v4[79], v4[95], v4[87]));
    faces.push(new Face(color4, v4[71], v4[79], v4[111], v4[103]));
    faces.push(new Face(color4, v4[71], v4[87], v4[119], v4[103]));
    faces.push(new Face(color4, v4[72], v4[73], v4[75], v4[74]));
    faces.push(new Face(color4, v4[72], v4[73], v4[77], v4[76]));
    faces.push(new Face(color4, v4[72], v4[73], v4[89], v4[88]));
    faces.push(new Face(color4, v4[72], v4[73], v4[105], v4[104]));
    faces.push(new Face(color4, v4[72], v4[74], v4[78], v4[76]));
    faces.push(new Face(color4, v4[72], v4[74], v4[90], v4[88]));
    faces.push(new Face(color4, v4[72], v4[74], v4[106], v4[104]));
    faces.push(new Face(color4, v4[72], v4[76], v4[92], v4[88]));
    faces.push(new Face(color4, v4[72], v4[76], v4[108], v4[104]));
    faces.push(new Face(color4, v4[72], v4[88], v4[120], v4[104]));
    faces.push(new Face(color4, v4[73], v4[75], v4[79], v4[77]));
    faces.push(new Face(color4, v4[73], v4[75], v4[91], v4[89]));
    faces.push(new Face(color4, v4[73], v4[75], v4[107], v4[105]));
    faces.push(new Face(color4, v4[73], v4[77], v4[93], v4[89]));
    faces.push(new Face(color4, v4[73], v4[77], v4[109], v4[105]));
    faces.push(new Face(color4, v4[73], v4[89], v4[121], v4[105]));
    faces.push(new Face(color4, v4[74], v4[75], v4[79], v4[78]));
    faces.push(new Face(color4, v4[74], v4[75], v4[91], v4[90]));
    faces.push(new Face(color4, v4[74], v4[75], v4[107], v4[106]));
    faces.push(new Face(color4, v4[74], v4[78], v4[94], v4[90]));
    faces.push(new Face(color4, v4[74], v4[78], v4[110], v4[106]));
    faces.push(new Face(color4, v4[74], v4[90], v4[122], v4[106]));
    faces.push(new Face(color4, v4[75], v4[79], v4[95], v4[91]));
    faces.push(new Face(color4, v4[75], v4[79], v4[111], v4[107]));
    faces.push(new Face(color4, v4[75], v4[91], v4[123], v4[107]));
    faces.push(new Face(color4, v4[76], v4[77], v4[79], v4[78]));
    faces.push(new Face(color4, v4[76], v4[77], v4[93], v4[92]));
    faces.push(new Face(color4, v4[76], v4[77], v4[109], v4[108]));
    faces.push(new Face(color4, v4[76], v4[78], v4[94], v4[92]));
    faces.push(new Face(color4, v4[76], v4[78], v4[110], v4[108]));
    faces.push(new Face(color4, v4[76], v4[92], v4[124], v4[108]));
    faces.push(new Face(color4, v4[77], v4[79], v4[95], v4[93]));
    faces.push(new Face(color4, v4[77], v4[79], v4[111], v4[109]));
    faces.push(new Face(color4, v4[77], v4[93], v4[125], v4[109]));
    faces.push(new Face(color4, v4[78], v4[79], v4[95], v4[94]));
    faces.push(new Face(color4, v4[78], v4[79], v4[111], v4[110]));
    faces.push(new Face(color4, v4[78], v4[94], v4[126], v4[110]));
    faces.push(new Face(color4, v4[79], v4[95], v4[127], v4[111]));
    faces.push(new Face(color4, v4[80], v4[81], v4[83], v4[82]));
    faces.push(new Face(color4, v4[80], v4[81], v4[85], v4[84]));
    faces.push(new Face(color4, v4[80], v4[81], v4[89], v4[88]));
    faces.push(new Face(color4, v4[80], v4[81], v4[113], v4[112]));
    faces.push(new Face(color4, v4[80], v4[82], v4[86], v4[84]));
    faces.push(new Face(color4, v4[80], v4[82], v4[90], v4[88]));
    faces.push(new Face(color4, v4[80], v4[82], v4[114], v4[112]));
    faces.push(new Face(color4, v4[80], v4[84], v4[92], v4[88]));
    faces.push(new Face(color4, v4[80], v4[84], v4[116], v4[112]));
    faces.push(new Face(color4, v4[80], v4[88], v4[120], v4[112]));
    faces.push(new Face(color4, v4[81], v4[83], v4[87], v4[85]));
    faces.push(new Face(color4, v4[81], v4[83], v4[91], v4[89]));
    faces.push(new Face(color4, v4[81], v4[83], v4[115], v4[113]));
    faces.push(new Face(color4, v4[81], v4[85], v4[93], v4[89]));
    faces.push(new Face(color4, v4[81], v4[85], v4[117], v4[113]));
    faces.push(new Face(color4, v4[81], v4[89], v4[121], v4[113]));
    faces.push(new Face(color4, v4[82], v4[83], v4[87], v4[86]));
    faces.push(new Face(color4, v4[82], v4[83], v4[91], v4[90]));
    faces.push(new Face(color4, v4[82], v4[83], v4[115], v4[114]));
    faces.push(new Face(color4, v4[82], v4[86], v4[94], v4[90]));
    faces.push(new Face(color4, v4[82], v4[86], v4[118], v4[114]));
    faces.push(new Face(color4, v4[82], v4[90], v4[122], v4[114]));
    faces.push(new Face(color4, v4[83], v4[87], v4[95], v4[91]));
    faces.push(new Face(color4, v4[83], v4[87], v4[119], v4[115]));
    faces.push(new Face(color4, v4[83], v4[91], v4[123], v4[115]));
    faces.push(new Face(color4, v4[84], v4[85], v4[87], v4[86]));
    faces.push(new Face(color4, v4[84], v4[85], v4[93], v4[92]));
    faces.push(new Face(color4, v4[84], v4[85], v4[117], v4[116]));
    faces.push(new Face(color4, v4[84], v4[86], v4[94], v4[92]));
    faces.push(new Face(color4, v4[84], v4[86], v4[118], v4[116]));
    faces.push(new Face(color4, v4[84], v4[92], v4[124], v4[116]));
    faces.push(new Face(color4, v4[85], v4[87], v4[95], v4[93]));
    faces.push(new Face(color4, v4[85], v4[87], v4[119], v4[117]));
    faces.push(new Face(color4, v4[85], v4[93], v4[125], v4[117]));
    faces.push(new Face(color4, v4[86], v4[87], v4[95], v4[94]));
    faces.push(new Face(color4, v4[86], v4[87], v4[119], v4[118]));
    faces.push(new Face(color4, v4[86], v4[94], v4[126], v4[118]));
    faces.push(new Face(color4, v4[87], v4[95], v4[127], v4[119]));
    faces.push(new Face(color4, v4[88], v4[89], v4[91], v4[90]));
    faces.push(new Face(color4, v4[88], v4[89], v4[93], v4[92]));
    faces.push(new Face(color4, v4[88], v4[89], v4[121], v4[120]));
    faces.push(new Face(color4, v4[88], v4[90], v4[94], v4[92]));
    faces.push(new Face(color4, v4[88], v4[90], v4[122], v4[120]));
    faces.push(new Face(color4, v4[88], v4[92], v4[124], v4[120]));
    faces.push(new Face(color4, v4[89], v4[91], v4[95], v4[93]));
    faces.push(new Face(color4, v4[89], v4[91], v4[123], v4[121]));
    faces.push(new Face(color4, v4[89], v4[93], v4[125], v4[121]));
    faces.push(new Face(color4, v4[90], v4[91], v4[95], v4[94]));
    faces.push(new Face(color4, v4[90], v4[91], v4[123], v4[122]));
    faces.push(new Face(color4, v4[90], v4[94], v4[126], v4[122]));
    faces.push(new Face(color4, v4[91], v4[95], v4[127], v4[123]));
    faces.push(new Face(color4, v4[92], v4[93], v4[95], v4[94]));
    faces.push(new Face(color4, v4[92], v4[93], v4[125], v4[124]));
    faces.push(new Face(color4, v4[92], v4[94], v4[126], v4[124]));
    faces.push(new Face(color4, v4[93], v4[95], v4[127], v4[125]));
    faces.push(new Face(color4, v4[94], v4[95], v4[127], v4[126]));
    faces.push(new Face(color4, v4[96], v4[97], v4[99], v4[98]));
    faces.push(new Face(color4, v4[96], v4[97], v4[101], v4[100]));
    faces.push(new Face(color4, v4[96], v4[97], v4[105], v4[104]));
    faces.push(new Face(color4, v4[96], v4[97], v4[113], v4[112]));
    faces.push(new Face(color4, v4[96], v4[98], v4[102], v4[100]));
    faces.push(new Face(color4, v4[96], v4[98], v4[106], v4[104]));
    faces.push(new Face(color4, v4[96], v4[98], v4[114], v4[112]));
    faces.push(new Face(color4, v4[96], v4[100], v4[108], v4[104]));
    faces.push(new Face(color4, v4[96], v4[100], v4[116], v4[112]));
    faces.push(new Face(color4, v4[96], v4[104], v4[120], v4[112]));
    faces.push(new Face(color4, v4[97], v4[99], v4[103], v4[101]));
    faces.push(new Face(color4, v4[97], v4[99], v4[107], v4[105]));
    faces.push(new Face(color4, v4[97], v4[99], v4[115], v4[113]));
    faces.push(new Face(color4, v4[97], v4[101], v4[109], v4[105]));
    faces.push(new Face(color4, v4[97], v4[101], v4[117], v4[113]));
    faces.push(new Face(color4, v4[97], v4[105], v4[121], v4[113]));
    faces.push(new Face(color4, v4[98], v4[99], v4[103], v4[102]));
    faces.push(new Face(color4, v4[98], v4[99], v4[107], v4[106]));
    faces.push(new Face(color4, v4[98], v4[99], v4[115], v4[114]));
    faces.push(new Face(color4, v4[98], v4[102], v4[110], v4[106]));
    faces.push(new Face(color4, v4[98], v4[102], v4[118], v4[114]));
    faces.push(new Face(color4, v4[98], v4[106], v4[122], v4[114]));
    faces.push(new Face(color4, v4[99], v4[103], v4[111], v4[107]));
    faces.push(new Face(color4, v4[99], v4[103], v4[119], v4[115]));
    faces.push(new Face(color4, v4[99], v4[107], v4[123], v4[115]));
    faces.push(new Face(color4, v4[100], v4[101], v4[103], v4[102]));
    faces.push(new Face(color4, v4[100], v4[101], v4[109], v4[108]));
    faces.push(new Face(color4, v4[100], v4[101], v4[117], v4[116]));
    faces.push(new Face(color4, v4[100], v4[102], v4[110], v4[108]));
    faces.push(new Face(color4, v4[100], v4[102], v4[118], v4[116]));
    faces.push(new Face(color4, v4[100], v4[108], v4[124], v4[116]));
    faces.push(new Face(color4, v4[101], v4[103], v4[111], v4[109]));
    faces.push(new Face(color4, v4[101], v4[103], v4[119], v4[117]));
    faces.push(new Face(color4, v4[101], v4[109], v4[125], v4[117]));
    faces.push(new Face(color4, v4[102], v4[103], v4[111], v4[110]));
    faces.push(new Face(color4, v4[102], v4[103], v4[119], v4[118]));
    faces.push(new Face(color4, v4[102], v4[110], v4[126], v4[118]));
    faces.push(new Face(color4, v4[103], v4[111], v4[127], v4[119]));
    faces.push(new Face(color4, v4[104], v4[105], v4[107], v4[106]));
    faces.push(new Face(color4, v4[104], v4[105], v4[109], v4[108]));
    faces.push(new Face(color4, v4[104], v4[105], v4[121], v4[120]));
    faces.push(new Face(color4, v4[104], v4[106], v4[110], v4[108]));
    faces.push(new Face(color4, v4[104], v4[106], v4[122], v4[120]));
    faces.push(new Face(color4, v4[104], v4[108], v4[124], v4[120]));
    faces.push(new Face(color4, v4[105], v4[107], v4[111], v4[109]));
    faces.push(new Face(color4, v4[105], v4[107], v4[123], v4[121]));
    faces.push(new Face(color4, v4[105], v4[109], v4[125], v4[121]));
    faces.push(new Face(color4, v4[106], v4[107], v4[111], v4[110]));
    faces.push(new Face(color4, v4[106], v4[107], v4[123], v4[122]));
    faces.push(new Face(color4, v4[106], v4[110], v4[126], v4[122]));
    faces.push(new Face(color4, v4[107], v4[111], v4[127], v4[123]));
    faces.push(new Face(color4, v4[108], v4[109], v4[111], v4[110]));
    faces.push(new Face(color4, v4[108], v4[109], v4[125], v4[124]));
    faces.push(new Face(color4, v4[108], v4[110], v4[126], v4[124]));
    faces.push(new Face(color4, v4[109], v4[111], v4[127], v4[125]));
    faces.push(new Face(color4, v4[110], v4[111], v4[127], v4[126]));
    faces.push(new Face(color4, v4[112], v4[113], v4[115], v4[114]));
    faces.push(new Face(color4, v4[112], v4[113], v4[117], v4[116]));
    faces.push(new Face(color4, v4[112], v4[113], v4[121], v4[120]));
    faces.push(new Face(color4, v4[112], v4[114], v4[118], v4[116]));
    faces.push(new Face(color4, v4[112], v4[114], v4[122], v4[120]));
    faces.push(new Face(color4, v4[112], v4[116], v4[124], v4[120]));
    faces.push(new Face(color4, v4[113], v4[115], v4[119], v4[117]));
    faces.push(new Face(color4, v4[113], v4[115], v4[123], v4[121]));
    faces.push(new Face(color4, v4[113], v4[117], v4[125], v4[121]));
    faces.push(new Face(color4, v4[114], v4[115], v4[119], v4[118]));
    faces.push(new Face(color4, v4[114], v4[115], v4[123], v4[122]));
    faces.push(new Face(color4, v4[114], v4[118], v4[126], v4[122]));
    faces.push(new Face(color4, v4[115], v4[119], v4[127], v4[123]));
    faces.push(new Face(color4, v4[116], v4[117], v4[119], v4[118]));
    faces.push(new Face(color4, v4[116], v4[117], v4[125], v4[124]));
    faces.push(new Face(color4, v4[116], v4[118], v4[126], v4[124]));
    faces.push(new Face(color4, v4[117], v4[119], v4[127], v4[125]));
    faces.push(new Face(color4, v4[118], v4[119], v4[127], v4[126]));
    faces.push(new Face(color4, v4[120], v4[121], v4[123], v4[122]));
    faces.push(new Face(color4, v4[120], v4[121], v4[125], v4[124]));
    faces.push(new Face(color4, v4[120], v4[122], v4[126], v4[124]));
    faces.push(new Face(color4, v4[121], v4[123], v4[127], v4[125]));
    faces.push(new Face(color4, v4[122], v4[123], v4[127], v4[126]));
    faces.push(new Face(color4, v4[124], v4[125], v4[127], v4[126]));
    for (let i = 0; i < v4.length; i++) {
        v4[i].rotate(r);
        v4[i].project();
    }

    v5[0] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v5[1] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v5[2] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v5[3] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v5[4] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v5[5] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v5[6] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v5[7] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2+Math.cos(theta)*w);
    v5[8] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v5[9] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v5[10] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v5[11] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v5[12] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v5[13] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v5[14] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2);
    v5[15] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2+Math.cos(theta)*w);
    v5[16] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v5[17] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v5[18] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v5[19] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v5[20] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v5[21] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v5[22] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v5[23] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2+Math.cos(theta)*w);
    v5[24] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v5[25] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v5[26] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v5[27] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v5[28] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v5[29] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v5[30] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, w/2, w/2, -w/2);
    v5[31] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2+Math.cos(theta)*w);
    v5[32] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v5[33] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v5[34] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v5[35] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v5[36] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v5[37] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v5[38] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v5[39] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2+Math.cos(theta)*w);
    v5[40] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v5[41] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v5[42] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v5[43] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v5[44] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v5[45] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v5[46] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2);
    v5[47] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2+Math.cos(theta)*w);
    v5[48] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v5[49] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v5[50] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v5[51] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v5[52] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v5[53] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v5[54] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v5[55] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2+Math.cos(theta)*w);
    v5[56] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v5[57] = new Vertex(-w/2, w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v5[58] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v5[59] = new Vertex(-w/2, w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v5[60] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v5[61] = new Vertex(-w/2, w/2, w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v5[62] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, w/2, w/2, -w/2);
    v5[63] = new Vertex(-w/2, w/2, w/2, w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2+Math.cos(theta)*w);
    v5[64] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v5[65] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v5[66] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v5[67] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v5[68] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v5[69] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v5[70] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v5[71] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2+Math.cos(theta)*w);
    v5[72] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v5[73] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v5[74] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v5[75] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v5[76] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v5[77] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v5[78] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2);
    v5[79] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2+Math.cos(theta)*w);
    v5[80] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v5[81] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v5[82] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v5[83] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v5[84] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v5[85] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v5[86] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v5[87] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2+Math.cos(theta)*w);
    v5[88] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v5[89] = new Vertex(w/2, -w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v5[90] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v5[91] = new Vertex(w/2, -w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v5[92] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v5[93] = new Vertex(w/2, -w/2, w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v5[94] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, w/2, w/2, -w/2);
    v5[95] = new Vertex(w/2, -w/2, w/2, w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2+Math.cos(theta)*w);
    v5[96] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v5[97] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v5[98] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v5[99] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v5[100] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v5[101] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v5[102] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v5[103] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2+Math.cos(theta)*w);
    v5[104] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v5[105] = new Vertex(w/2, w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v5[106] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v5[107] = new Vertex(w/2, w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v5[108] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v5[109] = new Vertex(w/2, w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v5[110] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2);
    v5[111] = new Vertex(w/2, w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2+Math.cos(theta)*w);
    v5[112] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v5[113] = new Vertex(w/2, w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v5[114] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v5[115] = new Vertex(w/2, w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v5[116] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v5[117] = new Vertex(w/2, w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v5[118] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v5[119] = new Vertex(w/2, w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2+Math.cos(theta)*w);
    v5[120] = new Vertex(w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v5[121] = new Vertex(w/2, w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v5[122] = new Vertex(w/2, w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v5[123] = new Vertex(w/2, w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v5[124] = new Vertex(w/2, w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v5[125] = new Vertex(w/2, w/2, w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v5[126] = new Vertex(w/2, w/2, w/2, w/2, -w/2, w/2, w/2, -w/2);
    v5[127] = new Vertex(w/2, w/2, w/2, w/2, -w/2-Math.sin(theta)*w, w/2, w/2, -w/2+Math.cos(theta)*w);
    faces.push(new Face(color5, v5[0], v5[1], v5[3], v5[2]));
    faces.push(new Face(color5, v5[0], v5[1], v5[5], v5[4]));
    faces.push(new Face(color5, v5[0], v5[1], v5[9], v5[8]));
    faces.push(new Face(color5, v5[0], v5[1], v5[17], v5[16]));
    faces.push(new Face(color5, v5[0], v5[1], v5[33], v5[32]));
    faces.push(new Face(color5, v5[0], v5[1], v5[65], v5[64]));
    faces.push(new Face(color5, v5[0], v5[2], v5[6], v5[4]));
    faces.push(new Face(color5, v5[0], v5[2], v5[10], v5[8]));
    faces.push(new Face(color5, v5[0], v5[2], v5[18], v5[16]));
    faces.push(new Face(color5, v5[0], v5[2], v5[34], v5[32]));
    faces.push(new Face(color5, v5[0], v5[2], v5[66], v5[64]));
    faces.push(new Face(color5, v5[0], v5[4], v5[12], v5[8]));
    faces.push(new Face(color5, v5[0], v5[4], v5[20], v5[16]));
    faces.push(new Face(color5, v5[0], v5[4], v5[36], v5[32]));
    faces.push(new Face(color5, v5[0], v5[4], v5[68], v5[64]));
    faces.push(new Face(color5, v5[0], v5[8], v5[24], v5[16]));
    faces.push(new Face(color5, v5[0], v5[8], v5[40], v5[32]));
    faces.push(new Face(color5, v5[0], v5[8], v5[72], v5[64]));
    faces.push(new Face(color5, v5[0], v5[16], v5[48], v5[32]));
    faces.push(new Face(color5, v5[0], v5[16], v5[80], v5[64]));
    faces.push(new Face(color5, v5[0], v5[32], v5[96], v5[64]));
    faces.push(new Face(color5, v5[1], v5[3], v5[7], v5[5]));
    faces.push(new Face(color5, v5[1], v5[3], v5[11], v5[9]));
    faces.push(new Face(color5, v5[1], v5[3], v5[19], v5[17]));
    faces.push(new Face(color5, v5[1], v5[3], v5[35], v5[33]));
    faces.push(new Face(color5, v5[1], v5[3], v5[67], v5[65]));
    faces.push(new Face(color5, v5[1], v5[5], v5[13], v5[9]));
    faces.push(new Face(color5, v5[1], v5[5], v5[21], v5[17]));
    faces.push(new Face(color5, v5[1], v5[5], v5[37], v5[33]));
    faces.push(new Face(color5, v5[1], v5[5], v5[69], v5[65]));
    faces.push(new Face(color5, v5[1], v5[9], v5[25], v5[17]));
    faces.push(new Face(color5, v5[1], v5[9], v5[41], v5[33]));
    faces.push(new Face(color5, v5[1], v5[9], v5[73], v5[65]));
    faces.push(new Face(color5, v5[1], v5[17], v5[49], v5[33]));
    faces.push(new Face(color5, v5[1], v5[17], v5[81], v5[65]));
    faces.push(new Face(color5, v5[1], v5[33], v5[97], v5[65]));
    faces.push(new Face(color5, v5[2], v5[3], v5[7], v5[6]));
    faces.push(new Face(color5, v5[2], v5[3], v5[11], v5[10]));
    faces.push(new Face(color5, v5[2], v5[3], v5[19], v5[18]));
    faces.push(new Face(color5, v5[2], v5[3], v5[35], v5[34]));
    faces.push(new Face(color5, v5[2], v5[3], v5[67], v5[66]));
    faces.push(new Face(color5, v5[2], v5[6], v5[14], v5[10]));
    faces.push(new Face(color5, v5[2], v5[6], v5[22], v5[18]));
    faces.push(new Face(color5, v5[2], v5[6], v5[38], v5[34]));
    faces.push(new Face(color5, v5[2], v5[6], v5[70], v5[66]));
    faces.push(new Face(color5, v5[2], v5[10], v5[26], v5[18]));
    faces.push(new Face(color5, v5[2], v5[10], v5[42], v5[34]));
    faces.push(new Face(color5, v5[2], v5[10], v5[74], v5[66]));
    faces.push(new Face(color5, v5[2], v5[18], v5[50], v5[34]));
    faces.push(new Face(color5, v5[2], v5[18], v5[82], v5[66]));
    faces.push(new Face(color5, v5[2], v5[34], v5[98], v5[66]));
    faces.push(new Face(color5, v5[3], v5[7], v5[15], v5[11]));
    faces.push(new Face(color5, v5[3], v5[7], v5[23], v5[19]));
    faces.push(new Face(color5, v5[3], v5[7], v5[39], v5[35]));
    faces.push(new Face(color5, v5[3], v5[7], v5[71], v5[67]));
    faces.push(new Face(color5, v5[3], v5[11], v5[27], v5[19]));
    faces.push(new Face(color5, v5[3], v5[11], v5[43], v5[35]));
    faces.push(new Face(color5, v5[3], v5[11], v5[75], v5[67]));
    faces.push(new Face(color5, v5[3], v5[19], v5[51], v5[35]));
    faces.push(new Face(color5, v5[3], v5[19], v5[83], v5[67]));
    faces.push(new Face(color5, v5[3], v5[35], v5[99], v5[67]));
    faces.push(new Face(color5, v5[4], v5[5], v5[7], v5[6]));
    faces.push(new Face(color5, v5[4], v5[5], v5[13], v5[12]));
    faces.push(new Face(color5, v5[4], v5[5], v5[21], v5[20]));
    faces.push(new Face(color5, v5[4], v5[5], v5[37], v5[36]));
    faces.push(new Face(color5, v5[4], v5[5], v5[69], v5[68]));
    faces.push(new Face(color5, v5[4], v5[6], v5[14], v5[12]));
    faces.push(new Face(color5, v5[4], v5[6], v5[22], v5[20]));
    faces.push(new Face(color5, v5[4], v5[6], v5[38], v5[36]));
    faces.push(new Face(color5, v5[4], v5[6], v5[70], v5[68]));
    faces.push(new Face(color5, v5[4], v5[12], v5[28], v5[20]));
    faces.push(new Face(color5, v5[4], v5[12], v5[44], v5[36]));
    faces.push(new Face(color5, v5[4], v5[12], v5[76], v5[68]));
    faces.push(new Face(color5, v5[4], v5[20], v5[52], v5[36]));
    faces.push(new Face(color5, v5[4], v5[20], v5[84], v5[68]));
    faces.push(new Face(color5, v5[4], v5[36], v5[100], v5[68]));
    faces.push(new Face(color5, v5[5], v5[7], v5[15], v5[13]));
    faces.push(new Face(color5, v5[5], v5[7], v5[23], v5[21]));
    faces.push(new Face(color5, v5[5], v5[7], v5[39], v5[37]));
    faces.push(new Face(color5, v5[5], v5[7], v5[71], v5[69]));
    faces.push(new Face(color5, v5[5], v5[13], v5[29], v5[21]));
    faces.push(new Face(color5, v5[5], v5[13], v5[45], v5[37]));
    faces.push(new Face(color5, v5[5], v5[13], v5[77], v5[69]));
    faces.push(new Face(color5, v5[5], v5[21], v5[53], v5[37]));
    faces.push(new Face(color5, v5[5], v5[21], v5[85], v5[69]));
    faces.push(new Face(color5, v5[5], v5[37], v5[101], v5[69]));
    faces.push(new Face(color5, v5[6], v5[7], v5[15], v5[14]));
    faces.push(new Face(color5, v5[6], v5[7], v5[23], v5[22]));
    faces.push(new Face(color5, v5[6], v5[7], v5[39], v5[38]));
    faces.push(new Face(color5, v5[6], v5[7], v5[71], v5[70]));
    faces.push(new Face(color5, v5[6], v5[14], v5[30], v5[22]));
    faces.push(new Face(color5, v5[6], v5[14], v5[46], v5[38]));
    faces.push(new Face(color5, v5[6], v5[14], v5[78], v5[70]));
    faces.push(new Face(color5, v5[6], v5[22], v5[54], v5[38]));
    faces.push(new Face(color5, v5[6], v5[22], v5[86], v5[70]));
    faces.push(new Face(color5, v5[6], v5[38], v5[102], v5[70]));
    faces.push(new Face(color5, v5[7], v5[15], v5[31], v5[23]));
    faces.push(new Face(color5, v5[7], v5[15], v5[47], v5[39]));
    faces.push(new Face(color5, v5[7], v5[15], v5[79], v5[71]));
    faces.push(new Face(color5, v5[7], v5[23], v5[55], v5[39]));
    faces.push(new Face(color5, v5[7], v5[23], v5[87], v5[71]));
    faces.push(new Face(color5, v5[7], v5[39], v5[103], v5[71]));
    faces.push(new Face(color5, v5[8], v5[9], v5[11], v5[10]));
    faces.push(new Face(color5, v5[8], v5[9], v5[13], v5[12]));
    faces.push(new Face(color5, v5[8], v5[9], v5[25], v5[24]));
    faces.push(new Face(color5, v5[8], v5[9], v5[41], v5[40]));
    faces.push(new Face(color5, v5[8], v5[9], v5[73], v5[72]));
    faces.push(new Face(color5, v5[8], v5[10], v5[14], v5[12]));
    faces.push(new Face(color5, v5[8], v5[10], v5[26], v5[24]));
    faces.push(new Face(color5, v5[8], v5[10], v5[42], v5[40]));
    faces.push(new Face(color5, v5[8], v5[10], v5[74], v5[72]));
    faces.push(new Face(color5, v5[8], v5[12], v5[28], v5[24]));
    faces.push(new Face(color5, v5[8], v5[12], v5[44], v5[40]));
    faces.push(new Face(color5, v5[8], v5[12], v5[76], v5[72]));
    faces.push(new Face(color5, v5[8], v5[24], v5[56], v5[40]));
    faces.push(new Face(color5, v5[8], v5[24], v5[88], v5[72]));
    faces.push(new Face(color5, v5[8], v5[40], v5[104], v5[72]));
    faces.push(new Face(color5, v5[9], v5[11], v5[15], v5[13]));
    faces.push(new Face(color5, v5[9], v5[11], v5[27], v5[25]));
    faces.push(new Face(color5, v5[9], v5[11], v5[43], v5[41]));
    faces.push(new Face(color5, v5[9], v5[11], v5[75], v5[73]));
    faces.push(new Face(color5, v5[9], v5[13], v5[29], v5[25]));
    faces.push(new Face(color5, v5[9], v5[13], v5[45], v5[41]));
    faces.push(new Face(color5, v5[9], v5[13], v5[77], v5[73]));
    faces.push(new Face(color5, v5[9], v5[25], v5[57], v5[41]));
    faces.push(new Face(color5, v5[9], v5[25], v5[89], v5[73]));
    faces.push(new Face(color5, v5[9], v5[41], v5[105], v5[73]));
    faces.push(new Face(color5, v5[10], v5[11], v5[15], v5[14]));
    faces.push(new Face(color5, v5[10], v5[11], v5[27], v5[26]));
    faces.push(new Face(color5, v5[10], v5[11], v5[43], v5[42]));
    faces.push(new Face(color5, v5[10], v5[11], v5[75], v5[74]));
    faces.push(new Face(color5, v5[10], v5[14], v5[30], v5[26]));
    faces.push(new Face(color5, v5[10], v5[14], v5[46], v5[42]));
    faces.push(new Face(color5, v5[10], v5[14], v5[78], v5[74]));
    faces.push(new Face(color5, v5[10], v5[26], v5[58], v5[42]));
    faces.push(new Face(color5, v5[10], v5[26], v5[90], v5[74]));
    faces.push(new Face(color5, v5[10], v5[42], v5[106], v5[74]));
    faces.push(new Face(color5, v5[11], v5[15], v5[31], v5[27]));
    faces.push(new Face(color5, v5[11], v5[15], v5[47], v5[43]));
    faces.push(new Face(color5, v5[11], v5[15], v5[79], v5[75]));
    faces.push(new Face(color5, v5[11], v5[27], v5[59], v5[43]));
    faces.push(new Face(color5, v5[11], v5[27], v5[91], v5[75]));
    faces.push(new Face(color5, v5[11], v5[43], v5[107], v5[75]));
    faces.push(new Face(color5, v5[12], v5[13], v5[15], v5[14]));
    faces.push(new Face(color5, v5[12], v5[13], v5[29], v5[28]));
    faces.push(new Face(color5, v5[12], v5[13], v5[45], v5[44]));
    faces.push(new Face(color5, v5[12], v5[13], v5[77], v5[76]));
    faces.push(new Face(color5, v5[12], v5[14], v5[30], v5[28]));
    faces.push(new Face(color5, v5[12], v5[14], v5[46], v5[44]));
    faces.push(new Face(color5, v5[12], v5[14], v5[78], v5[76]));
    faces.push(new Face(color5, v5[12], v5[28], v5[60], v5[44]));
    faces.push(new Face(color5, v5[12], v5[28], v5[92], v5[76]));
    faces.push(new Face(color5, v5[12], v5[44], v5[108], v5[76]));
    faces.push(new Face(color5, v5[13], v5[15], v5[31], v5[29]));
    faces.push(new Face(color5, v5[13], v5[15], v5[47], v5[45]));
    faces.push(new Face(color5, v5[13], v5[15], v5[79], v5[77]));
    faces.push(new Face(color5, v5[13], v5[29], v5[61], v5[45]));
    faces.push(new Face(color5, v5[13], v5[29], v5[93], v5[77]));
    faces.push(new Face(color5, v5[13], v5[45], v5[109], v5[77]));
    faces.push(new Face(color5, v5[14], v5[15], v5[31], v5[30]));
    faces.push(new Face(color5, v5[14], v5[15], v5[47], v5[46]));
    faces.push(new Face(color5, v5[14], v5[15], v5[79], v5[78]));
    faces.push(new Face(color5, v5[14], v5[30], v5[62], v5[46]));
    faces.push(new Face(color5, v5[14], v5[30], v5[94], v5[78]));
    faces.push(new Face(color5, v5[14], v5[46], v5[110], v5[78]));
    faces.push(new Face(color5, v5[15], v5[31], v5[63], v5[47]));
    faces.push(new Face(color5, v5[15], v5[31], v5[95], v5[79]));
    faces.push(new Face(color5, v5[15], v5[47], v5[111], v5[79]));
    faces.push(new Face(color5, v5[16], v5[17], v5[19], v5[18]));
    faces.push(new Face(color5, v5[16], v5[17], v5[21], v5[20]));
    faces.push(new Face(color5, v5[16], v5[17], v5[25], v5[24]));
    faces.push(new Face(color5, v5[16], v5[17], v5[49], v5[48]));
    faces.push(new Face(color5, v5[16], v5[17], v5[81], v5[80]));
    faces.push(new Face(color5, v5[16], v5[18], v5[22], v5[20]));
    faces.push(new Face(color5, v5[16], v5[18], v5[26], v5[24]));
    faces.push(new Face(color5, v5[16], v5[18], v5[50], v5[48]));
    faces.push(new Face(color5, v5[16], v5[18], v5[82], v5[80]));
    faces.push(new Face(color5, v5[16], v5[20], v5[28], v5[24]));
    faces.push(new Face(color5, v5[16], v5[20], v5[52], v5[48]));
    faces.push(new Face(color5, v5[16], v5[20], v5[84], v5[80]));
    faces.push(new Face(color5, v5[16], v5[24], v5[56], v5[48]));
    faces.push(new Face(color5, v5[16], v5[24], v5[88], v5[80]));
    faces.push(new Face(color5, v5[16], v5[48], v5[112], v5[80]));
    faces.push(new Face(color5, v5[17], v5[19], v5[23], v5[21]));
    faces.push(new Face(color5, v5[17], v5[19], v5[27], v5[25]));
    faces.push(new Face(color5, v5[17], v5[19], v5[51], v5[49]));
    faces.push(new Face(color5, v5[17], v5[19], v5[83], v5[81]));
    faces.push(new Face(color5, v5[17], v5[21], v5[29], v5[25]));
    faces.push(new Face(color5, v5[17], v5[21], v5[53], v5[49]));
    faces.push(new Face(color5, v5[17], v5[21], v5[85], v5[81]));
    faces.push(new Face(color5, v5[17], v5[25], v5[57], v5[49]));
    faces.push(new Face(color5, v5[17], v5[25], v5[89], v5[81]));
    faces.push(new Face(color5, v5[17], v5[49], v5[113], v5[81]));
    faces.push(new Face(color5, v5[18], v5[19], v5[23], v5[22]));
    faces.push(new Face(color5, v5[18], v5[19], v5[27], v5[26]));
    faces.push(new Face(color5, v5[18], v5[19], v5[51], v5[50]));
    faces.push(new Face(color5, v5[18], v5[19], v5[83], v5[82]));
    faces.push(new Face(color5, v5[18], v5[22], v5[30], v5[26]));
    faces.push(new Face(color5, v5[18], v5[22], v5[54], v5[50]));
    faces.push(new Face(color5, v5[18], v5[22], v5[86], v5[82]));
    faces.push(new Face(color5, v5[18], v5[26], v5[58], v5[50]));
    faces.push(new Face(color5, v5[18], v5[26], v5[90], v5[82]));
    faces.push(new Face(color5, v5[18], v5[50], v5[114], v5[82]));
    faces.push(new Face(color5, v5[19], v5[23], v5[31], v5[27]));
    faces.push(new Face(color5, v5[19], v5[23], v5[55], v5[51]));
    faces.push(new Face(color5, v5[19], v5[23], v5[87], v5[83]));
    faces.push(new Face(color5, v5[19], v5[27], v5[59], v5[51]));
    faces.push(new Face(color5, v5[19], v5[27], v5[91], v5[83]));
    faces.push(new Face(color5, v5[19], v5[51], v5[115], v5[83]));
    faces.push(new Face(color5, v5[20], v5[21], v5[23], v5[22]));
    faces.push(new Face(color5, v5[20], v5[21], v5[29], v5[28]));
    faces.push(new Face(color5, v5[20], v5[21], v5[53], v5[52]));
    faces.push(new Face(color5, v5[20], v5[21], v5[85], v5[84]));
    faces.push(new Face(color5, v5[20], v5[22], v5[30], v5[28]));
    faces.push(new Face(color5, v5[20], v5[22], v5[54], v5[52]));
    faces.push(new Face(color5, v5[20], v5[22], v5[86], v5[84]));
    faces.push(new Face(color5, v5[20], v5[28], v5[60], v5[52]));
    faces.push(new Face(color5, v5[20], v5[28], v5[92], v5[84]));
    faces.push(new Face(color5, v5[20], v5[52], v5[116], v5[84]));
    faces.push(new Face(color5, v5[21], v5[23], v5[31], v5[29]));
    faces.push(new Face(color5, v5[21], v5[23], v5[55], v5[53]));
    faces.push(new Face(color5, v5[21], v5[23], v5[87], v5[85]));
    faces.push(new Face(color5, v5[21], v5[29], v5[61], v5[53]));
    faces.push(new Face(color5, v5[21], v5[29], v5[93], v5[85]));
    faces.push(new Face(color5, v5[21], v5[53], v5[117], v5[85]));
    faces.push(new Face(color5, v5[22], v5[23], v5[31], v5[30]));
    faces.push(new Face(color5, v5[22], v5[23], v5[55], v5[54]));
    faces.push(new Face(color5, v5[22], v5[23], v5[87], v5[86]));
    faces.push(new Face(color5, v5[22], v5[30], v5[62], v5[54]));
    faces.push(new Face(color5, v5[22], v5[30], v5[94], v5[86]));
    faces.push(new Face(color5, v5[22], v5[54], v5[118], v5[86]));
    faces.push(new Face(color5, v5[23], v5[31], v5[63], v5[55]));
    faces.push(new Face(color5, v5[23], v5[31], v5[95], v5[87]));
    faces.push(new Face(color5, v5[23], v5[55], v5[119], v5[87]));
    faces.push(new Face(color5, v5[24], v5[25], v5[27], v5[26]));
    faces.push(new Face(color5, v5[24], v5[25], v5[29], v5[28]));
    faces.push(new Face(color5, v5[24], v5[25], v5[57], v5[56]));
    faces.push(new Face(color5, v5[24], v5[25], v5[89], v5[88]));
    faces.push(new Face(color5, v5[24], v5[26], v5[30], v5[28]));
    faces.push(new Face(color5, v5[24], v5[26], v5[58], v5[56]));
    faces.push(new Face(color5, v5[24], v5[26], v5[90], v5[88]));
    faces.push(new Face(color5, v5[24], v5[28], v5[60], v5[56]));
    faces.push(new Face(color5, v5[24], v5[28], v5[92], v5[88]));
    faces.push(new Face(color5, v5[24], v5[56], v5[120], v5[88]));
    faces.push(new Face(color5, v5[25], v5[27], v5[31], v5[29]));
    faces.push(new Face(color5, v5[25], v5[27], v5[59], v5[57]));
    faces.push(new Face(color5, v5[25], v5[27], v5[91], v5[89]));
    faces.push(new Face(color5, v5[25], v5[29], v5[61], v5[57]));
    faces.push(new Face(color5, v5[25], v5[29], v5[93], v5[89]));
    faces.push(new Face(color5, v5[25], v5[57], v5[121], v5[89]));
    faces.push(new Face(color5, v5[26], v5[27], v5[31], v5[30]));
    faces.push(new Face(color5, v5[26], v5[27], v5[59], v5[58]));
    faces.push(new Face(color5, v5[26], v5[27], v5[91], v5[90]));
    faces.push(new Face(color5, v5[26], v5[30], v5[62], v5[58]));
    faces.push(new Face(color5, v5[26], v5[30], v5[94], v5[90]));
    faces.push(new Face(color5, v5[26], v5[58], v5[122], v5[90]));
    faces.push(new Face(color5, v5[27], v5[31], v5[63], v5[59]));
    faces.push(new Face(color5, v5[27], v5[31], v5[95], v5[91]));
    faces.push(new Face(color5, v5[27], v5[59], v5[123], v5[91]));
    faces.push(new Face(color5, v5[28], v5[29], v5[31], v5[30]));
    faces.push(new Face(color5, v5[28], v5[29], v5[61], v5[60]));
    faces.push(new Face(color5, v5[28], v5[29], v5[93], v5[92]));
    faces.push(new Face(color5, v5[28], v5[30], v5[62], v5[60]));
    faces.push(new Face(color5, v5[28], v5[30], v5[94], v5[92]));
    faces.push(new Face(color5, v5[28], v5[60], v5[124], v5[92]));
    faces.push(new Face(color5, v5[29], v5[31], v5[63], v5[61]));
    faces.push(new Face(color5, v5[29], v5[31], v5[95], v5[93]));
    faces.push(new Face(color5, v5[29], v5[61], v5[125], v5[93]));
    faces.push(new Face(color5, v5[30], v5[31], v5[63], v5[62]));
    faces.push(new Face(color5, v5[30], v5[31], v5[95], v5[94]));
    faces.push(new Face(color5, v5[30], v5[62], v5[126], v5[94]));
    faces.push(new Face(color5, v5[31], v5[63], v5[127], v5[95]));
    faces.push(new Face(color5, v5[32], v5[33], v5[35], v5[34]));
    faces.push(new Face(color5, v5[32], v5[33], v5[37], v5[36]));
    faces.push(new Face(color5, v5[32], v5[33], v5[41], v5[40]));
    faces.push(new Face(color5, v5[32], v5[33], v5[49], v5[48]));
    faces.push(new Face(color5, v5[32], v5[33], v5[97], v5[96]));
    faces.push(new Face(color5, v5[32], v5[34], v5[38], v5[36]));
    faces.push(new Face(color5, v5[32], v5[34], v5[42], v5[40]));
    faces.push(new Face(color5, v5[32], v5[34], v5[50], v5[48]));
    faces.push(new Face(color5, v5[32], v5[34], v5[98], v5[96]));
    faces.push(new Face(color5, v5[32], v5[36], v5[44], v5[40]));
    faces.push(new Face(color5, v5[32], v5[36], v5[52], v5[48]));
    faces.push(new Face(color5, v5[32], v5[36], v5[100], v5[96]));
    faces.push(new Face(color5, v5[32], v5[40], v5[56], v5[48]));
    faces.push(new Face(color5, v5[32], v5[40], v5[104], v5[96]));
    faces.push(new Face(color5, v5[32], v5[48], v5[112], v5[96]));
    faces.push(new Face(color5, v5[33], v5[35], v5[39], v5[37]));
    faces.push(new Face(color5, v5[33], v5[35], v5[43], v5[41]));
    faces.push(new Face(color5, v5[33], v5[35], v5[51], v5[49]));
    faces.push(new Face(color5, v5[33], v5[35], v5[99], v5[97]));
    faces.push(new Face(color5, v5[33], v5[37], v5[45], v5[41]));
    faces.push(new Face(color5, v5[33], v5[37], v5[53], v5[49]));
    faces.push(new Face(color5, v5[33], v5[37], v5[101], v5[97]));
    faces.push(new Face(color5, v5[33], v5[41], v5[57], v5[49]));
    faces.push(new Face(color5, v5[33], v5[41], v5[105], v5[97]));
    faces.push(new Face(color5, v5[33], v5[49], v5[113], v5[97]));
    faces.push(new Face(color5, v5[34], v5[35], v5[39], v5[38]));
    faces.push(new Face(color5, v5[34], v5[35], v5[43], v5[42]));
    faces.push(new Face(color5, v5[34], v5[35], v5[51], v5[50]));
    faces.push(new Face(color5, v5[34], v5[35], v5[99], v5[98]));
    faces.push(new Face(color5, v5[34], v5[38], v5[46], v5[42]));
    faces.push(new Face(color5, v5[34], v5[38], v5[54], v5[50]));
    faces.push(new Face(color5, v5[34], v5[38], v5[102], v5[98]));
    faces.push(new Face(color5, v5[34], v5[42], v5[58], v5[50]));
    faces.push(new Face(color5, v5[34], v5[42], v5[106], v5[98]));
    faces.push(new Face(color5, v5[34], v5[50], v5[114], v5[98]));
    faces.push(new Face(color5, v5[35], v5[39], v5[47], v5[43]));
    faces.push(new Face(color5, v5[35], v5[39], v5[55], v5[51]));
    faces.push(new Face(color5, v5[35], v5[39], v5[103], v5[99]));
    faces.push(new Face(color5, v5[35], v5[43], v5[59], v5[51]));
    faces.push(new Face(color5, v5[35], v5[43], v5[107], v5[99]));
    faces.push(new Face(color5, v5[35], v5[51], v5[115], v5[99]));
    faces.push(new Face(color5, v5[36], v5[37], v5[39], v5[38]));
    faces.push(new Face(color5, v5[36], v5[37], v5[45], v5[44]));
    faces.push(new Face(color5, v5[36], v5[37], v5[53], v5[52]));
    faces.push(new Face(color5, v5[36], v5[37], v5[101], v5[100]));
    faces.push(new Face(color5, v5[36], v5[38], v5[46], v5[44]));
    faces.push(new Face(color5, v5[36], v5[38], v5[54], v5[52]));
    faces.push(new Face(color5, v5[36], v5[38], v5[102], v5[100]));
    faces.push(new Face(color5, v5[36], v5[44], v5[60], v5[52]));
    faces.push(new Face(color5, v5[36], v5[44], v5[108], v5[100]));
    faces.push(new Face(color5, v5[36], v5[52], v5[116], v5[100]));
    faces.push(new Face(color5, v5[37], v5[39], v5[47], v5[45]));
    faces.push(new Face(color5, v5[37], v5[39], v5[55], v5[53]));
    faces.push(new Face(color5, v5[37], v5[39], v5[103], v5[101]));
    faces.push(new Face(color5, v5[37], v5[45], v5[61], v5[53]));
    faces.push(new Face(color5, v5[37], v5[45], v5[109], v5[101]));
    faces.push(new Face(color5, v5[37], v5[53], v5[117], v5[101]));
    faces.push(new Face(color5, v5[38], v5[39], v5[47], v5[46]));
    faces.push(new Face(color5, v5[38], v5[39], v5[55], v5[54]));
    faces.push(new Face(color5, v5[38], v5[39], v5[103], v5[102]));
    faces.push(new Face(color5, v5[38], v5[46], v5[62], v5[54]));
    faces.push(new Face(color5, v5[38], v5[46], v5[110], v5[102]));
    faces.push(new Face(color5, v5[38], v5[54], v5[118], v5[102]));
    faces.push(new Face(color5, v5[39], v5[47], v5[63], v5[55]));
    faces.push(new Face(color5, v5[39], v5[47], v5[111], v5[103]));
    faces.push(new Face(color5, v5[39], v5[55], v5[119], v5[103]));
    faces.push(new Face(color5, v5[40], v5[41], v5[43], v5[42]));
    faces.push(new Face(color5, v5[40], v5[41], v5[45], v5[44]));
    faces.push(new Face(color5, v5[40], v5[41], v5[57], v5[56]));
    faces.push(new Face(color5, v5[40], v5[41], v5[105], v5[104]));
    faces.push(new Face(color5, v5[40], v5[42], v5[46], v5[44]));
    faces.push(new Face(color5, v5[40], v5[42], v5[58], v5[56]));
    faces.push(new Face(color5, v5[40], v5[42], v5[106], v5[104]));
    faces.push(new Face(color5, v5[40], v5[44], v5[60], v5[56]));
    faces.push(new Face(color5, v5[40], v5[44], v5[108], v5[104]));
    faces.push(new Face(color5, v5[40], v5[56], v5[120], v5[104]));
    faces.push(new Face(color5, v5[41], v5[43], v5[47], v5[45]));
    faces.push(new Face(color5, v5[41], v5[43], v5[59], v5[57]));
    faces.push(new Face(color5, v5[41], v5[43], v5[107], v5[105]));
    faces.push(new Face(color5, v5[41], v5[45], v5[61], v5[57]));
    faces.push(new Face(color5, v5[41], v5[45], v5[109], v5[105]));
    faces.push(new Face(color5, v5[41], v5[57], v5[121], v5[105]));
    faces.push(new Face(color5, v5[42], v5[43], v5[47], v5[46]));
    faces.push(new Face(color5, v5[42], v5[43], v5[59], v5[58]));
    faces.push(new Face(color5, v5[42], v5[43], v5[107], v5[106]));
    faces.push(new Face(color5, v5[42], v5[46], v5[62], v5[58]));
    faces.push(new Face(color5, v5[42], v5[46], v5[110], v5[106]));
    faces.push(new Face(color5, v5[42], v5[58], v5[122], v5[106]));
    faces.push(new Face(color5, v5[43], v5[47], v5[63], v5[59]));
    faces.push(new Face(color5, v5[43], v5[47], v5[111], v5[107]));
    faces.push(new Face(color5, v5[43], v5[59], v5[123], v5[107]));
    faces.push(new Face(color5, v5[44], v5[45], v5[47], v5[46]));
    faces.push(new Face(color5, v5[44], v5[45], v5[61], v5[60]));
    faces.push(new Face(color5, v5[44], v5[45], v5[109], v5[108]));
    faces.push(new Face(color5, v5[44], v5[46], v5[62], v5[60]));
    faces.push(new Face(color5, v5[44], v5[46], v5[110], v5[108]));
    faces.push(new Face(color5, v5[44], v5[60], v5[124], v5[108]));
    faces.push(new Face(color5, v5[45], v5[47], v5[63], v5[61]));
    faces.push(new Face(color5, v5[45], v5[47], v5[111], v5[109]));
    faces.push(new Face(color5, v5[45], v5[61], v5[125], v5[109]));
    faces.push(new Face(color5, v5[46], v5[47], v5[63], v5[62]));
    faces.push(new Face(color5, v5[46], v5[47], v5[111], v5[110]));
    faces.push(new Face(color5, v5[46], v5[62], v5[126], v5[110]));
    faces.push(new Face(color5, v5[47], v5[63], v5[127], v5[111]));
    faces.push(new Face(color5, v5[48], v5[49], v5[51], v5[50]));
    faces.push(new Face(color5, v5[48], v5[49], v5[53], v5[52]));
    faces.push(new Face(color5, v5[48], v5[49], v5[57], v5[56]));
    faces.push(new Face(color5, v5[48], v5[49], v5[113], v5[112]));
    faces.push(new Face(color5, v5[48], v5[50], v5[54], v5[52]));
    faces.push(new Face(color5, v5[48], v5[50], v5[58], v5[56]));
    faces.push(new Face(color5, v5[48], v5[50], v5[114], v5[112]));
    faces.push(new Face(color5, v5[48], v5[52], v5[60], v5[56]));
    faces.push(new Face(color5, v5[48], v5[52], v5[116], v5[112]));
    faces.push(new Face(color5, v5[48], v5[56], v5[120], v5[112]));
    faces.push(new Face(color5, v5[49], v5[51], v5[55], v5[53]));
    faces.push(new Face(color5, v5[49], v5[51], v5[59], v5[57]));
    faces.push(new Face(color5, v5[49], v5[51], v5[115], v5[113]));
    faces.push(new Face(color5, v5[49], v5[53], v5[61], v5[57]));
    faces.push(new Face(color5, v5[49], v5[53], v5[117], v5[113]));
    faces.push(new Face(color5, v5[49], v5[57], v5[121], v5[113]));
    faces.push(new Face(color5, v5[50], v5[51], v5[55], v5[54]));
    faces.push(new Face(color5, v5[50], v5[51], v5[59], v5[58]));
    faces.push(new Face(color5, v5[50], v5[51], v5[115], v5[114]));
    faces.push(new Face(color5, v5[50], v5[54], v5[62], v5[58]));
    faces.push(new Face(color5, v5[50], v5[54], v5[118], v5[114]));
    faces.push(new Face(color5, v5[50], v5[58], v5[122], v5[114]));
    faces.push(new Face(color5, v5[51], v5[55], v5[63], v5[59]));
    faces.push(new Face(color5, v5[51], v5[55], v5[119], v5[115]));
    faces.push(new Face(color5, v5[51], v5[59], v5[123], v5[115]));
    faces.push(new Face(color5, v5[52], v5[53], v5[55], v5[54]));
    faces.push(new Face(color5, v5[52], v5[53], v5[61], v5[60]));
    faces.push(new Face(color5, v5[52], v5[53], v5[117], v5[116]));
    faces.push(new Face(color5, v5[52], v5[54], v5[62], v5[60]));
    faces.push(new Face(color5, v5[52], v5[54], v5[118], v5[116]));
    faces.push(new Face(color5, v5[52], v5[60], v5[124], v5[116]));
    faces.push(new Face(color5, v5[53], v5[55], v5[63], v5[61]));
    faces.push(new Face(color5, v5[53], v5[55], v5[119], v5[117]));
    faces.push(new Face(color5, v5[53], v5[61], v5[125], v5[117]));
    faces.push(new Face(color5, v5[54], v5[55], v5[63], v5[62]));
    faces.push(new Face(color5, v5[54], v5[55], v5[119], v5[118]));
    faces.push(new Face(color5, v5[54], v5[62], v5[126], v5[118]));
    faces.push(new Face(color5, v5[55], v5[63], v5[127], v5[119]));
    faces.push(new Face(color5, v5[56], v5[57], v5[59], v5[58]));
    faces.push(new Face(color5, v5[56], v5[57], v5[61], v5[60]));
    faces.push(new Face(color5, v5[56], v5[57], v5[121], v5[120]));
    faces.push(new Face(color5, v5[56], v5[58], v5[62], v5[60]));
    faces.push(new Face(color5, v5[56], v5[58], v5[122], v5[120]));
    faces.push(new Face(color5, v5[56], v5[60], v5[124], v5[120]));
    faces.push(new Face(color5, v5[57], v5[59], v5[63], v5[61]));
    faces.push(new Face(color5, v5[57], v5[59], v5[123], v5[121]));
    faces.push(new Face(color5, v5[57], v5[61], v5[125], v5[121]));
    faces.push(new Face(color5, v5[58], v5[59], v5[63], v5[62]));
    faces.push(new Face(color5, v5[58], v5[59], v5[123], v5[122]));
    faces.push(new Face(color5, v5[58], v5[62], v5[126], v5[122]));
    faces.push(new Face(color5, v5[59], v5[63], v5[127], v5[123]));
    faces.push(new Face(color5, v5[60], v5[61], v5[63], v5[62]));
    faces.push(new Face(color5, v5[60], v5[61], v5[125], v5[124]));
    faces.push(new Face(color5, v5[60], v5[62], v5[126], v5[124]));
    faces.push(new Face(color5, v5[61], v5[63], v5[127], v5[125]));
    faces.push(new Face(color5, v5[62], v5[63], v5[127], v5[126]));
    faces.push(new Face(color5, v5[64], v5[65], v5[67], v5[66]));
    faces.push(new Face(color5, v5[64], v5[65], v5[69], v5[68]));
    faces.push(new Face(color5, v5[64], v5[65], v5[73], v5[72]));
    faces.push(new Face(color5, v5[64], v5[65], v5[81], v5[80]));
    faces.push(new Face(color5, v5[64], v5[65], v5[97], v5[96]));
    faces.push(new Face(color5, v5[64], v5[66], v5[70], v5[68]));
    faces.push(new Face(color5, v5[64], v5[66], v5[74], v5[72]));
    faces.push(new Face(color5, v5[64], v5[66], v5[82], v5[80]));
    faces.push(new Face(color5, v5[64], v5[66], v5[98], v5[96]));
    faces.push(new Face(color5, v5[64], v5[68], v5[76], v5[72]));
    faces.push(new Face(color5, v5[64], v5[68], v5[84], v5[80]));
    faces.push(new Face(color5, v5[64], v5[68], v5[100], v5[96]));
    faces.push(new Face(color5, v5[64], v5[72], v5[88], v5[80]));
    faces.push(new Face(color5, v5[64], v5[72], v5[104], v5[96]));
    faces.push(new Face(color5, v5[64], v5[80], v5[112], v5[96]));
    faces.push(new Face(color5, v5[65], v5[67], v5[71], v5[69]));
    faces.push(new Face(color5, v5[65], v5[67], v5[75], v5[73]));
    faces.push(new Face(color5, v5[65], v5[67], v5[83], v5[81]));
    faces.push(new Face(color5, v5[65], v5[67], v5[99], v5[97]));
    faces.push(new Face(color5, v5[65], v5[69], v5[77], v5[73]));
    faces.push(new Face(color5, v5[65], v5[69], v5[85], v5[81]));
    faces.push(new Face(color5, v5[65], v5[69], v5[101], v5[97]));
    faces.push(new Face(color5, v5[65], v5[73], v5[89], v5[81]));
    faces.push(new Face(color5, v5[65], v5[73], v5[105], v5[97]));
    faces.push(new Face(color5, v5[65], v5[81], v5[113], v5[97]));
    faces.push(new Face(color5, v5[66], v5[67], v5[71], v5[70]));
    faces.push(new Face(color5, v5[66], v5[67], v5[75], v5[74]));
    faces.push(new Face(color5, v5[66], v5[67], v5[83], v5[82]));
    faces.push(new Face(color5, v5[66], v5[67], v5[99], v5[98]));
    faces.push(new Face(color5, v5[66], v5[70], v5[78], v5[74]));
    faces.push(new Face(color5, v5[66], v5[70], v5[86], v5[82]));
    faces.push(new Face(color5, v5[66], v5[70], v5[102], v5[98]));
    faces.push(new Face(color5, v5[66], v5[74], v5[90], v5[82]));
    faces.push(new Face(color5, v5[66], v5[74], v5[106], v5[98]));
    faces.push(new Face(color5, v5[66], v5[82], v5[114], v5[98]));
    faces.push(new Face(color5, v5[67], v5[71], v5[79], v5[75]));
    faces.push(new Face(color5, v5[67], v5[71], v5[87], v5[83]));
    faces.push(new Face(color5, v5[67], v5[71], v5[103], v5[99]));
    faces.push(new Face(color5, v5[67], v5[75], v5[91], v5[83]));
    faces.push(new Face(color5, v5[67], v5[75], v5[107], v5[99]));
    faces.push(new Face(color5, v5[67], v5[83], v5[115], v5[99]));
    faces.push(new Face(color5, v5[68], v5[69], v5[71], v5[70]));
    faces.push(new Face(color5, v5[68], v5[69], v5[77], v5[76]));
    faces.push(new Face(color5, v5[68], v5[69], v5[85], v5[84]));
    faces.push(new Face(color5, v5[68], v5[69], v5[101], v5[100]));
    faces.push(new Face(color5, v5[68], v5[70], v5[78], v5[76]));
    faces.push(new Face(color5, v5[68], v5[70], v5[86], v5[84]));
    faces.push(new Face(color5, v5[68], v5[70], v5[102], v5[100]));
    faces.push(new Face(color5, v5[68], v5[76], v5[92], v5[84]));
    faces.push(new Face(color5, v5[68], v5[76], v5[108], v5[100]));
    faces.push(new Face(color5, v5[68], v5[84], v5[116], v5[100]));
    faces.push(new Face(color5, v5[69], v5[71], v5[79], v5[77]));
    faces.push(new Face(color5, v5[69], v5[71], v5[87], v5[85]));
    faces.push(new Face(color5, v5[69], v5[71], v5[103], v5[101]));
    faces.push(new Face(color5, v5[69], v5[77], v5[93], v5[85]));
    faces.push(new Face(color5, v5[69], v5[77], v5[109], v5[101]));
    faces.push(new Face(color5, v5[69], v5[85], v5[117], v5[101]));
    faces.push(new Face(color5, v5[70], v5[71], v5[79], v5[78]));
    faces.push(new Face(color5, v5[70], v5[71], v5[87], v5[86]));
    faces.push(new Face(color5, v5[70], v5[71], v5[103], v5[102]));
    faces.push(new Face(color5, v5[70], v5[78], v5[94], v5[86]));
    faces.push(new Face(color5, v5[70], v5[78], v5[110], v5[102]));
    faces.push(new Face(color5, v5[70], v5[86], v5[118], v5[102]));
    faces.push(new Face(color5, v5[71], v5[79], v5[95], v5[87]));
    faces.push(new Face(color5, v5[71], v5[79], v5[111], v5[103]));
    faces.push(new Face(color5, v5[71], v5[87], v5[119], v5[103]));
    faces.push(new Face(color5, v5[72], v5[73], v5[75], v5[74]));
    faces.push(new Face(color5, v5[72], v5[73], v5[77], v5[76]));
    faces.push(new Face(color5, v5[72], v5[73], v5[89], v5[88]));
    faces.push(new Face(color5, v5[72], v5[73], v5[105], v5[104]));
    faces.push(new Face(color5, v5[72], v5[74], v5[78], v5[76]));
    faces.push(new Face(color5, v5[72], v5[74], v5[90], v5[88]));
    faces.push(new Face(color5, v5[72], v5[74], v5[106], v5[104]));
    faces.push(new Face(color5, v5[72], v5[76], v5[92], v5[88]));
    faces.push(new Face(color5, v5[72], v5[76], v5[108], v5[104]));
    faces.push(new Face(color5, v5[72], v5[88], v5[120], v5[104]));
    faces.push(new Face(color5, v5[73], v5[75], v5[79], v5[77]));
    faces.push(new Face(color5, v5[73], v5[75], v5[91], v5[89]));
    faces.push(new Face(color5, v5[73], v5[75], v5[107], v5[105]));
    faces.push(new Face(color5, v5[73], v5[77], v5[93], v5[89]));
    faces.push(new Face(color5, v5[73], v5[77], v5[109], v5[105]));
    faces.push(new Face(color5, v5[73], v5[89], v5[121], v5[105]));
    faces.push(new Face(color5, v5[74], v5[75], v5[79], v5[78]));
    faces.push(new Face(color5, v5[74], v5[75], v5[91], v5[90]));
    faces.push(new Face(color5, v5[74], v5[75], v5[107], v5[106]));
    faces.push(new Face(color5, v5[74], v5[78], v5[94], v5[90]));
    faces.push(new Face(color5, v5[74], v5[78], v5[110], v5[106]));
    faces.push(new Face(color5, v5[74], v5[90], v5[122], v5[106]));
    faces.push(new Face(color5, v5[75], v5[79], v5[95], v5[91]));
    faces.push(new Face(color5, v5[75], v5[79], v5[111], v5[107]));
    faces.push(new Face(color5, v5[75], v5[91], v5[123], v5[107]));
    faces.push(new Face(color5, v5[76], v5[77], v5[79], v5[78]));
    faces.push(new Face(color5, v5[76], v5[77], v5[93], v5[92]));
    faces.push(new Face(color5, v5[76], v5[77], v5[109], v5[108]));
    faces.push(new Face(color5, v5[76], v5[78], v5[94], v5[92]));
    faces.push(new Face(color5, v5[76], v5[78], v5[110], v5[108]));
    faces.push(new Face(color5, v5[76], v5[92], v5[124], v5[108]));
    faces.push(new Face(color5, v5[77], v5[79], v5[95], v5[93]));
    faces.push(new Face(color5, v5[77], v5[79], v5[111], v5[109]));
    faces.push(new Face(color5, v5[77], v5[93], v5[125], v5[109]));
    faces.push(new Face(color5, v5[78], v5[79], v5[95], v5[94]));
    faces.push(new Face(color5, v5[78], v5[79], v5[111], v5[110]));
    faces.push(new Face(color5, v5[78], v5[94], v5[126], v5[110]));
    faces.push(new Face(color5, v5[79], v5[95], v5[127], v5[111]));
    faces.push(new Face(color5, v5[80], v5[81], v5[83], v5[82]));
    faces.push(new Face(color5, v5[80], v5[81], v5[85], v5[84]));
    faces.push(new Face(color5, v5[80], v5[81], v5[89], v5[88]));
    faces.push(new Face(color5, v5[80], v5[81], v5[113], v5[112]));
    faces.push(new Face(color5, v5[80], v5[82], v5[86], v5[84]));
    faces.push(new Face(color5, v5[80], v5[82], v5[90], v5[88]));
    faces.push(new Face(color5, v5[80], v5[82], v5[114], v5[112]));
    faces.push(new Face(color5, v5[80], v5[84], v5[92], v5[88]));
    faces.push(new Face(color5, v5[80], v5[84], v5[116], v5[112]));
    faces.push(new Face(color5, v5[80], v5[88], v5[120], v5[112]));
    faces.push(new Face(color5, v5[81], v5[83], v5[87], v5[85]));
    faces.push(new Face(color5, v5[81], v5[83], v5[91], v5[89]));
    faces.push(new Face(color5, v5[81], v5[83], v5[115], v5[113]));
    faces.push(new Face(color5, v5[81], v5[85], v5[93], v5[89]));
    faces.push(new Face(color5, v5[81], v5[85], v5[117], v5[113]));
    faces.push(new Face(color5, v5[81], v5[89], v5[121], v5[113]));
    faces.push(new Face(color5, v5[82], v5[83], v5[87], v5[86]));
    faces.push(new Face(color5, v5[82], v5[83], v5[91], v5[90]));
    faces.push(new Face(color5, v5[82], v5[83], v5[115], v5[114]));
    faces.push(new Face(color5, v5[82], v5[86], v5[94], v5[90]));
    faces.push(new Face(color5, v5[82], v5[86], v5[118], v5[114]));
    faces.push(new Face(color5, v5[82], v5[90], v5[122], v5[114]));
    faces.push(new Face(color5, v5[83], v5[87], v5[95], v5[91]));
    faces.push(new Face(color5, v5[83], v5[87], v5[119], v5[115]));
    faces.push(new Face(color5, v5[83], v5[91], v5[123], v5[115]));
    faces.push(new Face(color5, v5[84], v5[85], v5[87], v5[86]));
    faces.push(new Face(color5, v5[84], v5[85], v5[93], v5[92]));
    faces.push(new Face(color5, v5[84], v5[85], v5[117], v5[116]));
    faces.push(new Face(color5, v5[84], v5[86], v5[94], v5[92]));
    faces.push(new Face(color5, v5[84], v5[86], v5[118], v5[116]));
    faces.push(new Face(color5, v5[84], v5[92], v5[124], v5[116]));
    faces.push(new Face(color5, v5[85], v5[87], v5[95], v5[93]));
    faces.push(new Face(color5, v5[85], v5[87], v5[119], v5[117]));
    faces.push(new Face(color5, v5[85], v5[93], v5[125], v5[117]));
    faces.push(new Face(color5, v5[86], v5[87], v5[95], v5[94]));
    faces.push(new Face(color5, v5[86], v5[87], v5[119], v5[118]));
    faces.push(new Face(color5, v5[86], v5[94], v5[126], v5[118]));
    faces.push(new Face(color5, v5[87], v5[95], v5[127], v5[119]));
    faces.push(new Face(color5, v5[88], v5[89], v5[91], v5[90]));
    faces.push(new Face(color5, v5[88], v5[89], v5[93], v5[92]));
    faces.push(new Face(color5, v5[88], v5[89], v5[121], v5[120]));
    faces.push(new Face(color5, v5[88], v5[90], v5[94], v5[92]));
    faces.push(new Face(color5, v5[88], v5[90], v5[122], v5[120]));
    faces.push(new Face(color5, v5[88], v5[92], v5[124], v5[120]));
    faces.push(new Face(color5, v5[89], v5[91], v5[95], v5[93]));
    faces.push(new Face(color5, v5[89], v5[91], v5[123], v5[121]));
    faces.push(new Face(color5, v5[89], v5[93], v5[125], v5[121]));
    faces.push(new Face(color5, v5[90], v5[91], v5[95], v5[94]));
    faces.push(new Face(color5, v5[90], v5[91], v5[123], v5[122]));
    faces.push(new Face(color5, v5[90], v5[94], v5[126], v5[122]));
    faces.push(new Face(color5, v5[91], v5[95], v5[127], v5[123]));
    faces.push(new Face(color5, v5[92], v5[93], v5[95], v5[94]));
    faces.push(new Face(color5, v5[92], v5[93], v5[125], v5[124]));
    faces.push(new Face(color5, v5[92], v5[94], v5[126], v5[124]));
    faces.push(new Face(color5, v5[93], v5[95], v5[127], v5[125]));
    faces.push(new Face(color5, v5[94], v5[95], v5[127], v5[126]));
    faces.push(new Face(color5, v5[96], v5[97], v5[99], v5[98]));
    faces.push(new Face(color5, v5[96], v5[97], v5[101], v5[100]));
    faces.push(new Face(color5, v5[96], v5[97], v5[105], v5[104]));
    faces.push(new Face(color5, v5[96], v5[97], v5[113], v5[112]));
    faces.push(new Face(color5, v5[96], v5[98], v5[102], v5[100]));
    faces.push(new Face(color5, v5[96], v5[98], v5[106], v5[104]));
    faces.push(new Face(color5, v5[96], v5[98], v5[114], v5[112]));
    faces.push(new Face(color5, v5[96], v5[100], v5[108], v5[104]));
    faces.push(new Face(color5, v5[96], v5[100], v5[116], v5[112]));
    faces.push(new Face(color5, v5[96], v5[104], v5[120], v5[112]));
    faces.push(new Face(color5, v5[97], v5[99], v5[103], v5[101]));
    faces.push(new Face(color5, v5[97], v5[99], v5[107], v5[105]));
    faces.push(new Face(color5, v5[97], v5[99], v5[115], v5[113]));
    faces.push(new Face(color5, v5[97], v5[101], v5[109], v5[105]));
    faces.push(new Face(color5, v5[97], v5[101], v5[117], v5[113]));
    faces.push(new Face(color5, v5[97], v5[105], v5[121], v5[113]));
    faces.push(new Face(color5, v5[98], v5[99], v5[103], v5[102]));
    faces.push(new Face(color5, v5[98], v5[99], v5[107], v5[106]));
    faces.push(new Face(color5, v5[98], v5[99], v5[115], v5[114]));
    faces.push(new Face(color5, v5[98], v5[102], v5[110], v5[106]));
    faces.push(new Face(color5, v5[98], v5[102], v5[118], v5[114]));
    faces.push(new Face(color5, v5[98], v5[106], v5[122], v5[114]));
    faces.push(new Face(color5, v5[99], v5[103], v5[111], v5[107]));
    faces.push(new Face(color5, v5[99], v5[103], v5[119], v5[115]));
    faces.push(new Face(color5, v5[99], v5[107], v5[123], v5[115]));
    faces.push(new Face(color5, v5[100], v5[101], v5[103], v5[102]));
    faces.push(new Face(color5, v5[100], v5[101], v5[109], v5[108]));
    faces.push(new Face(color5, v5[100], v5[101], v5[117], v5[116]));
    faces.push(new Face(color5, v5[100], v5[102], v5[110], v5[108]));
    faces.push(new Face(color5, v5[100], v5[102], v5[118], v5[116]));
    faces.push(new Face(color5, v5[100], v5[108], v5[124], v5[116]));
    faces.push(new Face(color5, v5[101], v5[103], v5[111], v5[109]));
    faces.push(new Face(color5, v5[101], v5[103], v5[119], v5[117]));
    faces.push(new Face(color5, v5[101], v5[109], v5[125], v5[117]));
    faces.push(new Face(color5, v5[102], v5[103], v5[111], v5[110]));
    faces.push(new Face(color5, v5[102], v5[103], v5[119], v5[118]));
    faces.push(new Face(color5, v5[102], v5[110], v5[126], v5[118]));
    faces.push(new Face(color5, v5[103], v5[111], v5[127], v5[119]));
    faces.push(new Face(color5, v5[104], v5[105], v5[107], v5[106]));
    faces.push(new Face(color5, v5[104], v5[105], v5[109], v5[108]));
    faces.push(new Face(color5, v5[104], v5[105], v5[121], v5[120]));
    faces.push(new Face(color5, v5[104], v5[106], v5[110], v5[108]));
    faces.push(new Face(color5, v5[104], v5[106], v5[122], v5[120]));
    faces.push(new Face(color5, v5[104], v5[108], v5[124], v5[120]));
    faces.push(new Face(color5, v5[105], v5[107], v5[111], v5[109]));
    faces.push(new Face(color5, v5[105], v5[107], v5[123], v5[121]));
    faces.push(new Face(color5, v5[105], v5[109], v5[125], v5[121]));
    faces.push(new Face(color5, v5[106], v5[107], v5[111], v5[110]));
    faces.push(new Face(color5, v5[106], v5[107], v5[123], v5[122]));
    faces.push(new Face(color5, v5[106], v5[110], v5[126], v5[122]));
    faces.push(new Face(color5, v5[107], v5[111], v5[127], v5[123]));
    faces.push(new Face(color5, v5[108], v5[109], v5[111], v5[110]));
    faces.push(new Face(color5, v5[108], v5[109], v5[125], v5[124]));
    faces.push(new Face(color5, v5[108], v5[110], v5[126], v5[124]));
    faces.push(new Face(color5, v5[109], v5[111], v5[127], v5[125]));
    faces.push(new Face(color5, v5[110], v5[111], v5[127], v5[126]));
    faces.push(new Face(color5, v5[112], v5[113], v5[115], v5[114]));
    faces.push(new Face(color5, v5[112], v5[113], v5[117], v5[116]));
    faces.push(new Face(color5, v5[112], v5[113], v5[121], v5[120]));
    faces.push(new Face(color5, v5[112], v5[114], v5[118], v5[116]));
    faces.push(new Face(color5, v5[112], v5[114], v5[122], v5[120]));
    faces.push(new Face(color5, v5[112], v5[116], v5[124], v5[120]));
    faces.push(new Face(color5, v5[113], v5[115], v5[119], v5[117]));
    faces.push(new Face(color5, v5[113], v5[115], v5[123], v5[121]));
    faces.push(new Face(color5, v5[113], v5[117], v5[125], v5[121]));
    faces.push(new Face(color5, v5[114], v5[115], v5[119], v5[118]));
    faces.push(new Face(color5, v5[114], v5[115], v5[123], v5[122]));
    faces.push(new Face(color5, v5[114], v5[118], v5[126], v5[122]));
    faces.push(new Face(color5, v5[115], v5[119], v5[127], v5[123]));
    faces.push(new Face(color5, v5[116], v5[117], v5[119], v5[118]));
    faces.push(new Face(color5, v5[116], v5[117], v5[125], v5[124]));
    faces.push(new Face(color5, v5[116], v5[118], v5[126], v5[124]));
    faces.push(new Face(color5, v5[117], v5[119], v5[127], v5[125]));
    faces.push(new Face(color5, v5[118], v5[119], v5[127], v5[126]));
    faces.push(new Face(color5, v5[120], v5[121], v5[123], v5[122]));
    faces.push(new Face(color5, v5[120], v5[121], v5[125], v5[124]));
    faces.push(new Face(color5, v5[120], v5[122], v5[126], v5[124]));
    faces.push(new Face(color5, v5[121], v5[123], v5[127], v5[125]));
    faces.push(new Face(color5, v5[122], v5[123], v5[127], v5[126]));
    faces.push(new Face(color5, v5[124], v5[125], v5[127], v5[126]));
    for (let i = 0; i < v5.length; i++) {
        v5[i].rotate(r);
        v5[i].project();
    }

    v6[0] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v6[1] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v6[2] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v6[3] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v6[4] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v6[5] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v6[6] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v6[7] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v6[8] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v6[9] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v6[10] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v6[11] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v6[12] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v6[13] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v6[14] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2);
    v6[15] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v6[16] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v6[17] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v6[18] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v6[19] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v6[20] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v6[21] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v6[22] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v6[23] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v6[24] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v6[25] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v6[26] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v6[27] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v6[28] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v6[29] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v6[30] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, -w/2, w/2, -w/2);
    v6[31] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v6[32] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v6[33] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v6[34] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v6[35] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v6[36] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v6[37] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v6[38] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v6[39] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v6[40] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v6[41] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v6[42] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v6[43] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v6[44] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v6[45] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v6[46] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2);
    v6[47] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v6[48] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v6[49] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v6[50] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v6[51] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v6[52] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v6[53] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v6[54] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v6[55] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v6[56] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v6[57] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v6[58] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v6[59] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v6[60] = new Vertex(-w/2, w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v6[61] = new Vertex(-w/2, w/2, w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v6[62] = new Vertex(-w/2, w/2, w/2, w/2, w/2, -w/2, w/2, -w/2);
    v6[63] = new Vertex(-w/2, w/2, w/2, w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v6[64] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v6[65] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v6[66] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v6[67] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v6[68] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v6[69] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v6[70] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v6[71] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v6[72] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v6[73] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v6[74] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v6[75] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v6[76] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v6[77] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v6[78] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2);
    v6[79] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v6[80] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v6[81] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v6[82] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v6[83] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v6[84] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v6[85] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v6[86] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v6[87] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v6[88] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v6[89] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v6[90] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v6[91] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v6[92] = new Vertex(w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v6[93] = new Vertex(w/2, -w/2, w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v6[94] = new Vertex(w/2, -w/2, w/2, w/2, w/2, -w/2, w/2, -w/2);
    v6[95] = new Vertex(w/2, -w/2, w/2, w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v6[96] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v6[97] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v6[98] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v6[99] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v6[100] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v6[101] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v6[102] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v6[103] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v6[104] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v6[105] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v6[106] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v6[107] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v6[108] = new Vertex(w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v6[109] = new Vertex(w/2, w/2, -w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v6[110] = new Vertex(w/2, w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2);
    v6[111] = new Vertex(w/2, w/2, -w/2, w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v6[112] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v6[113] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v6[114] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v6[115] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v6[116] = new Vertex(w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v6[117] = new Vertex(w/2, w/2, w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v6[118] = new Vertex(w/2, w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v6[119] = new Vertex(w/2, w/2, w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v6[120] = new Vertex(w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v6[121] = new Vertex(w/2, w/2, w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v6[122] = new Vertex(w/2, w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v6[123] = new Vertex(w/2, w/2, w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v6[124] = new Vertex(w/2, w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v6[125] = new Vertex(w/2, w/2, w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v6[126] = new Vertex(w/2, w/2, w/2, w/2, w/2, -w/2, w/2, -w/2);
    v6[127] = new Vertex(w/2, w/2, w/2, w/2, w/2, -w/2-Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    faces.push(new Face(color6, v6[0], v6[1], v6[3], v6[2]));
    faces.push(new Face(color6, v6[0], v6[1], v6[5], v6[4]));
    faces.push(new Face(color6, v6[0], v6[1], v6[9], v6[8]));
    faces.push(new Face(color6, v6[0], v6[1], v6[17], v6[16]));
    faces.push(new Face(color6, v6[0], v6[1], v6[33], v6[32]));
    faces.push(new Face(color6, v6[0], v6[1], v6[65], v6[64]));
    faces.push(new Face(color6, v6[0], v6[2], v6[6], v6[4]));
    faces.push(new Face(color6, v6[0], v6[2], v6[10], v6[8]));
    faces.push(new Face(color6, v6[0], v6[2], v6[18], v6[16]));
    faces.push(new Face(color6, v6[0], v6[2], v6[34], v6[32]));
    faces.push(new Face(color6, v6[0], v6[2], v6[66], v6[64]));
    faces.push(new Face(color6, v6[0], v6[4], v6[12], v6[8]));
    faces.push(new Face(color6, v6[0], v6[4], v6[20], v6[16]));
    faces.push(new Face(color6, v6[0], v6[4], v6[36], v6[32]));
    faces.push(new Face(color6, v6[0], v6[4], v6[68], v6[64]));
    faces.push(new Face(color6, v6[0], v6[8], v6[24], v6[16]));
    faces.push(new Face(color6, v6[0], v6[8], v6[40], v6[32]));
    faces.push(new Face(color6, v6[0], v6[8], v6[72], v6[64]));
    faces.push(new Face(color6, v6[0], v6[16], v6[48], v6[32]));
    faces.push(new Face(color6, v6[0], v6[16], v6[80], v6[64]));
    faces.push(new Face(color6, v6[0], v6[32], v6[96], v6[64]));
    faces.push(new Face(color6, v6[1], v6[3], v6[7], v6[5]));
    faces.push(new Face(color6, v6[1], v6[3], v6[11], v6[9]));
    faces.push(new Face(color6, v6[1], v6[3], v6[19], v6[17]));
    faces.push(new Face(color6, v6[1], v6[3], v6[35], v6[33]));
    faces.push(new Face(color6, v6[1], v6[3], v6[67], v6[65]));
    faces.push(new Face(color6, v6[1], v6[5], v6[13], v6[9]));
    faces.push(new Face(color6, v6[1], v6[5], v6[21], v6[17]));
    faces.push(new Face(color6, v6[1], v6[5], v6[37], v6[33]));
    faces.push(new Face(color6, v6[1], v6[5], v6[69], v6[65]));
    faces.push(new Face(color6, v6[1], v6[9], v6[25], v6[17]));
    faces.push(new Face(color6, v6[1], v6[9], v6[41], v6[33]));
    faces.push(new Face(color6, v6[1], v6[9], v6[73], v6[65]));
    faces.push(new Face(color6, v6[1], v6[17], v6[49], v6[33]));
    faces.push(new Face(color6, v6[1], v6[17], v6[81], v6[65]));
    faces.push(new Face(color6, v6[1], v6[33], v6[97], v6[65]));
    faces.push(new Face(color6, v6[2], v6[3], v6[7], v6[6]));
    faces.push(new Face(color6, v6[2], v6[3], v6[11], v6[10]));
    faces.push(new Face(color6, v6[2], v6[3], v6[19], v6[18]));
    faces.push(new Face(color6, v6[2], v6[3], v6[35], v6[34]));
    faces.push(new Face(color6, v6[2], v6[3], v6[67], v6[66]));
    faces.push(new Face(color6, v6[2], v6[6], v6[14], v6[10]));
    faces.push(new Face(color6, v6[2], v6[6], v6[22], v6[18]));
    faces.push(new Face(color6, v6[2], v6[6], v6[38], v6[34]));
    faces.push(new Face(color6, v6[2], v6[6], v6[70], v6[66]));
    faces.push(new Face(color6, v6[2], v6[10], v6[26], v6[18]));
    faces.push(new Face(color6, v6[2], v6[10], v6[42], v6[34]));
    faces.push(new Face(color6, v6[2], v6[10], v6[74], v6[66]));
    faces.push(new Face(color6, v6[2], v6[18], v6[50], v6[34]));
    faces.push(new Face(color6, v6[2], v6[18], v6[82], v6[66]));
    faces.push(new Face(color6, v6[2], v6[34], v6[98], v6[66]));
    faces.push(new Face(color6, v6[3], v6[7], v6[15], v6[11]));
    faces.push(new Face(color6, v6[3], v6[7], v6[23], v6[19]));
    faces.push(new Face(color6, v6[3], v6[7], v6[39], v6[35]));
    faces.push(new Face(color6, v6[3], v6[7], v6[71], v6[67]));
    faces.push(new Face(color6, v6[3], v6[11], v6[27], v6[19]));
    faces.push(new Face(color6, v6[3], v6[11], v6[43], v6[35]));
    faces.push(new Face(color6, v6[3], v6[11], v6[75], v6[67]));
    faces.push(new Face(color6, v6[3], v6[19], v6[51], v6[35]));
    faces.push(new Face(color6, v6[3], v6[19], v6[83], v6[67]));
    faces.push(new Face(color6, v6[3], v6[35], v6[99], v6[67]));
    faces.push(new Face(color6, v6[4], v6[5], v6[7], v6[6]));
    faces.push(new Face(color6, v6[4], v6[5], v6[13], v6[12]));
    faces.push(new Face(color6, v6[4], v6[5], v6[21], v6[20]));
    faces.push(new Face(color6, v6[4], v6[5], v6[37], v6[36]));
    faces.push(new Face(color6, v6[4], v6[5], v6[69], v6[68]));
    faces.push(new Face(color6, v6[4], v6[6], v6[14], v6[12]));
    faces.push(new Face(color6, v6[4], v6[6], v6[22], v6[20]));
    faces.push(new Face(color6, v6[4], v6[6], v6[38], v6[36]));
    faces.push(new Face(color6, v6[4], v6[6], v6[70], v6[68]));
    faces.push(new Face(color6, v6[4], v6[12], v6[28], v6[20]));
    faces.push(new Face(color6, v6[4], v6[12], v6[44], v6[36]));
    faces.push(new Face(color6, v6[4], v6[12], v6[76], v6[68]));
    faces.push(new Face(color6, v6[4], v6[20], v6[52], v6[36]));
    faces.push(new Face(color6, v6[4], v6[20], v6[84], v6[68]));
    faces.push(new Face(color6, v6[4], v6[36], v6[100], v6[68]));
    faces.push(new Face(color6, v6[5], v6[7], v6[15], v6[13]));
    faces.push(new Face(color6, v6[5], v6[7], v6[23], v6[21]));
    faces.push(new Face(color6, v6[5], v6[7], v6[39], v6[37]));
    faces.push(new Face(color6, v6[5], v6[7], v6[71], v6[69]));
    faces.push(new Face(color6, v6[5], v6[13], v6[29], v6[21]));
    faces.push(new Face(color6, v6[5], v6[13], v6[45], v6[37]));
    faces.push(new Face(color6, v6[5], v6[13], v6[77], v6[69]));
    faces.push(new Face(color6, v6[5], v6[21], v6[53], v6[37]));
    faces.push(new Face(color6, v6[5], v6[21], v6[85], v6[69]));
    faces.push(new Face(color6, v6[5], v6[37], v6[101], v6[69]));
    faces.push(new Face(color6, v6[6], v6[7], v6[15], v6[14]));
    faces.push(new Face(color6, v6[6], v6[7], v6[23], v6[22]));
    faces.push(new Face(color6, v6[6], v6[7], v6[39], v6[38]));
    faces.push(new Face(color6, v6[6], v6[7], v6[71], v6[70]));
    faces.push(new Face(color6, v6[6], v6[14], v6[30], v6[22]));
    faces.push(new Face(color6, v6[6], v6[14], v6[46], v6[38]));
    faces.push(new Face(color6, v6[6], v6[14], v6[78], v6[70]));
    faces.push(new Face(color6, v6[6], v6[22], v6[54], v6[38]));
    faces.push(new Face(color6, v6[6], v6[22], v6[86], v6[70]));
    faces.push(new Face(color6, v6[6], v6[38], v6[102], v6[70]));
    faces.push(new Face(color6, v6[7], v6[15], v6[31], v6[23]));
    faces.push(new Face(color6, v6[7], v6[15], v6[47], v6[39]));
    faces.push(new Face(color6, v6[7], v6[15], v6[79], v6[71]));
    faces.push(new Face(color6, v6[7], v6[23], v6[55], v6[39]));
    faces.push(new Face(color6, v6[7], v6[23], v6[87], v6[71]));
    faces.push(new Face(color6, v6[7], v6[39], v6[103], v6[71]));
    faces.push(new Face(color6, v6[8], v6[9], v6[11], v6[10]));
    faces.push(new Face(color6, v6[8], v6[9], v6[13], v6[12]));
    faces.push(new Face(color6, v6[8], v6[9], v6[25], v6[24]));
    faces.push(new Face(color6, v6[8], v6[9], v6[41], v6[40]));
    faces.push(new Face(color6, v6[8], v6[9], v6[73], v6[72]));
    faces.push(new Face(color6, v6[8], v6[10], v6[14], v6[12]));
    faces.push(new Face(color6, v6[8], v6[10], v6[26], v6[24]));
    faces.push(new Face(color6, v6[8], v6[10], v6[42], v6[40]));
    faces.push(new Face(color6, v6[8], v6[10], v6[74], v6[72]));
    faces.push(new Face(color6, v6[8], v6[12], v6[28], v6[24]));
    faces.push(new Face(color6, v6[8], v6[12], v6[44], v6[40]));
    faces.push(new Face(color6, v6[8], v6[12], v6[76], v6[72]));
    faces.push(new Face(color6, v6[8], v6[24], v6[56], v6[40]));
    faces.push(new Face(color6, v6[8], v6[24], v6[88], v6[72]));
    faces.push(new Face(color6, v6[8], v6[40], v6[104], v6[72]));
    faces.push(new Face(color6, v6[9], v6[11], v6[15], v6[13]));
    faces.push(new Face(color6, v6[9], v6[11], v6[27], v6[25]));
    faces.push(new Face(color6, v6[9], v6[11], v6[43], v6[41]));
    faces.push(new Face(color6, v6[9], v6[11], v6[75], v6[73]));
    faces.push(new Face(color6, v6[9], v6[13], v6[29], v6[25]));
    faces.push(new Face(color6, v6[9], v6[13], v6[45], v6[41]));
    faces.push(new Face(color6, v6[9], v6[13], v6[77], v6[73]));
    faces.push(new Face(color6, v6[9], v6[25], v6[57], v6[41]));
    faces.push(new Face(color6, v6[9], v6[25], v6[89], v6[73]));
    faces.push(new Face(color6, v6[9], v6[41], v6[105], v6[73]));
    faces.push(new Face(color6, v6[10], v6[11], v6[15], v6[14]));
    faces.push(new Face(color6, v6[10], v6[11], v6[27], v6[26]));
    faces.push(new Face(color6, v6[10], v6[11], v6[43], v6[42]));
    faces.push(new Face(color6, v6[10], v6[11], v6[75], v6[74]));
    faces.push(new Face(color6, v6[10], v6[14], v6[30], v6[26]));
    faces.push(new Face(color6, v6[10], v6[14], v6[46], v6[42]));
    faces.push(new Face(color6, v6[10], v6[14], v6[78], v6[74]));
    faces.push(new Face(color6, v6[10], v6[26], v6[58], v6[42]));
    faces.push(new Face(color6, v6[10], v6[26], v6[90], v6[74]));
    faces.push(new Face(color6, v6[10], v6[42], v6[106], v6[74]));
    faces.push(new Face(color6, v6[11], v6[15], v6[31], v6[27]));
    faces.push(new Face(color6, v6[11], v6[15], v6[47], v6[43]));
    faces.push(new Face(color6, v6[11], v6[15], v6[79], v6[75]));
    faces.push(new Face(color6, v6[11], v6[27], v6[59], v6[43]));
    faces.push(new Face(color6, v6[11], v6[27], v6[91], v6[75]));
    faces.push(new Face(color6, v6[11], v6[43], v6[107], v6[75]));
    faces.push(new Face(color6, v6[12], v6[13], v6[15], v6[14]));
    faces.push(new Face(color6, v6[12], v6[13], v6[29], v6[28]));
    faces.push(new Face(color6, v6[12], v6[13], v6[45], v6[44]));
    faces.push(new Face(color6, v6[12], v6[13], v6[77], v6[76]));
    faces.push(new Face(color6, v6[12], v6[14], v6[30], v6[28]));
    faces.push(new Face(color6, v6[12], v6[14], v6[46], v6[44]));
    faces.push(new Face(color6, v6[12], v6[14], v6[78], v6[76]));
    faces.push(new Face(color6, v6[12], v6[28], v6[60], v6[44]));
    faces.push(new Face(color6, v6[12], v6[28], v6[92], v6[76]));
    faces.push(new Face(color6, v6[12], v6[44], v6[108], v6[76]));
    faces.push(new Face(color6, v6[13], v6[15], v6[31], v6[29]));
    faces.push(new Face(color6, v6[13], v6[15], v6[47], v6[45]));
    faces.push(new Face(color6, v6[13], v6[15], v6[79], v6[77]));
    faces.push(new Face(color6, v6[13], v6[29], v6[61], v6[45]));
    faces.push(new Face(color6, v6[13], v6[29], v6[93], v6[77]));
    faces.push(new Face(color6, v6[13], v6[45], v6[109], v6[77]));
    faces.push(new Face(color6, v6[14], v6[15], v6[31], v6[30]));
    faces.push(new Face(color6, v6[14], v6[15], v6[47], v6[46]));
    faces.push(new Face(color6, v6[14], v6[15], v6[79], v6[78]));
    faces.push(new Face(color6, v6[14], v6[30], v6[62], v6[46]));
    faces.push(new Face(color6, v6[14], v6[30], v6[94], v6[78]));
    faces.push(new Face(color6, v6[14], v6[46], v6[110], v6[78]));
    faces.push(new Face(color6, v6[15], v6[31], v6[63], v6[47]));
    faces.push(new Face(color6, v6[15], v6[31], v6[95], v6[79]));
    faces.push(new Face(color6, v6[15], v6[47], v6[111], v6[79]));
    faces.push(new Face(color6, v6[16], v6[17], v6[19], v6[18]));
    faces.push(new Face(color6, v6[16], v6[17], v6[21], v6[20]));
    faces.push(new Face(color6, v6[16], v6[17], v6[25], v6[24]));
    faces.push(new Face(color6, v6[16], v6[17], v6[49], v6[48]));
    faces.push(new Face(color6, v6[16], v6[17], v6[81], v6[80]));
    faces.push(new Face(color6, v6[16], v6[18], v6[22], v6[20]));
    faces.push(new Face(color6, v6[16], v6[18], v6[26], v6[24]));
    faces.push(new Face(color6, v6[16], v6[18], v6[50], v6[48]));
    faces.push(new Face(color6, v6[16], v6[18], v6[82], v6[80]));
    faces.push(new Face(color6, v6[16], v6[20], v6[28], v6[24]));
    faces.push(new Face(color6, v6[16], v6[20], v6[52], v6[48]));
    faces.push(new Face(color6, v6[16], v6[20], v6[84], v6[80]));
    faces.push(new Face(color6, v6[16], v6[24], v6[56], v6[48]));
    faces.push(new Face(color6, v6[16], v6[24], v6[88], v6[80]));
    faces.push(new Face(color6, v6[16], v6[48], v6[112], v6[80]));
    faces.push(new Face(color6, v6[17], v6[19], v6[23], v6[21]));
    faces.push(new Face(color6, v6[17], v6[19], v6[27], v6[25]));
    faces.push(new Face(color6, v6[17], v6[19], v6[51], v6[49]));
    faces.push(new Face(color6, v6[17], v6[19], v6[83], v6[81]));
    faces.push(new Face(color6, v6[17], v6[21], v6[29], v6[25]));
    faces.push(new Face(color6, v6[17], v6[21], v6[53], v6[49]));
    faces.push(new Face(color6, v6[17], v6[21], v6[85], v6[81]));
    faces.push(new Face(color6, v6[17], v6[25], v6[57], v6[49]));
    faces.push(new Face(color6, v6[17], v6[25], v6[89], v6[81]));
    faces.push(new Face(color6, v6[17], v6[49], v6[113], v6[81]));
    faces.push(new Face(color6, v6[18], v6[19], v6[23], v6[22]));
    faces.push(new Face(color6, v6[18], v6[19], v6[27], v6[26]));
    faces.push(new Face(color6, v6[18], v6[19], v6[51], v6[50]));
    faces.push(new Face(color6, v6[18], v6[19], v6[83], v6[82]));
    faces.push(new Face(color6, v6[18], v6[22], v6[30], v6[26]));
    faces.push(new Face(color6, v6[18], v6[22], v6[54], v6[50]));
    faces.push(new Face(color6, v6[18], v6[22], v6[86], v6[82]));
    faces.push(new Face(color6, v6[18], v6[26], v6[58], v6[50]));
    faces.push(new Face(color6, v6[18], v6[26], v6[90], v6[82]));
    faces.push(new Face(color6, v6[18], v6[50], v6[114], v6[82]));
    faces.push(new Face(color6, v6[19], v6[23], v6[31], v6[27]));
    faces.push(new Face(color6, v6[19], v6[23], v6[55], v6[51]));
    faces.push(new Face(color6, v6[19], v6[23], v6[87], v6[83]));
    faces.push(new Face(color6, v6[19], v6[27], v6[59], v6[51]));
    faces.push(new Face(color6, v6[19], v6[27], v6[91], v6[83]));
    faces.push(new Face(color6, v6[19], v6[51], v6[115], v6[83]));
    faces.push(new Face(color6, v6[20], v6[21], v6[23], v6[22]));
    faces.push(new Face(color6, v6[20], v6[21], v6[29], v6[28]));
    faces.push(new Face(color6, v6[20], v6[21], v6[53], v6[52]));
    faces.push(new Face(color6, v6[20], v6[21], v6[85], v6[84]));
    faces.push(new Face(color6, v6[20], v6[22], v6[30], v6[28]));
    faces.push(new Face(color6, v6[20], v6[22], v6[54], v6[52]));
    faces.push(new Face(color6, v6[20], v6[22], v6[86], v6[84]));
    faces.push(new Face(color6, v6[20], v6[28], v6[60], v6[52]));
    faces.push(new Face(color6, v6[20], v6[28], v6[92], v6[84]));
    faces.push(new Face(color6, v6[20], v6[52], v6[116], v6[84]));
    faces.push(new Face(color6, v6[21], v6[23], v6[31], v6[29]));
    faces.push(new Face(color6, v6[21], v6[23], v6[55], v6[53]));
    faces.push(new Face(color6, v6[21], v6[23], v6[87], v6[85]));
    faces.push(new Face(color6, v6[21], v6[29], v6[61], v6[53]));
    faces.push(new Face(color6, v6[21], v6[29], v6[93], v6[85]));
    faces.push(new Face(color6, v6[21], v6[53], v6[117], v6[85]));
    faces.push(new Face(color6, v6[22], v6[23], v6[31], v6[30]));
    faces.push(new Face(color6, v6[22], v6[23], v6[55], v6[54]));
    faces.push(new Face(color6, v6[22], v6[23], v6[87], v6[86]));
    faces.push(new Face(color6, v6[22], v6[30], v6[62], v6[54]));
    faces.push(new Face(color6, v6[22], v6[30], v6[94], v6[86]));
    faces.push(new Face(color6, v6[22], v6[54], v6[118], v6[86]));
    faces.push(new Face(color6, v6[23], v6[31], v6[63], v6[55]));
    faces.push(new Face(color6, v6[23], v6[31], v6[95], v6[87]));
    faces.push(new Face(color6, v6[23], v6[55], v6[119], v6[87]));
    faces.push(new Face(color6, v6[24], v6[25], v6[27], v6[26]));
    faces.push(new Face(color6, v6[24], v6[25], v6[29], v6[28]));
    faces.push(new Face(color6, v6[24], v6[25], v6[57], v6[56]));
    faces.push(new Face(color6, v6[24], v6[25], v6[89], v6[88]));
    faces.push(new Face(color6, v6[24], v6[26], v6[30], v6[28]));
    faces.push(new Face(color6, v6[24], v6[26], v6[58], v6[56]));
    faces.push(new Face(color6, v6[24], v6[26], v6[90], v6[88]));
    faces.push(new Face(color6, v6[24], v6[28], v6[60], v6[56]));
    faces.push(new Face(color6, v6[24], v6[28], v6[92], v6[88]));
    faces.push(new Face(color6, v6[24], v6[56], v6[120], v6[88]));
    faces.push(new Face(color6, v6[25], v6[27], v6[31], v6[29]));
    faces.push(new Face(color6, v6[25], v6[27], v6[59], v6[57]));
    faces.push(new Face(color6, v6[25], v6[27], v6[91], v6[89]));
    faces.push(new Face(color6, v6[25], v6[29], v6[61], v6[57]));
    faces.push(new Face(color6, v6[25], v6[29], v6[93], v6[89]));
    faces.push(new Face(color6, v6[25], v6[57], v6[121], v6[89]));
    faces.push(new Face(color6, v6[26], v6[27], v6[31], v6[30]));
    faces.push(new Face(color6, v6[26], v6[27], v6[59], v6[58]));
    faces.push(new Face(color6, v6[26], v6[27], v6[91], v6[90]));
    faces.push(new Face(color6, v6[26], v6[30], v6[62], v6[58]));
    faces.push(new Face(color6, v6[26], v6[30], v6[94], v6[90]));
    faces.push(new Face(color6, v6[26], v6[58], v6[122], v6[90]));
    faces.push(new Face(color6, v6[27], v6[31], v6[63], v6[59]));
    faces.push(new Face(color6, v6[27], v6[31], v6[95], v6[91]));
    faces.push(new Face(color6, v6[27], v6[59], v6[123], v6[91]));
    faces.push(new Face(color6, v6[28], v6[29], v6[31], v6[30]));
    faces.push(new Face(color6, v6[28], v6[29], v6[61], v6[60]));
    faces.push(new Face(color6, v6[28], v6[29], v6[93], v6[92]));
    faces.push(new Face(color6, v6[28], v6[30], v6[62], v6[60]));
    faces.push(new Face(color6, v6[28], v6[30], v6[94], v6[92]));
    faces.push(new Face(color6, v6[28], v6[60], v6[124], v6[92]));
    faces.push(new Face(color6, v6[29], v6[31], v6[63], v6[61]));
    faces.push(new Face(color6, v6[29], v6[31], v6[95], v6[93]));
    faces.push(new Face(color6, v6[29], v6[61], v6[125], v6[93]));
    faces.push(new Face(color6, v6[30], v6[31], v6[63], v6[62]));
    faces.push(new Face(color6, v6[30], v6[31], v6[95], v6[94]));
    faces.push(new Face(color6, v6[30], v6[62], v6[126], v6[94]));
    faces.push(new Face(color6, v6[31], v6[63], v6[127], v6[95]));
    faces.push(new Face(color6, v6[32], v6[33], v6[35], v6[34]));
    faces.push(new Face(color6, v6[32], v6[33], v6[37], v6[36]));
    faces.push(new Face(color6, v6[32], v6[33], v6[41], v6[40]));
    faces.push(new Face(color6, v6[32], v6[33], v6[49], v6[48]));
    faces.push(new Face(color6, v6[32], v6[33], v6[97], v6[96]));
    faces.push(new Face(color6, v6[32], v6[34], v6[38], v6[36]));
    faces.push(new Face(color6, v6[32], v6[34], v6[42], v6[40]));
    faces.push(new Face(color6, v6[32], v6[34], v6[50], v6[48]));
    faces.push(new Face(color6, v6[32], v6[34], v6[98], v6[96]));
    faces.push(new Face(color6, v6[32], v6[36], v6[44], v6[40]));
    faces.push(new Face(color6, v6[32], v6[36], v6[52], v6[48]));
    faces.push(new Face(color6, v6[32], v6[36], v6[100], v6[96]));
    faces.push(new Face(color6, v6[32], v6[40], v6[56], v6[48]));
    faces.push(new Face(color6, v6[32], v6[40], v6[104], v6[96]));
    faces.push(new Face(color6, v6[32], v6[48], v6[112], v6[96]));
    faces.push(new Face(color6, v6[33], v6[35], v6[39], v6[37]));
    faces.push(new Face(color6, v6[33], v6[35], v6[43], v6[41]));
    faces.push(new Face(color6, v6[33], v6[35], v6[51], v6[49]));
    faces.push(new Face(color6, v6[33], v6[35], v6[99], v6[97]));
    faces.push(new Face(color6, v6[33], v6[37], v6[45], v6[41]));
    faces.push(new Face(color6, v6[33], v6[37], v6[53], v6[49]));
    faces.push(new Face(color6, v6[33], v6[37], v6[101], v6[97]));
    faces.push(new Face(color6, v6[33], v6[41], v6[57], v6[49]));
    faces.push(new Face(color6, v6[33], v6[41], v6[105], v6[97]));
    faces.push(new Face(color6, v6[33], v6[49], v6[113], v6[97]));
    faces.push(new Face(color6, v6[34], v6[35], v6[39], v6[38]));
    faces.push(new Face(color6, v6[34], v6[35], v6[43], v6[42]));
    faces.push(new Face(color6, v6[34], v6[35], v6[51], v6[50]));
    faces.push(new Face(color6, v6[34], v6[35], v6[99], v6[98]));
    faces.push(new Face(color6, v6[34], v6[38], v6[46], v6[42]));
    faces.push(new Face(color6, v6[34], v6[38], v6[54], v6[50]));
    faces.push(new Face(color6, v6[34], v6[38], v6[102], v6[98]));
    faces.push(new Face(color6, v6[34], v6[42], v6[58], v6[50]));
    faces.push(new Face(color6, v6[34], v6[42], v6[106], v6[98]));
    faces.push(new Face(color6, v6[34], v6[50], v6[114], v6[98]));
    faces.push(new Face(color6, v6[35], v6[39], v6[47], v6[43]));
    faces.push(new Face(color6, v6[35], v6[39], v6[55], v6[51]));
    faces.push(new Face(color6, v6[35], v6[39], v6[103], v6[99]));
    faces.push(new Face(color6, v6[35], v6[43], v6[59], v6[51]));
    faces.push(new Face(color6, v6[35], v6[43], v6[107], v6[99]));
    faces.push(new Face(color6, v6[35], v6[51], v6[115], v6[99]));
    faces.push(new Face(color6, v6[36], v6[37], v6[39], v6[38]));
    faces.push(new Face(color6, v6[36], v6[37], v6[45], v6[44]));
    faces.push(new Face(color6, v6[36], v6[37], v6[53], v6[52]));
    faces.push(new Face(color6, v6[36], v6[37], v6[101], v6[100]));
    faces.push(new Face(color6, v6[36], v6[38], v6[46], v6[44]));
    faces.push(new Face(color6, v6[36], v6[38], v6[54], v6[52]));
    faces.push(new Face(color6, v6[36], v6[38], v6[102], v6[100]));
    faces.push(new Face(color6, v6[36], v6[44], v6[60], v6[52]));
    faces.push(new Face(color6, v6[36], v6[44], v6[108], v6[100]));
    faces.push(new Face(color6, v6[36], v6[52], v6[116], v6[100]));
    faces.push(new Face(color6, v6[37], v6[39], v6[47], v6[45]));
    faces.push(new Face(color6, v6[37], v6[39], v6[55], v6[53]));
    faces.push(new Face(color6, v6[37], v6[39], v6[103], v6[101]));
    faces.push(new Face(color6, v6[37], v6[45], v6[61], v6[53]));
    faces.push(new Face(color6, v6[37], v6[45], v6[109], v6[101]));
    faces.push(new Face(color6, v6[37], v6[53], v6[117], v6[101]));
    faces.push(new Face(color6, v6[38], v6[39], v6[47], v6[46]));
    faces.push(new Face(color6, v6[38], v6[39], v6[55], v6[54]));
    faces.push(new Face(color6, v6[38], v6[39], v6[103], v6[102]));
    faces.push(new Face(color6, v6[38], v6[46], v6[62], v6[54]));
    faces.push(new Face(color6, v6[38], v6[46], v6[110], v6[102]));
    faces.push(new Face(color6, v6[38], v6[54], v6[118], v6[102]));
    faces.push(new Face(color6, v6[39], v6[47], v6[63], v6[55]));
    faces.push(new Face(color6, v6[39], v6[47], v6[111], v6[103]));
    faces.push(new Face(color6, v6[39], v6[55], v6[119], v6[103]));
    faces.push(new Face(color6, v6[40], v6[41], v6[43], v6[42]));
    faces.push(new Face(color6, v6[40], v6[41], v6[45], v6[44]));
    faces.push(new Face(color6, v6[40], v6[41], v6[57], v6[56]));
    faces.push(new Face(color6, v6[40], v6[41], v6[105], v6[104]));
    faces.push(new Face(color6, v6[40], v6[42], v6[46], v6[44]));
    faces.push(new Face(color6, v6[40], v6[42], v6[58], v6[56]));
    faces.push(new Face(color6, v6[40], v6[42], v6[106], v6[104]));
    faces.push(new Face(color6, v6[40], v6[44], v6[60], v6[56]));
    faces.push(new Face(color6, v6[40], v6[44], v6[108], v6[104]));
    faces.push(new Face(color6, v6[40], v6[56], v6[120], v6[104]));
    faces.push(new Face(color6, v6[41], v6[43], v6[47], v6[45]));
    faces.push(new Face(color6, v6[41], v6[43], v6[59], v6[57]));
    faces.push(new Face(color6, v6[41], v6[43], v6[107], v6[105]));
    faces.push(new Face(color6, v6[41], v6[45], v6[61], v6[57]));
    faces.push(new Face(color6, v6[41], v6[45], v6[109], v6[105]));
    faces.push(new Face(color6, v6[41], v6[57], v6[121], v6[105]));
    faces.push(new Face(color6, v6[42], v6[43], v6[47], v6[46]));
    faces.push(new Face(color6, v6[42], v6[43], v6[59], v6[58]));
    faces.push(new Face(color6, v6[42], v6[43], v6[107], v6[106]));
    faces.push(new Face(color6, v6[42], v6[46], v6[62], v6[58]));
    faces.push(new Face(color6, v6[42], v6[46], v6[110], v6[106]));
    faces.push(new Face(color6, v6[42], v6[58], v6[122], v6[106]));
    faces.push(new Face(color6, v6[43], v6[47], v6[63], v6[59]));
    faces.push(new Face(color6, v6[43], v6[47], v6[111], v6[107]));
    faces.push(new Face(color6, v6[43], v6[59], v6[123], v6[107]));
    faces.push(new Face(color6, v6[44], v6[45], v6[47], v6[46]));
    faces.push(new Face(color6, v6[44], v6[45], v6[61], v6[60]));
    faces.push(new Face(color6, v6[44], v6[45], v6[109], v6[108]));
    faces.push(new Face(color6, v6[44], v6[46], v6[62], v6[60]));
    faces.push(new Face(color6, v6[44], v6[46], v6[110], v6[108]));
    faces.push(new Face(color6, v6[44], v6[60], v6[124], v6[108]));
    faces.push(new Face(color6, v6[45], v6[47], v6[63], v6[61]));
    faces.push(new Face(color6, v6[45], v6[47], v6[111], v6[109]));
    faces.push(new Face(color6, v6[45], v6[61], v6[125], v6[109]));
    faces.push(new Face(color6, v6[46], v6[47], v6[63], v6[62]));
    faces.push(new Face(color6, v6[46], v6[47], v6[111], v6[110]));
    faces.push(new Face(color6, v6[46], v6[62], v6[126], v6[110]));
    faces.push(new Face(color6, v6[47], v6[63], v6[127], v6[111]));
    faces.push(new Face(color6, v6[48], v6[49], v6[51], v6[50]));
    faces.push(new Face(color6, v6[48], v6[49], v6[53], v6[52]));
    faces.push(new Face(color6, v6[48], v6[49], v6[57], v6[56]));
    faces.push(new Face(color6, v6[48], v6[49], v6[113], v6[112]));
    faces.push(new Face(color6, v6[48], v6[50], v6[54], v6[52]));
    faces.push(new Face(color6, v6[48], v6[50], v6[58], v6[56]));
    faces.push(new Face(color6, v6[48], v6[50], v6[114], v6[112]));
    faces.push(new Face(color6, v6[48], v6[52], v6[60], v6[56]));
    faces.push(new Face(color6, v6[48], v6[52], v6[116], v6[112]));
    faces.push(new Face(color6, v6[48], v6[56], v6[120], v6[112]));
    faces.push(new Face(color6, v6[49], v6[51], v6[55], v6[53]));
    faces.push(new Face(color6, v6[49], v6[51], v6[59], v6[57]));
    faces.push(new Face(color6, v6[49], v6[51], v6[115], v6[113]));
    faces.push(new Face(color6, v6[49], v6[53], v6[61], v6[57]));
    faces.push(new Face(color6, v6[49], v6[53], v6[117], v6[113]));
    faces.push(new Face(color6, v6[49], v6[57], v6[121], v6[113]));
    faces.push(new Face(color6, v6[50], v6[51], v6[55], v6[54]));
    faces.push(new Face(color6, v6[50], v6[51], v6[59], v6[58]));
    faces.push(new Face(color6, v6[50], v6[51], v6[115], v6[114]));
    faces.push(new Face(color6, v6[50], v6[54], v6[62], v6[58]));
    faces.push(new Face(color6, v6[50], v6[54], v6[118], v6[114]));
    faces.push(new Face(color6, v6[50], v6[58], v6[122], v6[114]));
    faces.push(new Face(color6, v6[51], v6[55], v6[63], v6[59]));
    faces.push(new Face(color6, v6[51], v6[55], v6[119], v6[115]));
    faces.push(new Face(color6, v6[51], v6[59], v6[123], v6[115]));
    faces.push(new Face(color6, v6[52], v6[53], v6[55], v6[54]));
    faces.push(new Face(color6, v6[52], v6[53], v6[61], v6[60]));
    faces.push(new Face(color6, v6[52], v6[53], v6[117], v6[116]));
    faces.push(new Face(color6, v6[52], v6[54], v6[62], v6[60]));
    faces.push(new Face(color6, v6[52], v6[54], v6[118], v6[116]));
    faces.push(new Face(color6, v6[52], v6[60], v6[124], v6[116]));
    faces.push(new Face(color6, v6[53], v6[55], v6[63], v6[61]));
    faces.push(new Face(color6, v6[53], v6[55], v6[119], v6[117]));
    faces.push(new Face(color6, v6[53], v6[61], v6[125], v6[117]));
    faces.push(new Face(color6, v6[54], v6[55], v6[63], v6[62]));
    faces.push(new Face(color6, v6[54], v6[55], v6[119], v6[118]));
    faces.push(new Face(color6, v6[54], v6[62], v6[126], v6[118]));
    faces.push(new Face(color6, v6[55], v6[63], v6[127], v6[119]));
    faces.push(new Face(color6, v6[56], v6[57], v6[59], v6[58]));
    faces.push(new Face(color6, v6[56], v6[57], v6[61], v6[60]));
    faces.push(new Face(color6, v6[56], v6[57], v6[121], v6[120]));
    faces.push(new Face(color6, v6[56], v6[58], v6[62], v6[60]));
    faces.push(new Face(color6, v6[56], v6[58], v6[122], v6[120]));
    faces.push(new Face(color6, v6[56], v6[60], v6[124], v6[120]));
    faces.push(new Face(color6, v6[57], v6[59], v6[63], v6[61]));
    faces.push(new Face(color6, v6[57], v6[59], v6[123], v6[121]));
    faces.push(new Face(color6, v6[57], v6[61], v6[125], v6[121]));
    faces.push(new Face(color6, v6[58], v6[59], v6[63], v6[62]));
    faces.push(new Face(color6, v6[58], v6[59], v6[123], v6[122]));
    faces.push(new Face(color6, v6[58], v6[62], v6[126], v6[122]));
    faces.push(new Face(color6, v6[59], v6[63], v6[127], v6[123]));
    faces.push(new Face(color6, v6[60], v6[61], v6[63], v6[62]));
    faces.push(new Face(color6, v6[60], v6[61], v6[125], v6[124]));
    faces.push(new Face(color6, v6[60], v6[62], v6[126], v6[124]));
    faces.push(new Face(color6, v6[61], v6[63], v6[127], v6[125]));
    faces.push(new Face(color6, v6[62], v6[63], v6[127], v6[126]));
    faces.push(new Face(color6, v6[64], v6[65], v6[67], v6[66]));
    faces.push(new Face(color6, v6[64], v6[65], v6[69], v6[68]));
    faces.push(new Face(color6, v6[64], v6[65], v6[73], v6[72]));
    faces.push(new Face(color6, v6[64], v6[65], v6[81], v6[80]));
    faces.push(new Face(color6, v6[64], v6[65], v6[97], v6[96]));
    faces.push(new Face(color6, v6[64], v6[66], v6[70], v6[68]));
    faces.push(new Face(color6, v6[64], v6[66], v6[74], v6[72]));
    faces.push(new Face(color6, v6[64], v6[66], v6[82], v6[80]));
    faces.push(new Face(color6, v6[64], v6[66], v6[98], v6[96]));
    faces.push(new Face(color6, v6[64], v6[68], v6[76], v6[72]));
    faces.push(new Face(color6, v6[64], v6[68], v6[84], v6[80]));
    faces.push(new Face(color6, v6[64], v6[68], v6[100], v6[96]));
    faces.push(new Face(color6, v6[64], v6[72], v6[88], v6[80]));
    faces.push(new Face(color6, v6[64], v6[72], v6[104], v6[96]));
    faces.push(new Face(color6, v6[64], v6[80], v6[112], v6[96]));
    faces.push(new Face(color6, v6[65], v6[67], v6[71], v6[69]));
    faces.push(new Face(color6, v6[65], v6[67], v6[75], v6[73]));
    faces.push(new Face(color6, v6[65], v6[67], v6[83], v6[81]));
    faces.push(new Face(color6, v6[65], v6[67], v6[99], v6[97]));
    faces.push(new Face(color6, v6[65], v6[69], v6[77], v6[73]));
    faces.push(new Face(color6, v6[65], v6[69], v6[85], v6[81]));
    faces.push(new Face(color6, v6[65], v6[69], v6[101], v6[97]));
    faces.push(new Face(color6, v6[65], v6[73], v6[89], v6[81]));
    faces.push(new Face(color6, v6[65], v6[73], v6[105], v6[97]));
    faces.push(new Face(color6, v6[65], v6[81], v6[113], v6[97]));
    faces.push(new Face(color6, v6[66], v6[67], v6[71], v6[70]));
    faces.push(new Face(color6, v6[66], v6[67], v6[75], v6[74]));
    faces.push(new Face(color6, v6[66], v6[67], v6[83], v6[82]));
    faces.push(new Face(color6, v6[66], v6[67], v6[99], v6[98]));
    faces.push(new Face(color6, v6[66], v6[70], v6[78], v6[74]));
    faces.push(new Face(color6, v6[66], v6[70], v6[86], v6[82]));
    faces.push(new Face(color6, v6[66], v6[70], v6[102], v6[98]));
    faces.push(new Face(color6, v6[66], v6[74], v6[90], v6[82]));
    faces.push(new Face(color6, v6[66], v6[74], v6[106], v6[98]));
    faces.push(new Face(color6, v6[66], v6[82], v6[114], v6[98]));
    faces.push(new Face(color6, v6[67], v6[71], v6[79], v6[75]));
    faces.push(new Face(color6, v6[67], v6[71], v6[87], v6[83]));
    faces.push(new Face(color6, v6[67], v6[71], v6[103], v6[99]));
    faces.push(new Face(color6, v6[67], v6[75], v6[91], v6[83]));
    faces.push(new Face(color6, v6[67], v6[75], v6[107], v6[99]));
    faces.push(new Face(color6, v6[67], v6[83], v6[115], v6[99]));
    faces.push(new Face(color6, v6[68], v6[69], v6[71], v6[70]));
    faces.push(new Face(color6, v6[68], v6[69], v6[77], v6[76]));
    faces.push(new Face(color6, v6[68], v6[69], v6[85], v6[84]));
    faces.push(new Face(color6, v6[68], v6[69], v6[101], v6[100]));
    faces.push(new Face(color6, v6[68], v6[70], v6[78], v6[76]));
    faces.push(new Face(color6, v6[68], v6[70], v6[86], v6[84]));
    faces.push(new Face(color6, v6[68], v6[70], v6[102], v6[100]));
    faces.push(new Face(color6, v6[68], v6[76], v6[92], v6[84]));
    faces.push(new Face(color6, v6[68], v6[76], v6[108], v6[100]));
    faces.push(new Face(color6, v6[68], v6[84], v6[116], v6[100]));
    faces.push(new Face(color6, v6[69], v6[71], v6[79], v6[77]));
    faces.push(new Face(color6, v6[69], v6[71], v6[87], v6[85]));
    faces.push(new Face(color6, v6[69], v6[71], v6[103], v6[101]));
    faces.push(new Face(color6, v6[69], v6[77], v6[93], v6[85]));
    faces.push(new Face(color6, v6[69], v6[77], v6[109], v6[101]));
    faces.push(new Face(color6, v6[69], v6[85], v6[117], v6[101]));
    faces.push(new Face(color6, v6[70], v6[71], v6[79], v6[78]));
    faces.push(new Face(color6, v6[70], v6[71], v6[87], v6[86]));
    faces.push(new Face(color6, v6[70], v6[71], v6[103], v6[102]));
    faces.push(new Face(color6, v6[70], v6[78], v6[94], v6[86]));
    faces.push(new Face(color6, v6[70], v6[78], v6[110], v6[102]));
    faces.push(new Face(color6, v6[70], v6[86], v6[118], v6[102]));
    faces.push(new Face(color6, v6[71], v6[79], v6[95], v6[87]));
    faces.push(new Face(color6, v6[71], v6[79], v6[111], v6[103]));
    faces.push(new Face(color6, v6[71], v6[87], v6[119], v6[103]));
    faces.push(new Face(color6, v6[72], v6[73], v6[75], v6[74]));
    faces.push(new Face(color6, v6[72], v6[73], v6[77], v6[76]));
    faces.push(new Face(color6, v6[72], v6[73], v6[89], v6[88]));
    faces.push(new Face(color6, v6[72], v6[73], v6[105], v6[104]));
    faces.push(new Face(color6, v6[72], v6[74], v6[78], v6[76]));
    faces.push(new Face(color6, v6[72], v6[74], v6[90], v6[88]));
    faces.push(new Face(color6, v6[72], v6[74], v6[106], v6[104]));
    faces.push(new Face(color6, v6[72], v6[76], v6[92], v6[88]));
    faces.push(new Face(color6, v6[72], v6[76], v6[108], v6[104]));
    faces.push(new Face(color6, v6[72], v6[88], v6[120], v6[104]));
    faces.push(new Face(color6, v6[73], v6[75], v6[79], v6[77]));
    faces.push(new Face(color6, v6[73], v6[75], v6[91], v6[89]));
    faces.push(new Face(color6, v6[73], v6[75], v6[107], v6[105]));
    faces.push(new Face(color6, v6[73], v6[77], v6[93], v6[89]));
    faces.push(new Face(color6, v6[73], v6[77], v6[109], v6[105]));
    faces.push(new Face(color6, v6[73], v6[89], v6[121], v6[105]));
    faces.push(new Face(color6, v6[74], v6[75], v6[79], v6[78]));
    faces.push(new Face(color6, v6[74], v6[75], v6[91], v6[90]));
    faces.push(new Face(color6, v6[74], v6[75], v6[107], v6[106]));
    faces.push(new Face(color6, v6[74], v6[78], v6[94], v6[90]));
    faces.push(new Face(color6, v6[74], v6[78], v6[110], v6[106]));
    faces.push(new Face(color6, v6[74], v6[90], v6[122], v6[106]));
    faces.push(new Face(color6, v6[75], v6[79], v6[95], v6[91]));
    faces.push(new Face(color6, v6[75], v6[79], v6[111], v6[107]));
    faces.push(new Face(color6, v6[75], v6[91], v6[123], v6[107]));
    faces.push(new Face(color6, v6[76], v6[77], v6[79], v6[78]));
    faces.push(new Face(color6, v6[76], v6[77], v6[93], v6[92]));
    faces.push(new Face(color6, v6[76], v6[77], v6[109], v6[108]));
    faces.push(new Face(color6, v6[76], v6[78], v6[94], v6[92]));
    faces.push(new Face(color6, v6[76], v6[78], v6[110], v6[108]));
    faces.push(new Face(color6, v6[76], v6[92], v6[124], v6[108]));
    faces.push(new Face(color6, v6[77], v6[79], v6[95], v6[93]));
    faces.push(new Face(color6, v6[77], v6[79], v6[111], v6[109]));
    faces.push(new Face(color6, v6[77], v6[93], v6[125], v6[109]));
    faces.push(new Face(color6, v6[78], v6[79], v6[95], v6[94]));
    faces.push(new Face(color6, v6[78], v6[79], v6[111], v6[110]));
    faces.push(new Face(color6, v6[78], v6[94], v6[126], v6[110]));
    faces.push(new Face(color6, v6[79], v6[95], v6[127], v6[111]));
    faces.push(new Face(color6, v6[80], v6[81], v6[83], v6[82]));
    faces.push(new Face(color6, v6[80], v6[81], v6[85], v6[84]));
    faces.push(new Face(color6, v6[80], v6[81], v6[89], v6[88]));
    faces.push(new Face(color6, v6[80], v6[81], v6[113], v6[112]));
    faces.push(new Face(color6, v6[80], v6[82], v6[86], v6[84]));
    faces.push(new Face(color6, v6[80], v6[82], v6[90], v6[88]));
    faces.push(new Face(color6, v6[80], v6[82], v6[114], v6[112]));
    faces.push(new Face(color6, v6[80], v6[84], v6[92], v6[88]));
    faces.push(new Face(color6, v6[80], v6[84], v6[116], v6[112]));
    faces.push(new Face(color6, v6[80], v6[88], v6[120], v6[112]));
    faces.push(new Face(color6, v6[81], v6[83], v6[87], v6[85]));
    faces.push(new Face(color6, v6[81], v6[83], v6[91], v6[89]));
    faces.push(new Face(color6, v6[81], v6[83], v6[115], v6[113]));
    faces.push(new Face(color6, v6[81], v6[85], v6[93], v6[89]));
    faces.push(new Face(color6, v6[81], v6[85], v6[117], v6[113]));
    faces.push(new Face(color6, v6[81], v6[89], v6[121], v6[113]));
    faces.push(new Face(color6, v6[82], v6[83], v6[87], v6[86]));
    faces.push(new Face(color6, v6[82], v6[83], v6[91], v6[90]));
    faces.push(new Face(color6, v6[82], v6[83], v6[115], v6[114]));
    faces.push(new Face(color6, v6[82], v6[86], v6[94], v6[90]));
    faces.push(new Face(color6, v6[82], v6[86], v6[118], v6[114]));
    faces.push(new Face(color6, v6[82], v6[90], v6[122], v6[114]));
    faces.push(new Face(color6, v6[83], v6[87], v6[95], v6[91]));
    faces.push(new Face(color6, v6[83], v6[87], v6[119], v6[115]));
    faces.push(new Face(color6, v6[83], v6[91], v6[123], v6[115]));
    faces.push(new Face(color6, v6[84], v6[85], v6[87], v6[86]));
    faces.push(new Face(color6, v6[84], v6[85], v6[93], v6[92]));
    faces.push(new Face(color6, v6[84], v6[85], v6[117], v6[116]));
    faces.push(new Face(color6, v6[84], v6[86], v6[94], v6[92]));
    faces.push(new Face(color6, v6[84], v6[86], v6[118], v6[116]));
    faces.push(new Face(color6, v6[84], v6[92], v6[124], v6[116]));
    faces.push(new Face(color6, v6[85], v6[87], v6[95], v6[93]));
    faces.push(new Face(color6, v6[85], v6[87], v6[119], v6[117]));
    faces.push(new Face(color6, v6[85], v6[93], v6[125], v6[117]));
    faces.push(new Face(color6, v6[86], v6[87], v6[95], v6[94]));
    faces.push(new Face(color6, v6[86], v6[87], v6[119], v6[118]));
    faces.push(new Face(color6, v6[86], v6[94], v6[126], v6[118]));
    faces.push(new Face(color6, v6[87], v6[95], v6[127], v6[119]));
    faces.push(new Face(color6, v6[88], v6[89], v6[91], v6[90]));
    faces.push(new Face(color6, v6[88], v6[89], v6[93], v6[92]));
    faces.push(new Face(color6, v6[88], v6[89], v6[121], v6[120]));
    faces.push(new Face(color6, v6[88], v6[90], v6[94], v6[92]));
    faces.push(new Face(color6, v6[88], v6[90], v6[122], v6[120]));
    faces.push(new Face(color6, v6[88], v6[92], v6[124], v6[120]));
    faces.push(new Face(color6, v6[89], v6[91], v6[95], v6[93]));
    faces.push(new Face(color6, v6[89], v6[91], v6[123], v6[121]));
    faces.push(new Face(color6, v6[89], v6[93], v6[125], v6[121]));
    faces.push(new Face(color6, v6[90], v6[91], v6[95], v6[94]));
    faces.push(new Face(color6, v6[90], v6[91], v6[123], v6[122]));
    faces.push(new Face(color6, v6[90], v6[94], v6[126], v6[122]));
    faces.push(new Face(color6, v6[91], v6[95], v6[127], v6[123]));
    faces.push(new Face(color6, v6[92], v6[93], v6[95], v6[94]));
    faces.push(new Face(color6, v6[92], v6[93], v6[125], v6[124]));
    faces.push(new Face(color6, v6[92], v6[94], v6[126], v6[124]));
    faces.push(new Face(color6, v6[93], v6[95], v6[127], v6[125]));
    faces.push(new Face(color6, v6[94], v6[95], v6[127], v6[126]));
    faces.push(new Face(color6, v6[96], v6[97], v6[99], v6[98]));
    faces.push(new Face(color6, v6[96], v6[97], v6[101], v6[100]));
    faces.push(new Face(color6, v6[96], v6[97], v6[105], v6[104]));
    faces.push(new Face(color6, v6[96], v6[97], v6[113], v6[112]));
    faces.push(new Face(color6, v6[96], v6[98], v6[102], v6[100]));
    faces.push(new Face(color6, v6[96], v6[98], v6[106], v6[104]));
    faces.push(new Face(color6, v6[96], v6[98], v6[114], v6[112]));
    faces.push(new Face(color6, v6[96], v6[100], v6[108], v6[104]));
    faces.push(new Face(color6, v6[96], v6[100], v6[116], v6[112]));
    faces.push(new Face(color6, v6[96], v6[104], v6[120], v6[112]));
    faces.push(new Face(color6, v6[97], v6[99], v6[103], v6[101]));
    faces.push(new Face(color6, v6[97], v6[99], v6[107], v6[105]));
    faces.push(new Face(color6, v6[97], v6[99], v6[115], v6[113]));
    faces.push(new Face(color6, v6[97], v6[101], v6[109], v6[105]));
    faces.push(new Face(color6, v6[97], v6[101], v6[117], v6[113]));
    faces.push(new Face(color6, v6[97], v6[105], v6[121], v6[113]));
    faces.push(new Face(color6, v6[98], v6[99], v6[103], v6[102]));
    faces.push(new Face(color6, v6[98], v6[99], v6[107], v6[106]));
    faces.push(new Face(color6, v6[98], v6[99], v6[115], v6[114]));
    faces.push(new Face(color6, v6[98], v6[102], v6[110], v6[106]));
    faces.push(new Face(color6, v6[98], v6[102], v6[118], v6[114]));
    faces.push(new Face(color6, v6[98], v6[106], v6[122], v6[114]));
    faces.push(new Face(color6, v6[99], v6[103], v6[111], v6[107]));
    faces.push(new Face(color6, v6[99], v6[103], v6[119], v6[115]));
    faces.push(new Face(color6, v6[99], v6[107], v6[123], v6[115]));
    faces.push(new Face(color6, v6[100], v6[101], v6[103], v6[102]));
    faces.push(new Face(color6, v6[100], v6[101], v6[109], v6[108]));
    faces.push(new Face(color6, v6[100], v6[101], v6[117], v6[116]));
    faces.push(new Face(color6, v6[100], v6[102], v6[110], v6[108]));
    faces.push(new Face(color6, v6[100], v6[102], v6[118], v6[116]));
    faces.push(new Face(color6, v6[100], v6[108], v6[124], v6[116]));
    faces.push(new Face(color6, v6[101], v6[103], v6[111], v6[109]));
    faces.push(new Face(color6, v6[101], v6[103], v6[119], v6[117]));
    faces.push(new Face(color6, v6[101], v6[109], v6[125], v6[117]));
    faces.push(new Face(color6, v6[102], v6[103], v6[111], v6[110]));
    faces.push(new Face(color6, v6[102], v6[103], v6[119], v6[118]));
    faces.push(new Face(color6, v6[102], v6[110], v6[126], v6[118]));
    faces.push(new Face(color6, v6[103], v6[111], v6[127], v6[119]));
    faces.push(new Face(color6, v6[104], v6[105], v6[107], v6[106]));
    faces.push(new Face(color6, v6[104], v6[105], v6[109], v6[108]));
    faces.push(new Face(color6, v6[104], v6[105], v6[121], v6[120]));
    faces.push(new Face(color6, v6[104], v6[106], v6[110], v6[108]));
    faces.push(new Face(color6, v6[104], v6[106], v6[122], v6[120]));
    faces.push(new Face(color6, v6[104], v6[108], v6[124], v6[120]));
    faces.push(new Face(color6, v6[105], v6[107], v6[111], v6[109]));
    faces.push(new Face(color6, v6[105], v6[107], v6[123], v6[121]));
    faces.push(new Face(color6, v6[105], v6[109], v6[125], v6[121]));
    faces.push(new Face(color6, v6[106], v6[107], v6[111], v6[110]));
    faces.push(new Face(color6, v6[106], v6[107], v6[123], v6[122]));
    faces.push(new Face(color6, v6[106], v6[110], v6[126], v6[122]));
    faces.push(new Face(color6, v6[107], v6[111], v6[127], v6[123]));
    faces.push(new Face(color6, v6[108], v6[109], v6[111], v6[110]));
    faces.push(new Face(color6, v6[108], v6[109], v6[125], v6[124]));
    faces.push(new Face(color6, v6[108], v6[110], v6[126], v6[124]));
    faces.push(new Face(color6, v6[109], v6[111], v6[127], v6[125]));
    faces.push(new Face(color6, v6[110], v6[111], v6[127], v6[126]));
    faces.push(new Face(color6, v6[112], v6[113], v6[115], v6[114]));
    faces.push(new Face(color6, v6[112], v6[113], v6[117], v6[116]));
    faces.push(new Face(color6, v6[112], v6[113], v6[121], v6[120]));
    faces.push(new Face(color6, v6[112], v6[114], v6[118], v6[116]));
    faces.push(new Face(color6, v6[112], v6[114], v6[122], v6[120]));
    faces.push(new Face(color6, v6[112], v6[116], v6[124], v6[120]));
    faces.push(new Face(color6, v6[113], v6[115], v6[119], v6[117]));
    faces.push(new Face(color6, v6[113], v6[115], v6[123], v6[121]));
    faces.push(new Face(color6, v6[113], v6[117], v6[125], v6[121]));
    faces.push(new Face(color6, v6[114], v6[115], v6[119], v6[118]));
    faces.push(new Face(color6, v6[114], v6[115], v6[123], v6[122]));
    faces.push(new Face(color6, v6[114], v6[118], v6[126], v6[122]));
    faces.push(new Face(color6, v6[115], v6[119], v6[127], v6[123]));
    faces.push(new Face(color6, v6[116], v6[117], v6[119], v6[118]));
    faces.push(new Face(color6, v6[116], v6[117], v6[125], v6[124]));
    faces.push(new Face(color6, v6[116], v6[118], v6[126], v6[124]));
    faces.push(new Face(color6, v6[117], v6[119], v6[127], v6[125]));
    faces.push(new Face(color6, v6[118], v6[119], v6[127], v6[126]));
    faces.push(new Face(color6, v6[120], v6[121], v6[123], v6[122]));
    faces.push(new Face(color6, v6[120], v6[121], v6[125], v6[124]));
    faces.push(new Face(color6, v6[120], v6[122], v6[126], v6[124]));
    faces.push(new Face(color6, v6[121], v6[123], v6[127], v6[125]));
    faces.push(new Face(color6, v6[122], v6[123], v6[127], v6[126]));
    faces.push(new Face(color6, v6[124], v6[125], v6[127], v6[126]));
    for (let i = 0; i < v6.length; i++) {
        v6[i].rotate(r);
        v6[i].project();
    }

    v7[0] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v7[1] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[2] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v7[3] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[4] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v7[5] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[6] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v7[7] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[8] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v7[9] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[10] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v7[11] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[12] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v7[13] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[14] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2);
    v7[15] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[16] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v7[17] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[18] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v7[19] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[20] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v7[21] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[22] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v7[23] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[24] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v7[25] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[26] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v7[27] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[28] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v7[29] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[30] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, w/2, -w/2, -w/2);
    v7[31] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[32] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v7[33] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[34] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v7[35] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[36] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v7[37] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[38] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v7[39] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[40] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v7[41] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[42] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v7[43] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[44] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v7[45] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[46] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2);
    v7[47] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[48] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v7[49] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[50] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v7[51] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[52] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v7[53] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[54] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v7[55] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[56] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v7[57] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[58] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v7[59] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[60] = new Vertex(-w/2, w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v7[61] = new Vertex(-w/2, w/2, w/2, w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[62] = new Vertex(-w/2, w/2, w/2, w/2, w/2, w/2, -w/2, -w/2);
    v7[63] = new Vertex(-w/2, w/2, w/2, w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[64] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v7[65] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[66] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v7[67] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[68] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v7[69] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[70] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v7[71] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[72] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v7[73] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[74] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v7[75] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[76] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v7[77] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[78] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2);
    v7[79] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[80] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v7[81] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[82] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v7[83] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[84] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v7[85] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[86] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v7[87] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[88] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v7[89] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[90] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v7[91] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[92] = new Vertex(w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v7[93] = new Vertex(w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[94] = new Vertex(w/2, -w/2, w/2, w/2, w/2, w/2, -w/2, -w/2);
    v7[95] = new Vertex(w/2, -w/2, w/2, w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[96] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v7[97] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[98] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v7[99] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[100] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v7[101] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[102] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v7[103] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[104] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v7[105] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[106] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v7[107] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[108] = new Vertex(w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v7[109] = new Vertex(w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[110] = new Vertex(w/2, w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2);
    v7[111] = new Vertex(w/2, w/2, -w/2, w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[112] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v7[113] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[114] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v7[115] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[116] = new Vertex(w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v7[117] = new Vertex(w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[118] = new Vertex(w/2, w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v7[119] = new Vertex(w/2, w/2, w/2, -w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[120] = new Vertex(w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v7[121] = new Vertex(w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[122] = new Vertex(w/2, w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v7[123] = new Vertex(w/2, w/2, w/2, w/2, -w/2, w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[124] = new Vertex(w/2, w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v7[125] = new Vertex(w/2, w/2, w/2, w/2, w/2, -w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v7[126] = new Vertex(w/2, w/2, w/2, w/2, w/2, w/2, -w/2, -w/2);
    v7[127] = new Vertex(w/2, w/2, w/2, w/2, w/2, w/2, -w/2-Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    faces.push(new Face(color7, v7[0], v7[1], v7[3], v7[2]));
    faces.push(new Face(color7, v7[0], v7[1], v7[5], v7[4]));
    faces.push(new Face(color7, v7[0], v7[1], v7[9], v7[8]));
    faces.push(new Face(color7, v7[0], v7[1], v7[17], v7[16]));
    faces.push(new Face(color7, v7[0], v7[1], v7[33], v7[32]));
    faces.push(new Face(color7, v7[0], v7[1], v7[65], v7[64]));
    faces.push(new Face(color7, v7[0], v7[2], v7[6], v7[4]));
    faces.push(new Face(color7, v7[0], v7[2], v7[10], v7[8]));
    faces.push(new Face(color7, v7[0], v7[2], v7[18], v7[16]));
    faces.push(new Face(color7, v7[0], v7[2], v7[34], v7[32]));
    faces.push(new Face(color7, v7[0], v7[2], v7[66], v7[64]));
    faces.push(new Face(color7, v7[0], v7[4], v7[12], v7[8]));
    faces.push(new Face(color7, v7[0], v7[4], v7[20], v7[16]));
    faces.push(new Face(color7, v7[0], v7[4], v7[36], v7[32]));
    faces.push(new Face(color7, v7[0], v7[4], v7[68], v7[64]));
    faces.push(new Face(color7, v7[0], v7[8], v7[24], v7[16]));
    faces.push(new Face(color7, v7[0], v7[8], v7[40], v7[32]));
    faces.push(new Face(color7, v7[0], v7[8], v7[72], v7[64]));
    faces.push(new Face(color7, v7[0], v7[16], v7[48], v7[32]));
    faces.push(new Face(color7, v7[0], v7[16], v7[80], v7[64]));
    faces.push(new Face(color7, v7[0], v7[32], v7[96], v7[64]));
    faces.push(new Face(color7, v7[1], v7[3], v7[7], v7[5]));
    faces.push(new Face(color7, v7[1], v7[3], v7[11], v7[9]));
    faces.push(new Face(color7, v7[1], v7[3], v7[19], v7[17]));
    faces.push(new Face(color7, v7[1], v7[3], v7[35], v7[33]));
    faces.push(new Face(color7, v7[1], v7[3], v7[67], v7[65]));
    faces.push(new Face(color7, v7[1], v7[5], v7[13], v7[9]));
    faces.push(new Face(color7, v7[1], v7[5], v7[21], v7[17]));
    faces.push(new Face(color7, v7[1], v7[5], v7[37], v7[33]));
    faces.push(new Face(color7, v7[1], v7[5], v7[69], v7[65]));
    faces.push(new Face(color7, v7[1], v7[9], v7[25], v7[17]));
    faces.push(new Face(color7, v7[1], v7[9], v7[41], v7[33]));
    faces.push(new Face(color7, v7[1], v7[9], v7[73], v7[65]));
    faces.push(new Face(color7, v7[1], v7[17], v7[49], v7[33]));
    faces.push(new Face(color7, v7[1], v7[17], v7[81], v7[65]));
    faces.push(new Face(color7, v7[1], v7[33], v7[97], v7[65]));
    faces.push(new Face(color7, v7[2], v7[3], v7[7], v7[6]));
    faces.push(new Face(color7, v7[2], v7[3], v7[11], v7[10]));
    faces.push(new Face(color7, v7[2], v7[3], v7[19], v7[18]));
    faces.push(new Face(color7, v7[2], v7[3], v7[35], v7[34]));
    faces.push(new Face(color7, v7[2], v7[3], v7[67], v7[66]));
    faces.push(new Face(color7, v7[2], v7[6], v7[14], v7[10]));
    faces.push(new Face(color7, v7[2], v7[6], v7[22], v7[18]));
    faces.push(new Face(color7, v7[2], v7[6], v7[38], v7[34]));
    faces.push(new Face(color7, v7[2], v7[6], v7[70], v7[66]));
    faces.push(new Face(color7, v7[2], v7[10], v7[26], v7[18]));
    faces.push(new Face(color7, v7[2], v7[10], v7[42], v7[34]));
    faces.push(new Face(color7, v7[2], v7[10], v7[74], v7[66]));
    faces.push(new Face(color7, v7[2], v7[18], v7[50], v7[34]));
    faces.push(new Face(color7, v7[2], v7[18], v7[82], v7[66]));
    faces.push(new Face(color7, v7[2], v7[34], v7[98], v7[66]));
    faces.push(new Face(color7, v7[3], v7[7], v7[15], v7[11]));
    faces.push(new Face(color7, v7[3], v7[7], v7[23], v7[19]));
    faces.push(new Face(color7, v7[3], v7[7], v7[39], v7[35]));
    faces.push(new Face(color7, v7[3], v7[7], v7[71], v7[67]));
    faces.push(new Face(color7, v7[3], v7[11], v7[27], v7[19]));
    faces.push(new Face(color7, v7[3], v7[11], v7[43], v7[35]));
    faces.push(new Face(color7, v7[3], v7[11], v7[75], v7[67]));
    faces.push(new Face(color7, v7[3], v7[19], v7[51], v7[35]));
    faces.push(new Face(color7, v7[3], v7[19], v7[83], v7[67]));
    faces.push(new Face(color7, v7[3], v7[35], v7[99], v7[67]));
    faces.push(new Face(color7, v7[4], v7[5], v7[7], v7[6]));
    faces.push(new Face(color7, v7[4], v7[5], v7[13], v7[12]));
    faces.push(new Face(color7, v7[4], v7[5], v7[21], v7[20]));
    faces.push(new Face(color7, v7[4], v7[5], v7[37], v7[36]));
    faces.push(new Face(color7, v7[4], v7[5], v7[69], v7[68]));
    faces.push(new Face(color7, v7[4], v7[6], v7[14], v7[12]));
    faces.push(new Face(color7, v7[4], v7[6], v7[22], v7[20]));
    faces.push(new Face(color7, v7[4], v7[6], v7[38], v7[36]));
    faces.push(new Face(color7, v7[4], v7[6], v7[70], v7[68]));
    faces.push(new Face(color7, v7[4], v7[12], v7[28], v7[20]));
    faces.push(new Face(color7, v7[4], v7[12], v7[44], v7[36]));
    faces.push(new Face(color7, v7[4], v7[12], v7[76], v7[68]));
    faces.push(new Face(color7, v7[4], v7[20], v7[52], v7[36]));
    faces.push(new Face(color7, v7[4], v7[20], v7[84], v7[68]));
    faces.push(new Face(color7, v7[4], v7[36], v7[100], v7[68]));
    faces.push(new Face(color7, v7[5], v7[7], v7[15], v7[13]));
    faces.push(new Face(color7, v7[5], v7[7], v7[23], v7[21]));
    faces.push(new Face(color7, v7[5], v7[7], v7[39], v7[37]));
    faces.push(new Face(color7, v7[5], v7[7], v7[71], v7[69]));
    faces.push(new Face(color7, v7[5], v7[13], v7[29], v7[21]));
    faces.push(new Face(color7, v7[5], v7[13], v7[45], v7[37]));
    faces.push(new Face(color7, v7[5], v7[13], v7[77], v7[69]));
    faces.push(new Face(color7, v7[5], v7[21], v7[53], v7[37]));
    faces.push(new Face(color7, v7[5], v7[21], v7[85], v7[69]));
    faces.push(new Face(color7, v7[5], v7[37], v7[101], v7[69]));
    faces.push(new Face(color7, v7[6], v7[7], v7[15], v7[14]));
    faces.push(new Face(color7, v7[6], v7[7], v7[23], v7[22]));
    faces.push(new Face(color7, v7[6], v7[7], v7[39], v7[38]));
    faces.push(new Face(color7, v7[6], v7[7], v7[71], v7[70]));
    faces.push(new Face(color7, v7[6], v7[14], v7[30], v7[22]));
    faces.push(new Face(color7, v7[6], v7[14], v7[46], v7[38]));
    faces.push(new Face(color7, v7[6], v7[14], v7[78], v7[70]));
    faces.push(new Face(color7, v7[6], v7[22], v7[54], v7[38]));
    faces.push(new Face(color7, v7[6], v7[22], v7[86], v7[70]));
    faces.push(new Face(color7, v7[6], v7[38], v7[102], v7[70]));
    faces.push(new Face(color7, v7[7], v7[15], v7[31], v7[23]));
    faces.push(new Face(color7, v7[7], v7[15], v7[47], v7[39]));
    faces.push(new Face(color7, v7[7], v7[15], v7[79], v7[71]));
    faces.push(new Face(color7, v7[7], v7[23], v7[55], v7[39]));
    faces.push(new Face(color7, v7[7], v7[23], v7[87], v7[71]));
    faces.push(new Face(color7, v7[7], v7[39], v7[103], v7[71]));
    faces.push(new Face(color7, v7[8], v7[9], v7[11], v7[10]));
    faces.push(new Face(color7, v7[8], v7[9], v7[13], v7[12]));
    faces.push(new Face(color7, v7[8], v7[9], v7[25], v7[24]));
    faces.push(new Face(color7, v7[8], v7[9], v7[41], v7[40]));
    faces.push(new Face(color7, v7[8], v7[9], v7[73], v7[72]));
    faces.push(new Face(color7, v7[8], v7[10], v7[14], v7[12]));
    faces.push(new Face(color7, v7[8], v7[10], v7[26], v7[24]));
    faces.push(new Face(color7, v7[8], v7[10], v7[42], v7[40]));
    faces.push(new Face(color7, v7[8], v7[10], v7[74], v7[72]));
    faces.push(new Face(color7, v7[8], v7[12], v7[28], v7[24]));
    faces.push(new Face(color7, v7[8], v7[12], v7[44], v7[40]));
    faces.push(new Face(color7, v7[8], v7[12], v7[76], v7[72]));
    faces.push(new Face(color7, v7[8], v7[24], v7[56], v7[40]));
    faces.push(new Face(color7, v7[8], v7[24], v7[88], v7[72]));
    faces.push(new Face(color7, v7[8], v7[40], v7[104], v7[72]));
    faces.push(new Face(color7, v7[9], v7[11], v7[15], v7[13]));
    faces.push(new Face(color7, v7[9], v7[11], v7[27], v7[25]));
    faces.push(new Face(color7, v7[9], v7[11], v7[43], v7[41]));
    faces.push(new Face(color7, v7[9], v7[11], v7[75], v7[73]));
    faces.push(new Face(color7, v7[9], v7[13], v7[29], v7[25]));
    faces.push(new Face(color7, v7[9], v7[13], v7[45], v7[41]));
    faces.push(new Face(color7, v7[9], v7[13], v7[77], v7[73]));
    faces.push(new Face(color7, v7[9], v7[25], v7[57], v7[41]));
    faces.push(new Face(color7, v7[9], v7[25], v7[89], v7[73]));
    faces.push(new Face(color7, v7[9], v7[41], v7[105], v7[73]));
    faces.push(new Face(color7, v7[10], v7[11], v7[15], v7[14]));
    faces.push(new Face(color7, v7[10], v7[11], v7[27], v7[26]));
    faces.push(new Face(color7, v7[10], v7[11], v7[43], v7[42]));
    faces.push(new Face(color7, v7[10], v7[11], v7[75], v7[74]));
    faces.push(new Face(color7, v7[10], v7[14], v7[30], v7[26]));
    faces.push(new Face(color7, v7[10], v7[14], v7[46], v7[42]));
    faces.push(new Face(color7, v7[10], v7[14], v7[78], v7[74]));
    faces.push(new Face(color7, v7[10], v7[26], v7[58], v7[42]));
    faces.push(new Face(color7, v7[10], v7[26], v7[90], v7[74]));
    faces.push(new Face(color7, v7[10], v7[42], v7[106], v7[74]));
    faces.push(new Face(color7, v7[11], v7[15], v7[31], v7[27]));
    faces.push(new Face(color7, v7[11], v7[15], v7[47], v7[43]));
    faces.push(new Face(color7, v7[11], v7[15], v7[79], v7[75]));
    faces.push(new Face(color7, v7[11], v7[27], v7[59], v7[43]));
    faces.push(new Face(color7, v7[11], v7[27], v7[91], v7[75]));
    faces.push(new Face(color7, v7[11], v7[43], v7[107], v7[75]));
    faces.push(new Face(color7, v7[12], v7[13], v7[15], v7[14]));
    faces.push(new Face(color7, v7[12], v7[13], v7[29], v7[28]));
    faces.push(new Face(color7, v7[12], v7[13], v7[45], v7[44]));
    faces.push(new Face(color7, v7[12], v7[13], v7[77], v7[76]));
    faces.push(new Face(color7, v7[12], v7[14], v7[30], v7[28]));
    faces.push(new Face(color7, v7[12], v7[14], v7[46], v7[44]));
    faces.push(new Face(color7, v7[12], v7[14], v7[78], v7[76]));
    faces.push(new Face(color7, v7[12], v7[28], v7[60], v7[44]));
    faces.push(new Face(color7, v7[12], v7[28], v7[92], v7[76]));
    faces.push(new Face(color7, v7[12], v7[44], v7[108], v7[76]));
    faces.push(new Face(color7, v7[13], v7[15], v7[31], v7[29]));
    faces.push(new Face(color7, v7[13], v7[15], v7[47], v7[45]));
    faces.push(new Face(color7, v7[13], v7[15], v7[79], v7[77]));
    faces.push(new Face(color7, v7[13], v7[29], v7[61], v7[45]));
    faces.push(new Face(color7, v7[13], v7[29], v7[93], v7[77]));
    faces.push(new Face(color7, v7[13], v7[45], v7[109], v7[77]));
    faces.push(new Face(color7, v7[14], v7[15], v7[31], v7[30]));
    faces.push(new Face(color7, v7[14], v7[15], v7[47], v7[46]));
    faces.push(new Face(color7, v7[14], v7[15], v7[79], v7[78]));
    faces.push(new Face(color7, v7[14], v7[30], v7[62], v7[46]));
    faces.push(new Face(color7, v7[14], v7[30], v7[94], v7[78]));
    faces.push(new Face(color7, v7[14], v7[46], v7[110], v7[78]));
    faces.push(new Face(color7, v7[15], v7[31], v7[63], v7[47]));
    faces.push(new Face(color7, v7[15], v7[31], v7[95], v7[79]));
    faces.push(new Face(color7, v7[15], v7[47], v7[111], v7[79]));
    faces.push(new Face(color7, v7[16], v7[17], v7[19], v7[18]));
    faces.push(new Face(color7, v7[16], v7[17], v7[21], v7[20]));
    faces.push(new Face(color7, v7[16], v7[17], v7[25], v7[24]));
    faces.push(new Face(color7, v7[16], v7[17], v7[49], v7[48]));
    faces.push(new Face(color7, v7[16], v7[17], v7[81], v7[80]));
    faces.push(new Face(color7, v7[16], v7[18], v7[22], v7[20]));
    faces.push(new Face(color7, v7[16], v7[18], v7[26], v7[24]));
    faces.push(new Face(color7, v7[16], v7[18], v7[50], v7[48]));
    faces.push(new Face(color7, v7[16], v7[18], v7[82], v7[80]));
    faces.push(new Face(color7, v7[16], v7[20], v7[28], v7[24]));
    faces.push(new Face(color7, v7[16], v7[20], v7[52], v7[48]));
    faces.push(new Face(color7, v7[16], v7[20], v7[84], v7[80]));
    faces.push(new Face(color7, v7[16], v7[24], v7[56], v7[48]));
    faces.push(new Face(color7, v7[16], v7[24], v7[88], v7[80]));
    faces.push(new Face(color7, v7[16], v7[48], v7[112], v7[80]));
    faces.push(new Face(color7, v7[17], v7[19], v7[23], v7[21]));
    faces.push(new Face(color7, v7[17], v7[19], v7[27], v7[25]));
    faces.push(new Face(color7, v7[17], v7[19], v7[51], v7[49]));
    faces.push(new Face(color7, v7[17], v7[19], v7[83], v7[81]));
    faces.push(new Face(color7, v7[17], v7[21], v7[29], v7[25]));
    faces.push(new Face(color7, v7[17], v7[21], v7[53], v7[49]));
    faces.push(new Face(color7, v7[17], v7[21], v7[85], v7[81]));
    faces.push(new Face(color7, v7[17], v7[25], v7[57], v7[49]));
    faces.push(new Face(color7, v7[17], v7[25], v7[89], v7[81]));
    faces.push(new Face(color7, v7[17], v7[49], v7[113], v7[81]));
    faces.push(new Face(color7, v7[18], v7[19], v7[23], v7[22]));
    faces.push(new Face(color7, v7[18], v7[19], v7[27], v7[26]));
    faces.push(new Face(color7, v7[18], v7[19], v7[51], v7[50]));
    faces.push(new Face(color7, v7[18], v7[19], v7[83], v7[82]));
    faces.push(new Face(color7, v7[18], v7[22], v7[30], v7[26]));
    faces.push(new Face(color7, v7[18], v7[22], v7[54], v7[50]));
    faces.push(new Face(color7, v7[18], v7[22], v7[86], v7[82]));
    faces.push(new Face(color7, v7[18], v7[26], v7[58], v7[50]));
    faces.push(new Face(color7, v7[18], v7[26], v7[90], v7[82]));
    faces.push(new Face(color7, v7[18], v7[50], v7[114], v7[82]));
    faces.push(new Face(color7, v7[19], v7[23], v7[31], v7[27]));
    faces.push(new Face(color7, v7[19], v7[23], v7[55], v7[51]));
    faces.push(new Face(color7, v7[19], v7[23], v7[87], v7[83]));
    faces.push(new Face(color7, v7[19], v7[27], v7[59], v7[51]));
    faces.push(new Face(color7, v7[19], v7[27], v7[91], v7[83]));
    faces.push(new Face(color7, v7[19], v7[51], v7[115], v7[83]));
    faces.push(new Face(color7, v7[20], v7[21], v7[23], v7[22]));
    faces.push(new Face(color7, v7[20], v7[21], v7[29], v7[28]));
    faces.push(new Face(color7, v7[20], v7[21], v7[53], v7[52]));
    faces.push(new Face(color7, v7[20], v7[21], v7[85], v7[84]));
    faces.push(new Face(color7, v7[20], v7[22], v7[30], v7[28]));
    faces.push(new Face(color7, v7[20], v7[22], v7[54], v7[52]));
    faces.push(new Face(color7, v7[20], v7[22], v7[86], v7[84]));
    faces.push(new Face(color7, v7[20], v7[28], v7[60], v7[52]));
    faces.push(new Face(color7, v7[20], v7[28], v7[92], v7[84]));
    faces.push(new Face(color7, v7[20], v7[52], v7[116], v7[84]));
    faces.push(new Face(color7, v7[21], v7[23], v7[31], v7[29]));
    faces.push(new Face(color7, v7[21], v7[23], v7[55], v7[53]));
    faces.push(new Face(color7, v7[21], v7[23], v7[87], v7[85]));
    faces.push(new Face(color7, v7[21], v7[29], v7[61], v7[53]));
    faces.push(new Face(color7, v7[21], v7[29], v7[93], v7[85]));
    faces.push(new Face(color7, v7[21], v7[53], v7[117], v7[85]));
    faces.push(new Face(color7, v7[22], v7[23], v7[31], v7[30]));
    faces.push(new Face(color7, v7[22], v7[23], v7[55], v7[54]));
    faces.push(new Face(color7, v7[22], v7[23], v7[87], v7[86]));
    faces.push(new Face(color7, v7[22], v7[30], v7[62], v7[54]));
    faces.push(new Face(color7, v7[22], v7[30], v7[94], v7[86]));
    faces.push(new Face(color7, v7[22], v7[54], v7[118], v7[86]));
    faces.push(new Face(color7, v7[23], v7[31], v7[63], v7[55]));
    faces.push(new Face(color7, v7[23], v7[31], v7[95], v7[87]));
    faces.push(new Face(color7, v7[23], v7[55], v7[119], v7[87]));
    faces.push(new Face(color7, v7[24], v7[25], v7[27], v7[26]));
    faces.push(new Face(color7, v7[24], v7[25], v7[29], v7[28]));
    faces.push(new Face(color7, v7[24], v7[25], v7[57], v7[56]));
    faces.push(new Face(color7, v7[24], v7[25], v7[89], v7[88]));
    faces.push(new Face(color7, v7[24], v7[26], v7[30], v7[28]));
    faces.push(new Face(color7, v7[24], v7[26], v7[58], v7[56]));
    faces.push(new Face(color7, v7[24], v7[26], v7[90], v7[88]));
    faces.push(new Face(color7, v7[24], v7[28], v7[60], v7[56]));
    faces.push(new Face(color7, v7[24], v7[28], v7[92], v7[88]));
    faces.push(new Face(color7, v7[24], v7[56], v7[120], v7[88]));
    faces.push(new Face(color7, v7[25], v7[27], v7[31], v7[29]));
    faces.push(new Face(color7, v7[25], v7[27], v7[59], v7[57]));
    faces.push(new Face(color7, v7[25], v7[27], v7[91], v7[89]));
    faces.push(new Face(color7, v7[25], v7[29], v7[61], v7[57]));
    faces.push(new Face(color7, v7[25], v7[29], v7[93], v7[89]));
    faces.push(new Face(color7, v7[25], v7[57], v7[121], v7[89]));
    faces.push(new Face(color7, v7[26], v7[27], v7[31], v7[30]));
    faces.push(new Face(color7, v7[26], v7[27], v7[59], v7[58]));
    faces.push(new Face(color7, v7[26], v7[27], v7[91], v7[90]));
    faces.push(new Face(color7, v7[26], v7[30], v7[62], v7[58]));
    faces.push(new Face(color7, v7[26], v7[30], v7[94], v7[90]));
    faces.push(new Face(color7, v7[26], v7[58], v7[122], v7[90]));
    faces.push(new Face(color7, v7[27], v7[31], v7[63], v7[59]));
    faces.push(new Face(color7, v7[27], v7[31], v7[95], v7[91]));
    faces.push(new Face(color7, v7[27], v7[59], v7[123], v7[91]));
    faces.push(new Face(color7, v7[28], v7[29], v7[31], v7[30]));
    faces.push(new Face(color7, v7[28], v7[29], v7[61], v7[60]));
    faces.push(new Face(color7, v7[28], v7[29], v7[93], v7[92]));
    faces.push(new Face(color7, v7[28], v7[30], v7[62], v7[60]));
    faces.push(new Face(color7, v7[28], v7[30], v7[94], v7[92]));
    faces.push(new Face(color7, v7[28], v7[60], v7[124], v7[92]));
    faces.push(new Face(color7, v7[29], v7[31], v7[63], v7[61]));
    faces.push(new Face(color7, v7[29], v7[31], v7[95], v7[93]));
    faces.push(new Face(color7, v7[29], v7[61], v7[125], v7[93]));
    faces.push(new Face(color7, v7[30], v7[31], v7[63], v7[62]));
    faces.push(new Face(color7, v7[30], v7[31], v7[95], v7[94]));
    faces.push(new Face(color7, v7[30], v7[62], v7[126], v7[94]));
    faces.push(new Face(color7, v7[31], v7[63], v7[127], v7[95]));
    faces.push(new Face(color7, v7[32], v7[33], v7[35], v7[34]));
    faces.push(new Face(color7, v7[32], v7[33], v7[37], v7[36]));
    faces.push(new Face(color7, v7[32], v7[33], v7[41], v7[40]));
    faces.push(new Face(color7, v7[32], v7[33], v7[49], v7[48]));
    faces.push(new Face(color7, v7[32], v7[33], v7[97], v7[96]));
    faces.push(new Face(color7, v7[32], v7[34], v7[38], v7[36]));
    faces.push(new Face(color7, v7[32], v7[34], v7[42], v7[40]));
    faces.push(new Face(color7, v7[32], v7[34], v7[50], v7[48]));
    faces.push(new Face(color7, v7[32], v7[34], v7[98], v7[96]));
    faces.push(new Face(color7, v7[32], v7[36], v7[44], v7[40]));
    faces.push(new Face(color7, v7[32], v7[36], v7[52], v7[48]));
    faces.push(new Face(color7, v7[32], v7[36], v7[100], v7[96]));
    faces.push(new Face(color7, v7[32], v7[40], v7[56], v7[48]));
    faces.push(new Face(color7, v7[32], v7[40], v7[104], v7[96]));
    faces.push(new Face(color7, v7[32], v7[48], v7[112], v7[96]));
    faces.push(new Face(color7, v7[33], v7[35], v7[39], v7[37]));
    faces.push(new Face(color7, v7[33], v7[35], v7[43], v7[41]));
    faces.push(new Face(color7, v7[33], v7[35], v7[51], v7[49]));
    faces.push(new Face(color7, v7[33], v7[35], v7[99], v7[97]));
    faces.push(new Face(color7, v7[33], v7[37], v7[45], v7[41]));
    faces.push(new Face(color7, v7[33], v7[37], v7[53], v7[49]));
    faces.push(new Face(color7, v7[33], v7[37], v7[101], v7[97]));
    faces.push(new Face(color7, v7[33], v7[41], v7[57], v7[49]));
    faces.push(new Face(color7, v7[33], v7[41], v7[105], v7[97]));
    faces.push(new Face(color7, v7[33], v7[49], v7[113], v7[97]));
    faces.push(new Face(color7, v7[34], v7[35], v7[39], v7[38]));
    faces.push(new Face(color7, v7[34], v7[35], v7[43], v7[42]));
    faces.push(new Face(color7, v7[34], v7[35], v7[51], v7[50]));
    faces.push(new Face(color7, v7[34], v7[35], v7[99], v7[98]));
    faces.push(new Face(color7, v7[34], v7[38], v7[46], v7[42]));
    faces.push(new Face(color7, v7[34], v7[38], v7[54], v7[50]));
    faces.push(new Face(color7, v7[34], v7[38], v7[102], v7[98]));
    faces.push(new Face(color7, v7[34], v7[42], v7[58], v7[50]));
    faces.push(new Face(color7, v7[34], v7[42], v7[106], v7[98]));
    faces.push(new Face(color7, v7[34], v7[50], v7[114], v7[98]));
    faces.push(new Face(color7, v7[35], v7[39], v7[47], v7[43]));
    faces.push(new Face(color7, v7[35], v7[39], v7[55], v7[51]));
    faces.push(new Face(color7, v7[35], v7[39], v7[103], v7[99]));
    faces.push(new Face(color7, v7[35], v7[43], v7[59], v7[51]));
    faces.push(new Face(color7, v7[35], v7[43], v7[107], v7[99]));
    faces.push(new Face(color7, v7[35], v7[51], v7[115], v7[99]));
    faces.push(new Face(color7, v7[36], v7[37], v7[39], v7[38]));
    faces.push(new Face(color7, v7[36], v7[37], v7[45], v7[44]));
    faces.push(new Face(color7, v7[36], v7[37], v7[53], v7[52]));
    faces.push(new Face(color7, v7[36], v7[37], v7[101], v7[100]));
    faces.push(new Face(color7, v7[36], v7[38], v7[46], v7[44]));
    faces.push(new Face(color7, v7[36], v7[38], v7[54], v7[52]));
    faces.push(new Face(color7, v7[36], v7[38], v7[102], v7[100]));
    faces.push(new Face(color7, v7[36], v7[44], v7[60], v7[52]));
    faces.push(new Face(color7, v7[36], v7[44], v7[108], v7[100]));
    faces.push(new Face(color7, v7[36], v7[52], v7[116], v7[100]));
    faces.push(new Face(color7, v7[37], v7[39], v7[47], v7[45]));
    faces.push(new Face(color7, v7[37], v7[39], v7[55], v7[53]));
    faces.push(new Face(color7, v7[37], v7[39], v7[103], v7[101]));
    faces.push(new Face(color7, v7[37], v7[45], v7[61], v7[53]));
    faces.push(new Face(color7, v7[37], v7[45], v7[109], v7[101]));
    faces.push(new Face(color7, v7[37], v7[53], v7[117], v7[101]));
    faces.push(new Face(color7, v7[38], v7[39], v7[47], v7[46]));
    faces.push(new Face(color7, v7[38], v7[39], v7[55], v7[54]));
    faces.push(new Face(color7, v7[38], v7[39], v7[103], v7[102]));
    faces.push(new Face(color7, v7[38], v7[46], v7[62], v7[54]));
    faces.push(new Face(color7, v7[38], v7[46], v7[110], v7[102]));
    faces.push(new Face(color7, v7[38], v7[54], v7[118], v7[102]));
    faces.push(new Face(color7, v7[39], v7[47], v7[63], v7[55]));
    faces.push(new Face(color7, v7[39], v7[47], v7[111], v7[103]));
    faces.push(new Face(color7, v7[39], v7[55], v7[119], v7[103]));
    faces.push(new Face(color7, v7[40], v7[41], v7[43], v7[42]));
    faces.push(new Face(color7, v7[40], v7[41], v7[45], v7[44]));
    faces.push(new Face(color7, v7[40], v7[41], v7[57], v7[56]));
    faces.push(new Face(color7, v7[40], v7[41], v7[105], v7[104]));
    faces.push(new Face(color7, v7[40], v7[42], v7[46], v7[44]));
    faces.push(new Face(color7, v7[40], v7[42], v7[58], v7[56]));
    faces.push(new Face(color7, v7[40], v7[42], v7[106], v7[104]));
    faces.push(new Face(color7, v7[40], v7[44], v7[60], v7[56]));
    faces.push(new Face(color7, v7[40], v7[44], v7[108], v7[104]));
    faces.push(new Face(color7, v7[40], v7[56], v7[120], v7[104]));
    faces.push(new Face(color7, v7[41], v7[43], v7[47], v7[45]));
    faces.push(new Face(color7, v7[41], v7[43], v7[59], v7[57]));
    faces.push(new Face(color7, v7[41], v7[43], v7[107], v7[105]));
    faces.push(new Face(color7, v7[41], v7[45], v7[61], v7[57]));
    faces.push(new Face(color7, v7[41], v7[45], v7[109], v7[105]));
    faces.push(new Face(color7, v7[41], v7[57], v7[121], v7[105]));
    faces.push(new Face(color7, v7[42], v7[43], v7[47], v7[46]));
    faces.push(new Face(color7, v7[42], v7[43], v7[59], v7[58]));
    faces.push(new Face(color7, v7[42], v7[43], v7[107], v7[106]));
    faces.push(new Face(color7, v7[42], v7[46], v7[62], v7[58]));
    faces.push(new Face(color7, v7[42], v7[46], v7[110], v7[106]));
    faces.push(new Face(color7, v7[42], v7[58], v7[122], v7[106]));
    faces.push(new Face(color7, v7[43], v7[47], v7[63], v7[59]));
    faces.push(new Face(color7, v7[43], v7[47], v7[111], v7[107]));
    faces.push(new Face(color7, v7[43], v7[59], v7[123], v7[107]));
    faces.push(new Face(color7, v7[44], v7[45], v7[47], v7[46]));
    faces.push(new Face(color7, v7[44], v7[45], v7[61], v7[60]));
    faces.push(new Face(color7, v7[44], v7[45], v7[109], v7[108]));
    faces.push(new Face(color7, v7[44], v7[46], v7[62], v7[60]));
    faces.push(new Face(color7, v7[44], v7[46], v7[110], v7[108]));
    faces.push(new Face(color7, v7[44], v7[60], v7[124], v7[108]));
    faces.push(new Face(color7, v7[45], v7[47], v7[63], v7[61]));
    faces.push(new Face(color7, v7[45], v7[47], v7[111], v7[109]));
    faces.push(new Face(color7, v7[45], v7[61], v7[125], v7[109]));
    faces.push(new Face(color7, v7[46], v7[47], v7[63], v7[62]));
    faces.push(new Face(color7, v7[46], v7[47], v7[111], v7[110]));
    faces.push(new Face(color7, v7[46], v7[62], v7[126], v7[110]));
    faces.push(new Face(color7, v7[47], v7[63], v7[127], v7[111]));
    faces.push(new Face(color7, v7[48], v7[49], v7[51], v7[50]));
    faces.push(new Face(color7, v7[48], v7[49], v7[53], v7[52]));
    faces.push(new Face(color7, v7[48], v7[49], v7[57], v7[56]));
    faces.push(new Face(color7, v7[48], v7[49], v7[113], v7[112]));
    faces.push(new Face(color7, v7[48], v7[50], v7[54], v7[52]));
    faces.push(new Face(color7, v7[48], v7[50], v7[58], v7[56]));
    faces.push(new Face(color7, v7[48], v7[50], v7[114], v7[112]));
    faces.push(new Face(color7, v7[48], v7[52], v7[60], v7[56]));
    faces.push(new Face(color7, v7[48], v7[52], v7[116], v7[112]));
    faces.push(new Face(color7, v7[48], v7[56], v7[120], v7[112]));
    faces.push(new Face(color7, v7[49], v7[51], v7[55], v7[53]));
    faces.push(new Face(color7, v7[49], v7[51], v7[59], v7[57]));
    faces.push(new Face(color7, v7[49], v7[51], v7[115], v7[113]));
    faces.push(new Face(color7, v7[49], v7[53], v7[61], v7[57]));
    faces.push(new Face(color7, v7[49], v7[53], v7[117], v7[113]));
    faces.push(new Face(color7, v7[49], v7[57], v7[121], v7[113]));
    faces.push(new Face(color7, v7[50], v7[51], v7[55], v7[54]));
    faces.push(new Face(color7, v7[50], v7[51], v7[59], v7[58]));
    faces.push(new Face(color7, v7[50], v7[51], v7[115], v7[114]));
    faces.push(new Face(color7, v7[50], v7[54], v7[62], v7[58]));
    faces.push(new Face(color7, v7[50], v7[54], v7[118], v7[114]));
    faces.push(new Face(color7, v7[50], v7[58], v7[122], v7[114]));
    faces.push(new Face(color7, v7[51], v7[55], v7[63], v7[59]));
    faces.push(new Face(color7, v7[51], v7[55], v7[119], v7[115]));
    faces.push(new Face(color7, v7[51], v7[59], v7[123], v7[115]));
    faces.push(new Face(color7, v7[52], v7[53], v7[55], v7[54]));
    faces.push(new Face(color7, v7[52], v7[53], v7[61], v7[60]));
    faces.push(new Face(color7, v7[52], v7[53], v7[117], v7[116]));
    faces.push(new Face(color7, v7[52], v7[54], v7[62], v7[60]));
    faces.push(new Face(color7, v7[52], v7[54], v7[118], v7[116]));
    faces.push(new Face(color7, v7[52], v7[60], v7[124], v7[116]));
    faces.push(new Face(color7, v7[53], v7[55], v7[63], v7[61]));
    faces.push(new Face(color7, v7[53], v7[55], v7[119], v7[117]));
    faces.push(new Face(color7, v7[53], v7[61], v7[125], v7[117]));
    faces.push(new Face(color7, v7[54], v7[55], v7[63], v7[62]));
    faces.push(new Face(color7, v7[54], v7[55], v7[119], v7[118]));
    faces.push(new Face(color7, v7[54], v7[62], v7[126], v7[118]));
    faces.push(new Face(color7, v7[55], v7[63], v7[127], v7[119]));
    faces.push(new Face(color7, v7[56], v7[57], v7[59], v7[58]));
    faces.push(new Face(color7, v7[56], v7[57], v7[61], v7[60]));
    faces.push(new Face(color7, v7[56], v7[57], v7[121], v7[120]));
    faces.push(new Face(color7, v7[56], v7[58], v7[62], v7[60]));
    faces.push(new Face(color7, v7[56], v7[58], v7[122], v7[120]));
    faces.push(new Face(color7, v7[56], v7[60], v7[124], v7[120]));
    faces.push(new Face(color7, v7[57], v7[59], v7[63], v7[61]));
    faces.push(new Face(color7, v7[57], v7[59], v7[123], v7[121]));
    faces.push(new Face(color7, v7[57], v7[61], v7[125], v7[121]));
    faces.push(new Face(color7, v7[58], v7[59], v7[63], v7[62]));
    faces.push(new Face(color7, v7[58], v7[59], v7[123], v7[122]));
    faces.push(new Face(color7, v7[58], v7[62], v7[126], v7[122]));
    faces.push(new Face(color7, v7[59], v7[63], v7[127], v7[123]));
    faces.push(new Face(color7, v7[60], v7[61], v7[63], v7[62]));
    faces.push(new Face(color7, v7[60], v7[61], v7[125], v7[124]));
    faces.push(new Face(color7, v7[60], v7[62], v7[126], v7[124]));
    faces.push(new Face(color7, v7[61], v7[63], v7[127], v7[125]));
    faces.push(new Face(color7, v7[62], v7[63], v7[127], v7[126]));
    faces.push(new Face(color7, v7[64], v7[65], v7[67], v7[66]));
    faces.push(new Face(color7, v7[64], v7[65], v7[69], v7[68]));
    faces.push(new Face(color7, v7[64], v7[65], v7[73], v7[72]));
    faces.push(new Face(color7, v7[64], v7[65], v7[81], v7[80]));
    faces.push(new Face(color7, v7[64], v7[65], v7[97], v7[96]));
    faces.push(new Face(color7, v7[64], v7[66], v7[70], v7[68]));
    faces.push(new Face(color7, v7[64], v7[66], v7[74], v7[72]));
    faces.push(new Face(color7, v7[64], v7[66], v7[82], v7[80]));
    faces.push(new Face(color7, v7[64], v7[66], v7[98], v7[96]));
    faces.push(new Face(color7, v7[64], v7[68], v7[76], v7[72]));
    faces.push(new Face(color7, v7[64], v7[68], v7[84], v7[80]));
    faces.push(new Face(color7, v7[64], v7[68], v7[100], v7[96]));
    faces.push(new Face(color7, v7[64], v7[72], v7[88], v7[80]));
    faces.push(new Face(color7, v7[64], v7[72], v7[104], v7[96]));
    faces.push(new Face(color7, v7[64], v7[80], v7[112], v7[96]));
    faces.push(new Face(color7, v7[65], v7[67], v7[71], v7[69]));
    faces.push(new Face(color7, v7[65], v7[67], v7[75], v7[73]));
    faces.push(new Face(color7, v7[65], v7[67], v7[83], v7[81]));
    faces.push(new Face(color7, v7[65], v7[67], v7[99], v7[97]));
    faces.push(new Face(color7, v7[65], v7[69], v7[77], v7[73]));
    faces.push(new Face(color7, v7[65], v7[69], v7[85], v7[81]));
    faces.push(new Face(color7, v7[65], v7[69], v7[101], v7[97]));
    faces.push(new Face(color7, v7[65], v7[73], v7[89], v7[81]));
    faces.push(new Face(color7, v7[65], v7[73], v7[105], v7[97]));
    faces.push(new Face(color7, v7[65], v7[81], v7[113], v7[97]));
    faces.push(new Face(color7, v7[66], v7[67], v7[71], v7[70]));
    faces.push(new Face(color7, v7[66], v7[67], v7[75], v7[74]));
    faces.push(new Face(color7, v7[66], v7[67], v7[83], v7[82]));
    faces.push(new Face(color7, v7[66], v7[67], v7[99], v7[98]));
    faces.push(new Face(color7, v7[66], v7[70], v7[78], v7[74]));
    faces.push(new Face(color7, v7[66], v7[70], v7[86], v7[82]));
    faces.push(new Face(color7, v7[66], v7[70], v7[102], v7[98]));
    faces.push(new Face(color7, v7[66], v7[74], v7[90], v7[82]));
    faces.push(new Face(color7, v7[66], v7[74], v7[106], v7[98]));
    faces.push(new Face(color7, v7[66], v7[82], v7[114], v7[98]));
    faces.push(new Face(color7, v7[67], v7[71], v7[79], v7[75]));
    faces.push(new Face(color7, v7[67], v7[71], v7[87], v7[83]));
    faces.push(new Face(color7, v7[67], v7[71], v7[103], v7[99]));
    faces.push(new Face(color7, v7[67], v7[75], v7[91], v7[83]));
    faces.push(new Face(color7, v7[67], v7[75], v7[107], v7[99]));
    faces.push(new Face(color7, v7[67], v7[83], v7[115], v7[99]));
    faces.push(new Face(color7, v7[68], v7[69], v7[71], v7[70]));
    faces.push(new Face(color7, v7[68], v7[69], v7[77], v7[76]));
    faces.push(new Face(color7, v7[68], v7[69], v7[85], v7[84]));
    faces.push(new Face(color7, v7[68], v7[69], v7[101], v7[100]));
    faces.push(new Face(color7, v7[68], v7[70], v7[78], v7[76]));
    faces.push(new Face(color7, v7[68], v7[70], v7[86], v7[84]));
    faces.push(new Face(color7, v7[68], v7[70], v7[102], v7[100]));
    faces.push(new Face(color7, v7[68], v7[76], v7[92], v7[84]));
    faces.push(new Face(color7, v7[68], v7[76], v7[108], v7[100]));
    faces.push(new Face(color7, v7[68], v7[84], v7[116], v7[100]));
    faces.push(new Face(color7, v7[69], v7[71], v7[79], v7[77]));
    faces.push(new Face(color7, v7[69], v7[71], v7[87], v7[85]));
    faces.push(new Face(color7, v7[69], v7[71], v7[103], v7[101]));
    faces.push(new Face(color7, v7[69], v7[77], v7[93], v7[85]));
    faces.push(new Face(color7, v7[69], v7[77], v7[109], v7[101]));
    faces.push(new Face(color7, v7[69], v7[85], v7[117], v7[101]));
    faces.push(new Face(color7, v7[70], v7[71], v7[79], v7[78]));
    faces.push(new Face(color7, v7[70], v7[71], v7[87], v7[86]));
    faces.push(new Face(color7, v7[70], v7[71], v7[103], v7[102]));
    faces.push(new Face(color7, v7[70], v7[78], v7[94], v7[86]));
    faces.push(new Face(color7, v7[70], v7[78], v7[110], v7[102]));
    faces.push(new Face(color7, v7[70], v7[86], v7[118], v7[102]));
    faces.push(new Face(color7, v7[71], v7[79], v7[95], v7[87]));
    faces.push(new Face(color7, v7[71], v7[79], v7[111], v7[103]));
    faces.push(new Face(color7, v7[71], v7[87], v7[119], v7[103]));
    faces.push(new Face(color7, v7[72], v7[73], v7[75], v7[74]));
    faces.push(new Face(color7, v7[72], v7[73], v7[77], v7[76]));
    faces.push(new Face(color7, v7[72], v7[73], v7[89], v7[88]));
    faces.push(new Face(color7, v7[72], v7[73], v7[105], v7[104]));
    faces.push(new Face(color7, v7[72], v7[74], v7[78], v7[76]));
    faces.push(new Face(color7, v7[72], v7[74], v7[90], v7[88]));
    faces.push(new Face(color7, v7[72], v7[74], v7[106], v7[104]));
    faces.push(new Face(color7, v7[72], v7[76], v7[92], v7[88]));
    faces.push(new Face(color7, v7[72], v7[76], v7[108], v7[104]));
    faces.push(new Face(color7, v7[72], v7[88], v7[120], v7[104]));
    faces.push(new Face(color7, v7[73], v7[75], v7[79], v7[77]));
    faces.push(new Face(color7, v7[73], v7[75], v7[91], v7[89]));
    faces.push(new Face(color7, v7[73], v7[75], v7[107], v7[105]));
    faces.push(new Face(color7, v7[73], v7[77], v7[93], v7[89]));
    faces.push(new Face(color7, v7[73], v7[77], v7[109], v7[105]));
    faces.push(new Face(color7, v7[73], v7[89], v7[121], v7[105]));
    faces.push(new Face(color7, v7[74], v7[75], v7[79], v7[78]));
    faces.push(new Face(color7, v7[74], v7[75], v7[91], v7[90]));
    faces.push(new Face(color7, v7[74], v7[75], v7[107], v7[106]));
    faces.push(new Face(color7, v7[74], v7[78], v7[94], v7[90]));
    faces.push(new Face(color7, v7[74], v7[78], v7[110], v7[106]));
    faces.push(new Face(color7, v7[74], v7[90], v7[122], v7[106]));
    faces.push(new Face(color7, v7[75], v7[79], v7[95], v7[91]));
    faces.push(new Face(color7, v7[75], v7[79], v7[111], v7[107]));
    faces.push(new Face(color7, v7[75], v7[91], v7[123], v7[107]));
    faces.push(new Face(color7, v7[76], v7[77], v7[79], v7[78]));
    faces.push(new Face(color7, v7[76], v7[77], v7[93], v7[92]));
    faces.push(new Face(color7, v7[76], v7[77], v7[109], v7[108]));
    faces.push(new Face(color7, v7[76], v7[78], v7[94], v7[92]));
    faces.push(new Face(color7, v7[76], v7[78], v7[110], v7[108]));
    faces.push(new Face(color7, v7[76], v7[92], v7[124], v7[108]));
    faces.push(new Face(color7, v7[77], v7[79], v7[95], v7[93]));
    faces.push(new Face(color7, v7[77], v7[79], v7[111], v7[109]));
    faces.push(new Face(color7, v7[77], v7[93], v7[125], v7[109]));
    faces.push(new Face(color7, v7[78], v7[79], v7[95], v7[94]));
    faces.push(new Face(color7, v7[78], v7[79], v7[111], v7[110]));
    faces.push(new Face(color7, v7[78], v7[94], v7[126], v7[110]));
    faces.push(new Face(color7, v7[79], v7[95], v7[127], v7[111]));
    faces.push(new Face(color7, v7[80], v7[81], v7[83], v7[82]));
    faces.push(new Face(color7, v7[80], v7[81], v7[85], v7[84]));
    faces.push(new Face(color7, v7[80], v7[81], v7[89], v7[88]));
    faces.push(new Face(color7, v7[80], v7[81], v7[113], v7[112]));
    faces.push(new Face(color7, v7[80], v7[82], v7[86], v7[84]));
    faces.push(new Face(color7, v7[80], v7[82], v7[90], v7[88]));
    faces.push(new Face(color7, v7[80], v7[82], v7[114], v7[112]));
    faces.push(new Face(color7, v7[80], v7[84], v7[92], v7[88]));
    faces.push(new Face(color7, v7[80], v7[84], v7[116], v7[112]));
    faces.push(new Face(color7, v7[80], v7[88], v7[120], v7[112]));
    faces.push(new Face(color7, v7[81], v7[83], v7[87], v7[85]));
    faces.push(new Face(color7, v7[81], v7[83], v7[91], v7[89]));
    faces.push(new Face(color7, v7[81], v7[83], v7[115], v7[113]));
    faces.push(new Face(color7, v7[81], v7[85], v7[93], v7[89]));
    faces.push(new Face(color7, v7[81], v7[85], v7[117], v7[113]));
    faces.push(new Face(color7, v7[81], v7[89], v7[121], v7[113]));
    faces.push(new Face(color7, v7[82], v7[83], v7[87], v7[86]));
    faces.push(new Face(color7, v7[82], v7[83], v7[91], v7[90]));
    faces.push(new Face(color7, v7[82], v7[83], v7[115], v7[114]));
    faces.push(new Face(color7, v7[82], v7[86], v7[94], v7[90]));
    faces.push(new Face(color7, v7[82], v7[86], v7[118], v7[114]));
    faces.push(new Face(color7, v7[82], v7[90], v7[122], v7[114]));
    faces.push(new Face(color7, v7[83], v7[87], v7[95], v7[91]));
    faces.push(new Face(color7, v7[83], v7[87], v7[119], v7[115]));
    faces.push(new Face(color7, v7[83], v7[91], v7[123], v7[115]));
    faces.push(new Face(color7, v7[84], v7[85], v7[87], v7[86]));
    faces.push(new Face(color7, v7[84], v7[85], v7[93], v7[92]));
    faces.push(new Face(color7, v7[84], v7[85], v7[117], v7[116]));
    faces.push(new Face(color7, v7[84], v7[86], v7[94], v7[92]));
    faces.push(new Face(color7, v7[84], v7[86], v7[118], v7[116]));
    faces.push(new Face(color7, v7[84], v7[92], v7[124], v7[116]));
    faces.push(new Face(color7, v7[85], v7[87], v7[95], v7[93]));
    faces.push(new Face(color7, v7[85], v7[87], v7[119], v7[117]));
    faces.push(new Face(color7, v7[85], v7[93], v7[125], v7[117]));
    faces.push(new Face(color7, v7[86], v7[87], v7[95], v7[94]));
    faces.push(new Face(color7, v7[86], v7[87], v7[119], v7[118]));
    faces.push(new Face(color7, v7[86], v7[94], v7[126], v7[118]));
    faces.push(new Face(color7, v7[87], v7[95], v7[127], v7[119]));
    faces.push(new Face(color7, v7[88], v7[89], v7[91], v7[90]));
    faces.push(new Face(color7, v7[88], v7[89], v7[93], v7[92]));
    faces.push(new Face(color7, v7[88], v7[89], v7[121], v7[120]));
    faces.push(new Face(color7, v7[88], v7[90], v7[94], v7[92]));
    faces.push(new Face(color7, v7[88], v7[90], v7[122], v7[120]));
    faces.push(new Face(color7, v7[88], v7[92], v7[124], v7[120]));
    faces.push(new Face(color7, v7[89], v7[91], v7[95], v7[93]));
    faces.push(new Face(color7, v7[89], v7[91], v7[123], v7[121]));
    faces.push(new Face(color7, v7[89], v7[93], v7[125], v7[121]));
    faces.push(new Face(color7, v7[90], v7[91], v7[95], v7[94]));
    faces.push(new Face(color7, v7[90], v7[91], v7[123], v7[122]));
    faces.push(new Face(color7, v7[90], v7[94], v7[126], v7[122]));
    faces.push(new Face(color7, v7[91], v7[95], v7[127], v7[123]));
    faces.push(new Face(color7, v7[92], v7[93], v7[95], v7[94]));
    faces.push(new Face(color7, v7[92], v7[93], v7[125], v7[124]));
    faces.push(new Face(color7, v7[92], v7[94], v7[126], v7[124]));
    faces.push(new Face(color7, v7[93], v7[95], v7[127], v7[125]));
    faces.push(new Face(color7, v7[94], v7[95], v7[127], v7[126]));
    faces.push(new Face(color7, v7[96], v7[97], v7[99], v7[98]));
    faces.push(new Face(color7, v7[96], v7[97], v7[101], v7[100]));
    faces.push(new Face(color7, v7[96], v7[97], v7[105], v7[104]));
    faces.push(new Face(color7, v7[96], v7[97], v7[113], v7[112]));
    faces.push(new Face(color7, v7[96], v7[98], v7[102], v7[100]));
    faces.push(new Face(color7, v7[96], v7[98], v7[106], v7[104]));
    faces.push(new Face(color7, v7[96], v7[98], v7[114], v7[112]));
    faces.push(new Face(color7, v7[96], v7[100], v7[108], v7[104]));
    faces.push(new Face(color7, v7[96], v7[100], v7[116], v7[112]));
    faces.push(new Face(color7, v7[96], v7[104], v7[120], v7[112]));
    faces.push(new Face(color7, v7[97], v7[99], v7[103], v7[101]));
    faces.push(new Face(color7, v7[97], v7[99], v7[107], v7[105]));
    faces.push(new Face(color7, v7[97], v7[99], v7[115], v7[113]));
    faces.push(new Face(color7, v7[97], v7[101], v7[109], v7[105]));
    faces.push(new Face(color7, v7[97], v7[101], v7[117], v7[113]));
    faces.push(new Face(color7, v7[97], v7[105], v7[121], v7[113]));
    faces.push(new Face(color7, v7[98], v7[99], v7[103], v7[102]));
    faces.push(new Face(color7, v7[98], v7[99], v7[107], v7[106]));
    faces.push(new Face(color7, v7[98], v7[99], v7[115], v7[114]));
    faces.push(new Face(color7, v7[98], v7[102], v7[110], v7[106]));
    faces.push(new Face(color7, v7[98], v7[102], v7[118], v7[114]));
    faces.push(new Face(color7, v7[98], v7[106], v7[122], v7[114]));
    faces.push(new Face(color7, v7[99], v7[103], v7[111], v7[107]));
    faces.push(new Face(color7, v7[99], v7[103], v7[119], v7[115]));
    faces.push(new Face(color7, v7[99], v7[107], v7[123], v7[115]));
    faces.push(new Face(color7, v7[100], v7[101], v7[103], v7[102]));
    faces.push(new Face(color7, v7[100], v7[101], v7[109], v7[108]));
    faces.push(new Face(color7, v7[100], v7[101], v7[117], v7[116]));
    faces.push(new Face(color7, v7[100], v7[102], v7[110], v7[108]));
    faces.push(new Face(color7, v7[100], v7[102], v7[118], v7[116]));
    faces.push(new Face(color7, v7[100], v7[108], v7[124], v7[116]));
    faces.push(new Face(color7, v7[101], v7[103], v7[111], v7[109]));
    faces.push(new Face(color7, v7[101], v7[103], v7[119], v7[117]));
    faces.push(new Face(color7, v7[101], v7[109], v7[125], v7[117]));
    faces.push(new Face(color7, v7[102], v7[103], v7[111], v7[110]));
    faces.push(new Face(color7, v7[102], v7[103], v7[119], v7[118]));
    faces.push(new Face(color7, v7[102], v7[110], v7[126], v7[118]));
    faces.push(new Face(color7, v7[103], v7[111], v7[127], v7[119]));
    faces.push(new Face(color7, v7[104], v7[105], v7[107], v7[106]));
    faces.push(new Face(color7, v7[104], v7[105], v7[109], v7[108]));
    faces.push(new Face(color7, v7[104], v7[105], v7[121], v7[120]));
    faces.push(new Face(color7, v7[104], v7[106], v7[110], v7[108]));
    faces.push(new Face(color7, v7[104], v7[106], v7[122], v7[120]));
    faces.push(new Face(color7, v7[104], v7[108], v7[124], v7[120]));
    faces.push(new Face(color7, v7[105], v7[107], v7[111], v7[109]));
    faces.push(new Face(color7, v7[105], v7[107], v7[123], v7[121]));
    faces.push(new Face(color7, v7[105], v7[109], v7[125], v7[121]));
    faces.push(new Face(color7, v7[106], v7[107], v7[111], v7[110]));
    faces.push(new Face(color7, v7[106], v7[107], v7[123], v7[122]));
    faces.push(new Face(color7, v7[106], v7[110], v7[126], v7[122]));
    faces.push(new Face(color7, v7[107], v7[111], v7[127], v7[123]));
    faces.push(new Face(color7, v7[108], v7[109], v7[111], v7[110]));
    faces.push(new Face(color7, v7[108], v7[109], v7[125], v7[124]));
    faces.push(new Face(color7, v7[108], v7[110], v7[126], v7[124]));
    faces.push(new Face(color7, v7[109], v7[111], v7[127], v7[125]));
    faces.push(new Face(color7, v7[110], v7[111], v7[127], v7[126]));
    faces.push(new Face(color7, v7[112], v7[113], v7[115], v7[114]));
    faces.push(new Face(color7, v7[112], v7[113], v7[117], v7[116]));
    faces.push(new Face(color7, v7[112], v7[113], v7[121], v7[120]));
    faces.push(new Face(color7, v7[112], v7[114], v7[118], v7[116]));
    faces.push(new Face(color7, v7[112], v7[114], v7[122], v7[120]));
    faces.push(new Face(color7, v7[112], v7[116], v7[124], v7[120]));
    faces.push(new Face(color7, v7[113], v7[115], v7[119], v7[117]));
    faces.push(new Face(color7, v7[113], v7[115], v7[123], v7[121]));
    faces.push(new Face(color7, v7[113], v7[117], v7[125], v7[121]));
    faces.push(new Face(color7, v7[114], v7[115], v7[119], v7[118]));
    faces.push(new Face(color7, v7[114], v7[115], v7[123], v7[122]));
    faces.push(new Face(color7, v7[114], v7[118], v7[126], v7[122]));
    faces.push(new Face(color7, v7[115], v7[119], v7[127], v7[123]));
    faces.push(new Face(color7, v7[116], v7[117], v7[119], v7[118]));
    faces.push(new Face(color7, v7[116], v7[117], v7[125], v7[124]));
    faces.push(new Face(color7, v7[116], v7[118], v7[126], v7[124]));
    faces.push(new Face(color7, v7[117], v7[119], v7[127], v7[125]));
    faces.push(new Face(color7, v7[118], v7[119], v7[127], v7[126]));
    faces.push(new Face(color7, v7[120], v7[121], v7[123], v7[122]));
    faces.push(new Face(color7, v7[120], v7[121], v7[125], v7[124]));
    faces.push(new Face(color7, v7[120], v7[122], v7[126], v7[124]));
    faces.push(new Face(color7, v7[121], v7[123], v7[127], v7[125]));
    faces.push(new Face(color7, v7[122], v7[123], v7[127], v7[126]));
    faces.push(new Face(color7, v7[124], v7[125], v7[127], v7[126]));
    for (let i = 0; i < v7.length; i++) {
        v7[i].rotate(r);
        v7[i].project();
    }

    v8[0] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v8[1] = new Vertex(w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v8[2] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v8[3] = new Vertex(w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v8[4] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v8[5] = new Vertex(w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v8[6] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v8[7] = new Vertex(w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v8[8] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v8[9] = new Vertex(w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v8[10] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v8[11] = new Vertex(w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v8[12] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v8[13] = new Vertex(w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v8[14] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2);
    v8[15] = new Vertex(w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v8[16] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v8[17] = new Vertex(w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v8[18] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v8[19] = new Vertex(w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v8[20] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v8[21] = new Vertex(w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v8[22] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2);
    v8[23] = new Vertex(w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v8[24] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v8[25] = new Vertex(w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v8[26] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2);
    v8[27] = new Vertex(w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v8[28] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2);
    v8[29] = new Vertex(w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v8[30] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, w/2, w/2, -w/2);
    v8[31] = new Vertex(w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v8[32] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v8[33] = new Vertex(w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v8[34] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v8[35] = new Vertex(w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v8[36] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v8[37] = new Vertex(w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v8[38] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v8[39] = new Vertex(w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v8[40] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v8[41] = new Vertex(w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v8[42] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v8[43] = new Vertex(w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v8[44] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v8[45] = new Vertex(w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v8[46] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, w/2, w/2, -w/2);
    v8[47] = new Vertex(w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v8[48] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v8[49] = new Vertex(w/2+Math.sin(theta)*w, -w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v8[50] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v8[51] = new Vertex(w/2+Math.sin(theta)*w, -w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v8[52] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v8[53] = new Vertex(w/2+Math.sin(theta)*w, -w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v8[54] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, w/2, w/2, -w/2);
    v8[55] = new Vertex(w/2+Math.sin(theta)*w, -w/2, w/2, w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v8[56] = new Vertex(w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v8[57] = new Vertex(w/2+Math.sin(theta)*w, -w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v8[58] = new Vertex(w/2, -w/2, w/2, w/2, w/2, -w/2, w/2, -w/2);
    v8[59] = new Vertex(w/2+Math.sin(theta)*w, -w/2, w/2, w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v8[60] = new Vertex(w/2, -w/2, w/2, w/2, w/2, w/2, -w/2, -w/2);
    v8[61] = new Vertex(w/2+Math.sin(theta)*w, -w/2, w/2, w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v8[62] = new Vertex(w/2, -w/2, w/2, w/2, w/2, w/2, w/2, -w/2);
    v8[63] = new Vertex(w/2+Math.sin(theta)*w, -w/2, w/2, w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v8[64] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v8[65] = new Vertex(w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v8[66] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v8[67] = new Vertex(w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v8[68] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v8[69] = new Vertex(w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v8[70] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v8[71] = new Vertex(w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v8[72] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v8[73] = new Vertex(w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v8[74] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v8[75] = new Vertex(w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v8[76] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v8[77] = new Vertex(w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v8[78] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2);
    v8[79] = new Vertex(w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v8[80] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v8[81] = new Vertex(w/2+Math.sin(theta)*w, w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v8[82] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v8[83] = new Vertex(w/2+Math.sin(theta)*w, w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v8[84] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v8[85] = new Vertex(w/2+Math.sin(theta)*w, w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v8[86] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2);
    v8[87] = new Vertex(w/2+Math.sin(theta)*w, w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v8[88] = new Vertex(w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v8[89] = new Vertex(w/2+Math.sin(theta)*w, w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v8[90] = new Vertex(w/2, w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2);
    v8[91] = new Vertex(w/2+Math.sin(theta)*w, w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v8[92] = new Vertex(w/2, w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2);
    v8[93] = new Vertex(w/2+Math.sin(theta)*w, w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v8[94] = new Vertex(w/2, w/2, -w/2, w/2, w/2, w/2, w/2, -w/2);
    v8[95] = new Vertex(w/2+Math.sin(theta)*w, w/2, -w/2, w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v8[96] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v8[97] = new Vertex(w/2+Math.sin(theta)*w, w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v8[98] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v8[99] = new Vertex(w/2+Math.sin(theta)*w, w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v8[100] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v8[101] = new Vertex(w/2+Math.sin(theta)*w, w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v8[102] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v8[103] = new Vertex(w/2+Math.sin(theta)*w, w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v8[104] = new Vertex(w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v8[105] = new Vertex(w/2+Math.sin(theta)*w, w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v8[106] = new Vertex(w/2, w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v8[107] = new Vertex(w/2+Math.sin(theta)*w, w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v8[108] = new Vertex(w/2, w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v8[109] = new Vertex(w/2+Math.sin(theta)*w, w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v8[110] = new Vertex(w/2, w/2, w/2, -w/2, w/2, w/2, w/2, -w/2);
    v8[111] = new Vertex(w/2+Math.sin(theta)*w, w/2, w/2, -w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v8[112] = new Vertex(w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v8[113] = new Vertex(w/2+Math.sin(theta)*w, w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v8[114] = new Vertex(w/2, w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v8[115] = new Vertex(w/2+Math.sin(theta)*w, w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v8[116] = new Vertex(w/2, w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v8[117] = new Vertex(w/2+Math.sin(theta)*w, w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v8[118] = new Vertex(w/2, w/2, w/2, w/2, -w/2, w/2, w/2, -w/2);
    v8[119] = new Vertex(w/2+Math.sin(theta)*w, w/2, w/2, w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v8[120] = new Vertex(w/2, w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v8[121] = new Vertex(w/2+Math.sin(theta)*w, w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v8[122] = new Vertex(w/2, w/2, w/2, w/2, w/2, -w/2, w/2, -w/2);
    v8[123] = new Vertex(w/2+Math.sin(theta)*w, w/2, w/2, w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v8[124] = new Vertex(w/2, w/2, w/2, w/2, w/2, w/2, -w/2, -w/2);
    v8[125] = new Vertex(w/2+Math.sin(theta)*w, w/2, w/2, w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v8[126] = new Vertex(w/2, w/2, w/2, w/2, w/2, w/2, w/2, -w/2);
    v8[127] = new Vertex(w/2+Math.sin(theta)*w, w/2, w/2, w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    faces.push(new Face(color8, v8[0], v8[1], v8[3], v8[2]));
    faces.push(new Face(color8, v8[0], v8[1], v8[5], v8[4]));
    faces.push(new Face(color8, v8[0], v8[1], v8[9], v8[8]));
    faces.push(new Face(color8, v8[0], v8[1], v8[17], v8[16]));
    faces.push(new Face(color8, v8[0], v8[1], v8[33], v8[32]));
    faces.push(new Face(color8, v8[0], v8[1], v8[65], v8[64]));
    faces.push(new Face(color8, v8[0], v8[2], v8[6], v8[4]));
    faces.push(new Face(color8, v8[0], v8[2], v8[10], v8[8]));
    faces.push(new Face(color8, v8[0], v8[2], v8[18], v8[16]));
    faces.push(new Face(color8, v8[0], v8[2], v8[34], v8[32]));
    faces.push(new Face(color8, v8[0], v8[2], v8[66], v8[64]));
    faces.push(new Face(color8, v8[0], v8[4], v8[12], v8[8]));
    faces.push(new Face(color8, v8[0], v8[4], v8[20], v8[16]));
    faces.push(new Face(color8, v8[0], v8[4], v8[36], v8[32]));
    faces.push(new Face(color8, v8[0], v8[4], v8[68], v8[64]));
    faces.push(new Face(color8, v8[0], v8[8], v8[24], v8[16]));
    faces.push(new Face(color8, v8[0], v8[8], v8[40], v8[32]));
    faces.push(new Face(color8, v8[0], v8[8], v8[72], v8[64]));
    faces.push(new Face(color8, v8[0], v8[16], v8[48], v8[32]));
    faces.push(new Face(color8, v8[0], v8[16], v8[80], v8[64]));
    faces.push(new Face(color8, v8[0], v8[32], v8[96], v8[64]));
    faces.push(new Face(color8, v8[1], v8[3], v8[7], v8[5]));
    faces.push(new Face(color8, v8[1], v8[3], v8[11], v8[9]));
    faces.push(new Face(color8, v8[1], v8[3], v8[19], v8[17]));
    faces.push(new Face(color8, v8[1], v8[3], v8[35], v8[33]));
    faces.push(new Face(color8, v8[1], v8[3], v8[67], v8[65]));
    faces.push(new Face(color8, v8[1], v8[5], v8[13], v8[9]));
    faces.push(new Face(color8, v8[1], v8[5], v8[21], v8[17]));
    faces.push(new Face(color8, v8[1], v8[5], v8[37], v8[33]));
    faces.push(new Face(color8, v8[1], v8[5], v8[69], v8[65]));
    faces.push(new Face(color8, v8[1], v8[9], v8[25], v8[17]));
    faces.push(new Face(color8, v8[1], v8[9], v8[41], v8[33]));
    faces.push(new Face(color8, v8[1], v8[9], v8[73], v8[65]));
    faces.push(new Face(color8, v8[1], v8[17], v8[49], v8[33]));
    faces.push(new Face(color8, v8[1], v8[17], v8[81], v8[65]));
    faces.push(new Face(color8, v8[1], v8[33], v8[97], v8[65]));
    faces.push(new Face(color8, v8[2], v8[3], v8[7], v8[6]));
    faces.push(new Face(color8, v8[2], v8[3], v8[11], v8[10]));
    faces.push(new Face(color8, v8[2], v8[3], v8[19], v8[18]));
    faces.push(new Face(color8, v8[2], v8[3], v8[35], v8[34]));
    faces.push(new Face(color8, v8[2], v8[3], v8[67], v8[66]));
    faces.push(new Face(color8, v8[2], v8[6], v8[14], v8[10]));
    faces.push(new Face(color8, v8[2], v8[6], v8[22], v8[18]));
    faces.push(new Face(color8, v8[2], v8[6], v8[38], v8[34]));
    faces.push(new Face(color8, v8[2], v8[6], v8[70], v8[66]));
    faces.push(new Face(color8, v8[2], v8[10], v8[26], v8[18]));
    faces.push(new Face(color8, v8[2], v8[10], v8[42], v8[34]));
    faces.push(new Face(color8, v8[2], v8[10], v8[74], v8[66]));
    faces.push(new Face(color8, v8[2], v8[18], v8[50], v8[34]));
    faces.push(new Face(color8, v8[2], v8[18], v8[82], v8[66]));
    faces.push(new Face(color8, v8[2], v8[34], v8[98], v8[66]));
    faces.push(new Face(color8, v8[3], v8[7], v8[15], v8[11]));
    faces.push(new Face(color8, v8[3], v8[7], v8[23], v8[19]));
    faces.push(new Face(color8, v8[3], v8[7], v8[39], v8[35]));
    faces.push(new Face(color8, v8[3], v8[7], v8[71], v8[67]));
    faces.push(new Face(color8, v8[3], v8[11], v8[27], v8[19]));
    faces.push(new Face(color8, v8[3], v8[11], v8[43], v8[35]));
    faces.push(new Face(color8, v8[3], v8[11], v8[75], v8[67]));
    faces.push(new Face(color8, v8[3], v8[19], v8[51], v8[35]));
    faces.push(new Face(color8, v8[3], v8[19], v8[83], v8[67]));
    faces.push(new Face(color8, v8[3], v8[35], v8[99], v8[67]));
    faces.push(new Face(color8, v8[4], v8[5], v8[7], v8[6]));
    faces.push(new Face(color8, v8[4], v8[5], v8[13], v8[12]));
    faces.push(new Face(color8, v8[4], v8[5], v8[21], v8[20]));
    faces.push(new Face(color8, v8[4], v8[5], v8[37], v8[36]));
    faces.push(new Face(color8, v8[4], v8[5], v8[69], v8[68]));
    faces.push(new Face(color8, v8[4], v8[6], v8[14], v8[12]));
    faces.push(new Face(color8, v8[4], v8[6], v8[22], v8[20]));
    faces.push(new Face(color8, v8[4], v8[6], v8[38], v8[36]));
    faces.push(new Face(color8, v8[4], v8[6], v8[70], v8[68]));
    faces.push(new Face(color8, v8[4], v8[12], v8[28], v8[20]));
    faces.push(new Face(color8, v8[4], v8[12], v8[44], v8[36]));
    faces.push(new Face(color8, v8[4], v8[12], v8[76], v8[68]));
    faces.push(new Face(color8, v8[4], v8[20], v8[52], v8[36]));
    faces.push(new Face(color8, v8[4], v8[20], v8[84], v8[68]));
    faces.push(new Face(color8, v8[4], v8[36], v8[100], v8[68]));
    faces.push(new Face(color8, v8[5], v8[7], v8[15], v8[13]));
    faces.push(new Face(color8, v8[5], v8[7], v8[23], v8[21]));
    faces.push(new Face(color8, v8[5], v8[7], v8[39], v8[37]));
    faces.push(new Face(color8, v8[5], v8[7], v8[71], v8[69]));
    faces.push(new Face(color8, v8[5], v8[13], v8[29], v8[21]));
    faces.push(new Face(color8, v8[5], v8[13], v8[45], v8[37]));
    faces.push(new Face(color8, v8[5], v8[13], v8[77], v8[69]));
    faces.push(new Face(color8, v8[5], v8[21], v8[53], v8[37]));
    faces.push(new Face(color8, v8[5], v8[21], v8[85], v8[69]));
    faces.push(new Face(color8, v8[5], v8[37], v8[101], v8[69]));
    faces.push(new Face(color8, v8[6], v8[7], v8[15], v8[14]));
    faces.push(new Face(color8, v8[6], v8[7], v8[23], v8[22]));
    faces.push(new Face(color8, v8[6], v8[7], v8[39], v8[38]));
    faces.push(new Face(color8, v8[6], v8[7], v8[71], v8[70]));
    faces.push(new Face(color8, v8[6], v8[14], v8[30], v8[22]));
    faces.push(new Face(color8, v8[6], v8[14], v8[46], v8[38]));
    faces.push(new Face(color8, v8[6], v8[14], v8[78], v8[70]));
    faces.push(new Face(color8, v8[6], v8[22], v8[54], v8[38]));
    faces.push(new Face(color8, v8[6], v8[22], v8[86], v8[70]));
    faces.push(new Face(color8, v8[6], v8[38], v8[102], v8[70]));
    faces.push(new Face(color8, v8[7], v8[15], v8[31], v8[23]));
    faces.push(new Face(color8, v8[7], v8[15], v8[47], v8[39]));
    faces.push(new Face(color8, v8[7], v8[15], v8[79], v8[71]));
    faces.push(new Face(color8, v8[7], v8[23], v8[55], v8[39]));
    faces.push(new Face(color8, v8[7], v8[23], v8[87], v8[71]));
    faces.push(new Face(color8, v8[7], v8[39], v8[103], v8[71]));
    faces.push(new Face(color8, v8[8], v8[9], v8[11], v8[10]));
    faces.push(new Face(color8, v8[8], v8[9], v8[13], v8[12]));
    faces.push(new Face(color8, v8[8], v8[9], v8[25], v8[24]));
    faces.push(new Face(color8, v8[8], v8[9], v8[41], v8[40]));
    faces.push(new Face(color8, v8[8], v8[9], v8[73], v8[72]));
    faces.push(new Face(color8, v8[8], v8[10], v8[14], v8[12]));
    faces.push(new Face(color8, v8[8], v8[10], v8[26], v8[24]));
    faces.push(new Face(color8, v8[8], v8[10], v8[42], v8[40]));
    faces.push(new Face(color8, v8[8], v8[10], v8[74], v8[72]));
    faces.push(new Face(color8, v8[8], v8[12], v8[28], v8[24]));
    faces.push(new Face(color8, v8[8], v8[12], v8[44], v8[40]));
    faces.push(new Face(color8, v8[8], v8[12], v8[76], v8[72]));
    faces.push(new Face(color8, v8[8], v8[24], v8[56], v8[40]));
    faces.push(new Face(color8, v8[8], v8[24], v8[88], v8[72]));
    faces.push(new Face(color8, v8[8], v8[40], v8[104], v8[72]));
    faces.push(new Face(color8, v8[9], v8[11], v8[15], v8[13]));
    faces.push(new Face(color8, v8[9], v8[11], v8[27], v8[25]));
    faces.push(new Face(color8, v8[9], v8[11], v8[43], v8[41]));
    faces.push(new Face(color8, v8[9], v8[11], v8[75], v8[73]));
    faces.push(new Face(color8, v8[9], v8[13], v8[29], v8[25]));
    faces.push(new Face(color8, v8[9], v8[13], v8[45], v8[41]));
    faces.push(new Face(color8, v8[9], v8[13], v8[77], v8[73]));
    faces.push(new Face(color8, v8[9], v8[25], v8[57], v8[41]));
    faces.push(new Face(color8, v8[9], v8[25], v8[89], v8[73]));
    faces.push(new Face(color8, v8[9], v8[41], v8[105], v8[73]));
    faces.push(new Face(color8, v8[10], v8[11], v8[15], v8[14]));
    faces.push(new Face(color8, v8[10], v8[11], v8[27], v8[26]));
    faces.push(new Face(color8, v8[10], v8[11], v8[43], v8[42]));
    faces.push(new Face(color8, v8[10], v8[11], v8[75], v8[74]));
    faces.push(new Face(color8, v8[10], v8[14], v8[30], v8[26]));
    faces.push(new Face(color8, v8[10], v8[14], v8[46], v8[42]));
    faces.push(new Face(color8, v8[10], v8[14], v8[78], v8[74]));
    faces.push(new Face(color8, v8[10], v8[26], v8[58], v8[42]));
    faces.push(new Face(color8, v8[10], v8[26], v8[90], v8[74]));
    faces.push(new Face(color8, v8[10], v8[42], v8[106], v8[74]));
    faces.push(new Face(color8, v8[11], v8[15], v8[31], v8[27]));
    faces.push(new Face(color8, v8[11], v8[15], v8[47], v8[43]));
    faces.push(new Face(color8, v8[11], v8[15], v8[79], v8[75]));
    faces.push(new Face(color8, v8[11], v8[27], v8[59], v8[43]));
    faces.push(new Face(color8, v8[11], v8[27], v8[91], v8[75]));
    faces.push(new Face(color8, v8[11], v8[43], v8[107], v8[75]));
    faces.push(new Face(color8, v8[12], v8[13], v8[15], v8[14]));
    faces.push(new Face(color8, v8[12], v8[13], v8[29], v8[28]));
    faces.push(new Face(color8, v8[12], v8[13], v8[45], v8[44]));
    faces.push(new Face(color8, v8[12], v8[13], v8[77], v8[76]));
    faces.push(new Face(color8, v8[12], v8[14], v8[30], v8[28]));
    faces.push(new Face(color8, v8[12], v8[14], v8[46], v8[44]));
    faces.push(new Face(color8, v8[12], v8[14], v8[78], v8[76]));
    faces.push(new Face(color8, v8[12], v8[28], v8[60], v8[44]));
    faces.push(new Face(color8, v8[12], v8[28], v8[92], v8[76]));
    faces.push(new Face(color8, v8[12], v8[44], v8[108], v8[76]));
    faces.push(new Face(color8, v8[13], v8[15], v8[31], v8[29]));
    faces.push(new Face(color8, v8[13], v8[15], v8[47], v8[45]));
    faces.push(new Face(color8, v8[13], v8[15], v8[79], v8[77]));
    faces.push(new Face(color8, v8[13], v8[29], v8[61], v8[45]));
    faces.push(new Face(color8, v8[13], v8[29], v8[93], v8[77]));
    faces.push(new Face(color8, v8[13], v8[45], v8[109], v8[77]));
    faces.push(new Face(color8, v8[14], v8[15], v8[31], v8[30]));
    faces.push(new Face(color8, v8[14], v8[15], v8[47], v8[46]));
    faces.push(new Face(color8, v8[14], v8[15], v8[79], v8[78]));
    faces.push(new Face(color8, v8[14], v8[30], v8[62], v8[46]));
    faces.push(new Face(color8, v8[14], v8[30], v8[94], v8[78]));
    faces.push(new Face(color8, v8[14], v8[46], v8[110], v8[78]));
    faces.push(new Face(color8, v8[15], v8[31], v8[63], v8[47]));
    faces.push(new Face(color8, v8[15], v8[31], v8[95], v8[79]));
    faces.push(new Face(color8, v8[15], v8[47], v8[111], v8[79]));
    faces.push(new Face(color8, v8[16], v8[17], v8[19], v8[18]));
    faces.push(new Face(color8, v8[16], v8[17], v8[21], v8[20]));
    faces.push(new Face(color8, v8[16], v8[17], v8[25], v8[24]));
    faces.push(new Face(color8, v8[16], v8[17], v8[49], v8[48]));
    faces.push(new Face(color8, v8[16], v8[17], v8[81], v8[80]));
    faces.push(new Face(color8, v8[16], v8[18], v8[22], v8[20]));
    faces.push(new Face(color8, v8[16], v8[18], v8[26], v8[24]));
    faces.push(new Face(color8, v8[16], v8[18], v8[50], v8[48]));
    faces.push(new Face(color8, v8[16], v8[18], v8[82], v8[80]));
    faces.push(new Face(color8, v8[16], v8[20], v8[28], v8[24]));
    faces.push(new Face(color8, v8[16], v8[20], v8[52], v8[48]));
    faces.push(new Face(color8, v8[16], v8[20], v8[84], v8[80]));
    faces.push(new Face(color8, v8[16], v8[24], v8[56], v8[48]));
    faces.push(new Face(color8, v8[16], v8[24], v8[88], v8[80]));
    faces.push(new Face(color8, v8[16], v8[48], v8[112], v8[80]));
    faces.push(new Face(color8, v8[17], v8[19], v8[23], v8[21]));
    faces.push(new Face(color8, v8[17], v8[19], v8[27], v8[25]));
    faces.push(new Face(color8, v8[17], v8[19], v8[51], v8[49]));
    faces.push(new Face(color8, v8[17], v8[19], v8[83], v8[81]));
    faces.push(new Face(color8, v8[17], v8[21], v8[29], v8[25]));
    faces.push(new Face(color8, v8[17], v8[21], v8[53], v8[49]));
    faces.push(new Face(color8, v8[17], v8[21], v8[85], v8[81]));
    faces.push(new Face(color8, v8[17], v8[25], v8[57], v8[49]));
    faces.push(new Face(color8, v8[17], v8[25], v8[89], v8[81]));
    faces.push(new Face(color8, v8[17], v8[49], v8[113], v8[81]));
    faces.push(new Face(color8, v8[18], v8[19], v8[23], v8[22]));
    faces.push(new Face(color8, v8[18], v8[19], v8[27], v8[26]));
    faces.push(new Face(color8, v8[18], v8[19], v8[51], v8[50]));
    faces.push(new Face(color8, v8[18], v8[19], v8[83], v8[82]));
    faces.push(new Face(color8, v8[18], v8[22], v8[30], v8[26]));
    faces.push(new Face(color8, v8[18], v8[22], v8[54], v8[50]));
    faces.push(new Face(color8, v8[18], v8[22], v8[86], v8[82]));
    faces.push(new Face(color8, v8[18], v8[26], v8[58], v8[50]));
    faces.push(new Face(color8, v8[18], v8[26], v8[90], v8[82]));
    faces.push(new Face(color8, v8[18], v8[50], v8[114], v8[82]));
    faces.push(new Face(color8, v8[19], v8[23], v8[31], v8[27]));
    faces.push(new Face(color8, v8[19], v8[23], v8[55], v8[51]));
    faces.push(new Face(color8, v8[19], v8[23], v8[87], v8[83]));
    faces.push(new Face(color8, v8[19], v8[27], v8[59], v8[51]));
    faces.push(new Face(color8, v8[19], v8[27], v8[91], v8[83]));
    faces.push(new Face(color8, v8[19], v8[51], v8[115], v8[83]));
    faces.push(new Face(color8, v8[20], v8[21], v8[23], v8[22]));
    faces.push(new Face(color8, v8[20], v8[21], v8[29], v8[28]));
    faces.push(new Face(color8, v8[20], v8[21], v8[53], v8[52]));
    faces.push(new Face(color8, v8[20], v8[21], v8[85], v8[84]));
    faces.push(new Face(color8, v8[20], v8[22], v8[30], v8[28]));
    faces.push(new Face(color8, v8[20], v8[22], v8[54], v8[52]));
    faces.push(new Face(color8, v8[20], v8[22], v8[86], v8[84]));
    faces.push(new Face(color8, v8[20], v8[28], v8[60], v8[52]));
    faces.push(new Face(color8, v8[20], v8[28], v8[92], v8[84]));
    faces.push(new Face(color8, v8[20], v8[52], v8[116], v8[84]));
    faces.push(new Face(color8, v8[21], v8[23], v8[31], v8[29]));
    faces.push(new Face(color8, v8[21], v8[23], v8[55], v8[53]));
    faces.push(new Face(color8, v8[21], v8[23], v8[87], v8[85]));
    faces.push(new Face(color8, v8[21], v8[29], v8[61], v8[53]));
    faces.push(new Face(color8, v8[21], v8[29], v8[93], v8[85]));
    faces.push(new Face(color8, v8[21], v8[53], v8[117], v8[85]));
    faces.push(new Face(color8, v8[22], v8[23], v8[31], v8[30]));
    faces.push(new Face(color8, v8[22], v8[23], v8[55], v8[54]));
    faces.push(new Face(color8, v8[22], v8[23], v8[87], v8[86]));
    faces.push(new Face(color8, v8[22], v8[30], v8[62], v8[54]));
    faces.push(new Face(color8, v8[22], v8[30], v8[94], v8[86]));
    faces.push(new Face(color8, v8[22], v8[54], v8[118], v8[86]));
    faces.push(new Face(color8, v8[23], v8[31], v8[63], v8[55]));
    faces.push(new Face(color8, v8[23], v8[31], v8[95], v8[87]));
    faces.push(new Face(color8, v8[23], v8[55], v8[119], v8[87]));
    faces.push(new Face(color8, v8[24], v8[25], v8[27], v8[26]));
    faces.push(new Face(color8, v8[24], v8[25], v8[29], v8[28]));
    faces.push(new Face(color8, v8[24], v8[25], v8[57], v8[56]));
    faces.push(new Face(color8, v8[24], v8[25], v8[89], v8[88]));
    faces.push(new Face(color8, v8[24], v8[26], v8[30], v8[28]));
    faces.push(new Face(color8, v8[24], v8[26], v8[58], v8[56]));
    faces.push(new Face(color8, v8[24], v8[26], v8[90], v8[88]));
    faces.push(new Face(color8, v8[24], v8[28], v8[60], v8[56]));
    faces.push(new Face(color8, v8[24], v8[28], v8[92], v8[88]));
    faces.push(new Face(color8, v8[24], v8[56], v8[120], v8[88]));
    faces.push(new Face(color8, v8[25], v8[27], v8[31], v8[29]));
    faces.push(new Face(color8, v8[25], v8[27], v8[59], v8[57]));
    faces.push(new Face(color8, v8[25], v8[27], v8[91], v8[89]));
    faces.push(new Face(color8, v8[25], v8[29], v8[61], v8[57]));
    faces.push(new Face(color8, v8[25], v8[29], v8[93], v8[89]));
    faces.push(new Face(color8, v8[25], v8[57], v8[121], v8[89]));
    faces.push(new Face(color8, v8[26], v8[27], v8[31], v8[30]));
    faces.push(new Face(color8, v8[26], v8[27], v8[59], v8[58]));
    faces.push(new Face(color8, v8[26], v8[27], v8[91], v8[90]));
    faces.push(new Face(color8, v8[26], v8[30], v8[62], v8[58]));
    faces.push(new Face(color8, v8[26], v8[30], v8[94], v8[90]));
    faces.push(new Face(color8, v8[26], v8[58], v8[122], v8[90]));
    faces.push(new Face(color8, v8[27], v8[31], v8[63], v8[59]));
    faces.push(new Face(color8, v8[27], v8[31], v8[95], v8[91]));
    faces.push(new Face(color8, v8[27], v8[59], v8[123], v8[91]));
    faces.push(new Face(color8, v8[28], v8[29], v8[31], v8[30]));
    faces.push(new Face(color8, v8[28], v8[29], v8[61], v8[60]));
    faces.push(new Face(color8, v8[28], v8[29], v8[93], v8[92]));
    faces.push(new Face(color8, v8[28], v8[30], v8[62], v8[60]));
    faces.push(new Face(color8, v8[28], v8[30], v8[94], v8[92]));
    faces.push(new Face(color8, v8[28], v8[60], v8[124], v8[92]));
    faces.push(new Face(color8, v8[29], v8[31], v8[63], v8[61]));
    faces.push(new Face(color8, v8[29], v8[31], v8[95], v8[93]));
    faces.push(new Face(color8, v8[29], v8[61], v8[125], v8[93]));
    faces.push(new Face(color8, v8[30], v8[31], v8[63], v8[62]));
    faces.push(new Face(color8, v8[30], v8[31], v8[95], v8[94]));
    faces.push(new Face(color8, v8[30], v8[62], v8[126], v8[94]));
    faces.push(new Face(color8, v8[31], v8[63], v8[127], v8[95]));
    faces.push(new Face(color8, v8[32], v8[33], v8[35], v8[34]));
    faces.push(new Face(color8, v8[32], v8[33], v8[37], v8[36]));
    faces.push(new Face(color8, v8[32], v8[33], v8[41], v8[40]));
    faces.push(new Face(color8, v8[32], v8[33], v8[49], v8[48]));
    faces.push(new Face(color8, v8[32], v8[33], v8[97], v8[96]));
    faces.push(new Face(color8, v8[32], v8[34], v8[38], v8[36]));
    faces.push(new Face(color8, v8[32], v8[34], v8[42], v8[40]));
    faces.push(new Face(color8, v8[32], v8[34], v8[50], v8[48]));
    faces.push(new Face(color8, v8[32], v8[34], v8[98], v8[96]));
    faces.push(new Face(color8, v8[32], v8[36], v8[44], v8[40]));
    faces.push(new Face(color8, v8[32], v8[36], v8[52], v8[48]));
    faces.push(new Face(color8, v8[32], v8[36], v8[100], v8[96]));
    faces.push(new Face(color8, v8[32], v8[40], v8[56], v8[48]));
    faces.push(new Face(color8, v8[32], v8[40], v8[104], v8[96]));
    faces.push(new Face(color8, v8[32], v8[48], v8[112], v8[96]));
    faces.push(new Face(color8, v8[33], v8[35], v8[39], v8[37]));
    faces.push(new Face(color8, v8[33], v8[35], v8[43], v8[41]));
    faces.push(new Face(color8, v8[33], v8[35], v8[51], v8[49]));
    faces.push(new Face(color8, v8[33], v8[35], v8[99], v8[97]));
    faces.push(new Face(color8, v8[33], v8[37], v8[45], v8[41]));
    faces.push(new Face(color8, v8[33], v8[37], v8[53], v8[49]));
    faces.push(new Face(color8, v8[33], v8[37], v8[101], v8[97]));
    faces.push(new Face(color8, v8[33], v8[41], v8[57], v8[49]));
    faces.push(new Face(color8, v8[33], v8[41], v8[105], v8[97]));
    faces.push(new Face(color8, v8[33], v8[49], v8[113], v8[97]));
    faces.push(new Face(color8, v8[34], v8[35], v8[39], v8[38]));
    faces.push(new Face(color8, v8[34], v8[35], v8[43], v8[42]));
    faces.push(new Face(color8, v8[34], v8[35], v8[51], v8[50]));
    faces.push(new Face(color8, v8[34], v8[35], v8[99], v8[98]));
    faces.push(new Face(color8, v8[34], v8[38], v8[46], v8[42]));
    faces.push(new Face(color8, v8[34], v8[38], v8[54], v8[50]));
    faces.push(new Face(color8, v8[34], v8[38], v8[102], v8[98]));
    faces.push(new Face(color8, v8[34], v8[42], v8[58], v8[50]));
    faces.push(new Face(color8, v8[34], v8[42], v8[106], v8[98]));
    faces.push(new Face(color8, v8[34], v8[50], v8[114], v8[98]));
    faces.push(new Face(color8, v8[35], v8[39], v8[47], v8[43]));
    faces.push(new Face(color8, v8[35], v8[39], v8[55], v8[51]));
    faces.push(new Face(color8, v8[35], v8[39], v8[103], v8[99]));
    faces.push(new Face(color8, v8[35], v8[43], v8[59], v8[51]));
    faces.push(new Face(color8, v8[35], v8[43], v8[107], v8[99]));
    faces.push(new Face(color8, v8[35], v8[51], v8[115], v8[99]));
    faces.push(new Face(color8, v8[36], v8[37], v8[39], v8[38]));
    faces.push(new Face(color8, v8[36], v8[37], v8[45], v8[44]));
    faces.push(new Face(color8, v8[36], v8[37], v8[53], v8[52]));
    faces.push(new Face(color8, v8[36], v8[37], v8[101], v8[100]));
    faces.push(new Face(color8, v8[36], v8[38], v8[46], v8[44]));
    faces.push(new Face(color8, v8[36], v8[38], v8[54], v8[52]));
    faces.push(new Face(color8, v8[36], v8[38], v8[102], v8[100]));
    faces.push(new Face(color8, v8[36], v8[44], v8[60], v8[52]));
    faces.push(new Face(color8, v8[36], v8[44], v8[108], v8[100]));
    faces.push(new Face(color8, v8[36], v8[52], v8[116], v8[100]));
    faces.push(new Face(color8, v8[37], v8[39], v8[47], v8[45]));
    faces.push(new Face(color8, v8[37], v8[39], v8[55], v8[53]));
    faces.push(new Face(color8, v8[37], v8[39], v8[103], v8[101]));
    faces.push(new Face(color8, v8[37], v8[45], v8[61], v8[53]));
    faces.push(new Face(color8, v8[37], v8[45], v8[109], v8[101]));
    faces.push(new Face(color8, v8[37], v8[53], v8[117], v8[101]));
    faces.push(new Face(color8, v8[38], v8[39], v8[47], v8[46]));
    faces.push(new Face(color8, v8[38], v8[39], v8[55], v8[54]));
    faces.push(new Face(color8, v8[38], v8[39], v8[103], v8[102]));
    faces.push(new Face(color8, v8[38], v8[46], v8[62], v8[54]));
    faces.push(new Face(color8, v8[38], v8[46], v8[110], v8[102]));
    faces.push(new Face(color8, v8[38], v8[54], v8[118], v8[102]));
    faces.push(new Face(color8, v8[39], v8[47], v8[63], v8[55]));
    faces.push(new Face(color8, v8[39], v8[47], v8[111], v8[103]));
    faces.push(new Face(color8, v8[39], v8[55], v8[119], v8[103]));
    faces.push(new Face(color8, v8[40], v8[41], v8[43], v8[42]));
    faces.push(new Face(color8, v8[40], v8[41], v8[45], v8[44]));
    faces.push(new Face(color8, v8[40], v8[41], v8[57], v8[56]));
    faces.push(new Face(color8, v8[40], v8[41], v8[105], v8[104]));
    faces.push(new Face(color8, v8[40], v8[42], v8[46], v8[44]));
    faces.push(new Face(color8, v8[40], v8[42], v8[58], v8[56]));
    faces.push(new Face(color8, v8[40], v8[42], v8[106], v8[104]));
    faces.push(new Face(color8, v8[40], v8[44], v8[60], v8[56]));
    faces.push(new Face(color8, v8[40], v8[44], v8[108], v8[104]));
    faces.push(new Face(color8, v8[40], v8[56], v8[120], v8[104]));
    faces.push(new Face(color8, v8[41], v8[43], v8[47], v8[45]));
    faces.push(new Face(color8, v8[41], v8[43], v8[59], v8[57]));
    faces.push(new Face(color8, v8[41], v8[43], v8[107], v8[105]));
    faces.push(new Face(color8, v8[41], v8[45], v8[61], v8[57]));
    faces.push(new Face(color8, v8[41], v8[45], v8[109], v8[105]));
    faces.push(new Face(color8, v8[41], v8[57], v8[121], v8[105]));
    faces.push(new Face(color8, v8[42], v8[43], v8[47], v8[46]));
    faces.push(new Face(color8, v8[42], v8[43], v8[59], v8[58]));
    faces.push(new Face(color8, v8[42], v8[43], v8[107], v8[106]));
    faces.push(new Face(color8, v8[42], v8[46], v8[62], v8[58]));
    faces.push(new Face(color8, v8[42], v8[46], v8[110], v8[106]));
    faces.push(new Face(color8, v8[42], v8[58], v8[122], v8[106]));
    faces.push(new Face(color8, v8[43], v8[47], v8[63], v8[59]));
    faces.push(new Face(color8, v8[43], v8[47], v8[111], v8[107]));
    faces.push(new Face(color8, v8[43], v8[59], v8[123], v8[107]));
    faces.push(new Face(color8, v8[44], v8[45], v8[47], v8[46]));
    faces.push(new Face(color8, v8[44], v8[45], v8[61], v8[60]));
    faces.push(new Face(color8, v8[44], v8[45], v8[109], v8[108]));
    faces.push(new Face(color8, v8[44], v8[46], v8[62], v8[60]));
    faces.push(new Face(color8, v8[44], v8[46], v8[110], v8[108]));
    faces.push(new Face(color8, v8[44], v8[60], v8[124], v8[108]));
    faces.push(new Face(color8, v8[45], v8[47], v8[63], v8[61]));
    faces.push(new Face(color8, v8[45], v8[47], v8[111], v8[109]));
    faces.push(new Face(color8, v8[45], v8[61], v8[125], v8[109]));
    faces.push(new Face(color8, v8[46], v8[47], v8[63], v8[62]));
    faces.push(new Face(color8, v8[46], v8[47], v8[111], v8[110]));
    faces.push(new Face(color8, v8[46], v8[62], v8[126], v8[110]));
    faces.push(new Face(color8, v8[47], v8[63], v8[127], v8[111]));
    faces.push(new Face(color8, v8[48], v8[49], v8[51], v8[50]));
    faces.push(new Face(color8, v8[48], v8[49], v8[53], v8[52]));
    faces.push(new Face(color8, v8[48], v8[49], v8[57], v8[56]));
    faces.push(new Face(color8, v8[48], v8[49], v8[113], v8[112]));
    faces.push(new Face(color8, v8[48], v8[50], v8[54], v8[52]));
    faces.push(new Face(color8, v8[48], v8[50], v8[58], v8[56]));
    faces.push(new Face(color8, v8[48], v8[50], v8[114], v8[112]));
    faces.push(new Face(color8, v8[48], v8[52], v8[60], v8[56]));
    faces.push(new Face(color8, v8[48], v8[52], v8[116], v8[112]));
    faces.push(new Face(color8, v8[48], v8[56], v8[120], v8[112]));
    faces.push(new Face(color8, v8[49], v8[51], v8[55], v8[53]));
    faces.push(new Face(color8, v8[49], v8[51], v8[59], v8[57]));
    faces.push(new Face(color8, v8[49], v8[51], v8[115], v8[113]));
    faces.push(new Face(color8, v8[49], v8[53], v8[61], v8[57]));
    faces.push(new Face(color8, v8[49], v8[53], v8[117], v8[113]));
    faces.push(new Face(color8, v8[49], v8[57], v8[121], v8[113]));
    faces.push(new Face(color8, v8[50], v8[51], v8[55], v8[54]));
    faces.push(new Face(color8, v8[50], v8[51], v8[59], v8[58]));
    faces.push(new Face(color8, v8[50], v8[51], v8[115], v8[114]));
    faces.push(new Face(color8, v8[50], v8[54], v8[62], v8[58]));
    faces.push(new Face(color8, v8[50], v8[54], v8[118], v8[114]));
    faces.push(new Face(color8, v8[50], v8[58], v8[122], v8[114]));
    faces.push(new Face(color8, v8[51], v8[55], v8[63], v8[59]));
    faces.push(new Face(color8, v8[51], v8[55], v8[119], v8[115]));
    faces.push(new Face(color8, v8[51], v8[59], v8[123], v8[115]));
    faces.push(new Face(color8, v8[52], v8[53], v8[55], v8[54]));
    faces.push(new Face(color8, v8[52], v8[53], v8[61], v8[60]));
    faces.push(new Face(color8, v8[52], v8[53], v8[117], v8[116]));
    faces.push(new Face(color8, v8[52], v8[54], v8[62], v8[60]));
    faces.push(new Face(color8, v8[52], v8[54], v8[118], v8[116]));
    faces.push(new Face(color8, v8[52], v8[60], v8[124], v8[116]));
    faces.push(new Face(color8, v8[53], v8[55], v8[63], v8[61]));
    faces.push(new Face(color8, v8[53], v8[55], v8[119], v8[117]));
    faces.push(new Face(color8, v8[53], v8[61], v8[125], v8[117]));
    faces.push(new Face(color8, v8[54], v8[55], v8[63], v8[62]));
    faces.push(new Face(color8, v8[54], v8[55], v8[119], v8[118]));
    faces.push(new Face(color8, v8[54], v8[62], v8[126], v8[118]));
    faces.push(new Face(color8, v8[55], v8[63], v8[127], v8[119]));
    faces.push(new Face(color8, v8[56], v8[57], v8[59], v8[58]));
    faces.push(new Face(color8, v8[56], v8[57], v8[61], v8[60]));
    faces.push(new Face(color8, v8[56], v8[57], v8[121], v8[120]));
    faces.push(new Face(color8, v8[56], v8[58], v8[62], v8[60]));
    faces.push(new Face(color8, v8[56], v8[58], v8[122], v8[120]));
    faces.push(new Face(color8, v8[56], v8[60], v8[124], v8[120]));
    faces.push(new Face(color8, v8[57], v8[59], v8[63], v8[61]));
    faces.push(new Face(color8, v8[57], v8[59], v8[123], v8[121]));
    faces.push(new Face(color8, v8[57], v8[61], v8[125], v8[121]));
    faces.push(new Face(color8, v8[58], v8[59], v8[63], v8[62]));
    faces.push(new Face(color8, v8[58], v8[59], v8[123], v8[122]));
    faces.push(new Face(color8, v8[58], v8[62], v8[126], v8[122]));
    faces.push(new Face(color8, v8[59], v8[63], v8[127], v8[123]));
    faces.push(new Face(color8, v8[60], v8[61], v8[63], v8[62]));
    faces.push(new Face(color8, v8[60], v8[61], v8[125], v8[124]));
    faces.push(new Face(color8, v8[60], v8[62], v8[126], v8[124]));
    faces.push(new Face(color8, v8[61], v8[63], v8[127], v8[125]));
    faces.push(new Face(color8, v8[62], v8[63], v8[127], v8[126]));
    faces.push(new Face(color8, v8[64], v8[65], v8[67], v8[66]));
    faces.push(new Face(color8, v8[64], v8[65], v8[69], v8[68]));
    faces.push(new Face(color8, v8[64], v8[65], v8[73], v8[72]));
    faces.push(new Face(color8, v8[64], v8[65], v8[81], v8[80]));
    faces.push(new Face(color8, v8[64], v8[65], v8[97], v8[96]));
    faces.push(new Face(color8, v8[64], v8[66], v8[70], v8[68]));
    faces.push(new Face(color8, v8[64], v8[66], v8[74], v8[72]));
    faces.push(new Face(color8, v8[64], v8[66], v8[82], v8[80]));
    faces.push(new Face(color8, v8[64], v8[66], v8[98], v8[96]));
    faces.push(new Face(color8, v8[64], v8[68], v8[76], v8[72]));
    faces.push(new Face(color8, v8[64], v8[68], v8[84], v8[80]));
    faces.push(new Face(color8, v8[64], v8[68], v8[100], v8[96]));
    faces.push(new Face(color8, v8[64], v8[72], v8[88], v8[80]));
    faces.push(new Face(color8, v8[64], v8[72], v8[104], v8[96]));
    faces.push(new Face(color8, v8[64], v8[80], v8[112], v8[96]));
    faces.push(new Face(color8, v8[65], v8[67], v8[71], v8[69]));
    faces.push(new Face(color8, v8[65], v8[67], v8[75], v8[73]));
    faces.push(new Face(color8, v8[65], v8[67], v8[83], v8[81]));
    faces.push(new Face(color8, v8[65], v8[67], v8[99], v8[97]));
    faces.push(new Face(color8, v8[65], v8[69], v8[77], v8[73]));
    faces.push(new Face(color8, v8[65], v8[69], v8[85], v8[81]));
    faces.push(new Face(color8, v8[65], v8[69], v8[101], v8[97]));
    faces.push(new Face(color8, v8[65], v8[73], v8[89], v8[81]));
    faces.push(new Face(color8, v8[65], v8[73], v8[105], v8[97]));
    faces.push(new Face(color8, v8[65], v8[81], v8[113], v8[97]));
    faces.push(new Face(color8, v8[66], v8[67], v8[71], v8[70]));
    faces.push(new Face(color8, v8[66], v8[67], v8[75], v8[74]));
    faces.push(new Face(color8, v8[66], v8[67], v8[83], v8[82]));
    faces.push(new Face(color8, v8[66], v8[67], v8[99], v8[98]));
    faces.push(new Face(color8, v8[66], v8[70], v8[78], v8[74]));
    faces.push(new Face(color8, v8[66], v8[70], v8[86], v8[82]));
    faces.push(new Face(color8, v8[66], v8[70], v8[102], v8[98]));
    faces.push(new Face(color8, v8[66], v8[74], v8[90], v8[82]));
    faces.push(new Face(color8, v8[66], v8[74], v8[106], v8[98]));
    faces.push(new Face(color8, v8[66], v8[82], v8[114], v8[98]));
    faces.push(new Face(color8, v8[67], v8[71], v8[79], v8[75]));
    faces.push(new Face(color8, v8[67], v8[71], v8[87], v8[83]));
    faces.push(new Face(color8, v8[67], v8[71], v8[103], v8[99]));
    faces.push(new Face(color8, v8[67], v8[75], v8[91], v8[83]));
    faces.push(new Face(color8, v8[67], v8[75], v8[107], v8[99]));
    faces.push(new Face(color8, v8[67], v8[83], v8[115], v8[99]));
    faces.push(new Face(color8, v8[68], v8[69], v8[71], v8[70]));
    faces.push(new Face(color8, v8[68], v8[69], v8[77], v8[76]));
    faces.push(new Face(color8, v8[68], v8[69], v8[85], v8[84]));
    faces.push(new Face(color8, v8[68], v8[69], v8[101], v8[100]));
    faces.push(new Face(color8, v8[68], v8[70], v8[78], v8[76]));
    faces.push(new Face(color8, v8[68], v8[70], v8[86], v8[84]));
    faces.push(new Face(color8, v8[68], v8[70], v8[102], v8[100]));
    faces.push(new Face(color8, v8[68], v8[76], v8[92], v8[84]));
    faces.push(new Face(color8, v8[68], v8[76], v8[108], v8[100]));
    faces.push(new Face(color8, v8[68], v8[84], v8[116], v8[100]));
    faces.push(new Face(color8, v8[69], v8[71], v8[79], v8[77]));
    faces.push(new Face(color8, v8[69], v8[71], v8[87], v8[85]));
    faces.push(new Face(color8, v8[69], v8[71], v8[103], v8[101]));
    faces.push(new Face(color8, v8[69], v8[77], v8[93], v8[85]));
    faces.push(new Face(color8, v8[69], v8[77], v8[109], v8[101]));
    faces.push(new Face(color8, v8[69], v8[85], v8[117], v8[101]));
    faces.push(new Face(color8, v8[70], v8[71], v8[79], v8[78]));
    faces.push(new Face(color8, v8[70], v8[71], v8[87], v8[86]));
    faces.push(new Face(color8, v8[70], v8[71], v8[103], v8[102]));
    faces.push(new Face(color8, v8[70], v8[78], v8[94], v8[86]));
    faces.push(new Face(color8, v8[70], v8[78], v8[110], v8[102]));
    faces.push(new Face(color8, v8[70], v8[86], v8[118], v8[102]));
    faces.push(new Face(color8, v8[71], v8[79], v8[95], v8[87]));
    faces.push(new Face(color8, v8[71], v8[79], v8[111], v8[103]));
    faces.push(new Face(color8, v8[71], v8[87], v8[119], v8[103]));
    faces.push(new Face(color8, v8[72], v8[73], v8[75], v8[74]));
    faces.push(new Face(color8, v8[72], v8[73], v8[77], v8[76]));
    faces.push(new Face(color8, v8[72], v8[73], v8[89], v8[88]));
    faces.push(new Face(color8, v8[72], v8[73], v8[105], v8[104]));
    faces.push(new Face(color8, v8[72], v8[74], v8[78], v8[76]));
    faces.push(new Face(color8, v8[72], v8[74], v8[90], v8[88]));
    faces.push(new Face(color8, v8[72], v8[74], v8[106], v8[104]));
    faces.push(new Face(color8, v8[72], v8[76], v8[92], v8[88]));
    faces.push(new Face(color8, v8[72], v8[76], v8[108], v8[104]));
    faces.push(new Face(color8, v8[72], v8[88], v8[120], v8[104]));
    faces.push(new Face(color8, v8[73], v8[75], v8[79], v8[77]));
    faces.push(new Face(color8, v8[73], v8[75], v8[91], v8[89]));
    faces.push(new Face(color8, v8[73], v8[75], v8[107], v8[105]));
    faces.push(new Face(color8, v8[73], v8[77], v8[93], v8[89]));
    faces.push(new Face(color8, v8[73], v8[77], v8[109], v8[105]));
    faces.push(new Face(color8, v8[73], v8[89], v8[121], v8[105]));
    faces.push(new Face(color8, v8[74], v8[75], v8[79], v8[78]));
    faces.push(new Face(color8, v8[74], v8[75], v8[91], v8[90]));
    faces.push(new Face(color8, v8[74], v8[75], v8[107], v8[106]));
    faces.push(new Face(color8, v8[74], v8[78], v8[94], v8[90]));
    faces.push(new Face(color8, v8[74], v8[78], v8[110], v8[106]));
    faces.push(new Face(color8, v8[74], v8[90], v8[122], v8[106]));
    faces.push(new Face(color8, v8[75], v8[79], v8[95], v8[91]));
    faces.push(new Face(color8, v8[75], v8[79], v8[111], v8[107]));
    faces.push(new Face(color8, v8[75], v8[91], v8[123], v8[107]));
    faces.push(new Face(color8, v8[76], v8[77], v8[79], v8[78]));
    faces.push(new Face(color8, v8[76], v8[77], v8[93], v8[92]));
    faces.push(new Face(color8, v8[76], v8[77], v8[109], v8[108]));
    faces.push(new Face(color8, v8[76], v8[78], v8[94], v8[92]));
    faces.push(new Face(color8, v8[76], v8[78], v8[110], v8[108]));
    faces.push(new Face(color8, v8[76], v8[92], v8[124], v8[108]));
    faces.push(new Face(color8, v8[77], v8[79], v8[95], v8[93]));
    faces.push(new Face(color8, v8[77], v8[79], v8[111], v8[109]));
    faces.push(new Face(color8, v8[77], v8[93], v8[125], v8[109]));
    faces.push(new Face(color8, v8[78], v8[79], v8[95], v8[94]));
    faces.push(new Face(color8, v8[78], v8[79], v8[111], v8[110]));
    faces.push(new Face(color8, v8[78], v8[94], v8[126], v8[110]));
    faces.push(new Face(color8, v8[79], v8[95], v8[127], v8[111]));
    faces.push(new Face(color8, v8[80], v8[81], v8[83], v8[82]));
    faces.push(new Face(color8, v8[80], v8[81], v8[85], v8[84]));
    faces.push(new Face(color8, v8[80], v8[81], v8[89], v8[88]));
    faces.push(new Face(color8, v8[80], v8[81], v8[113], v8[112]));
    faces.push(new Face(color8, v8[80], v8[82], v8[86], v8[84]));
    faces.push(new Face(color8, v8[80], v8[82], v8[90], v8[88]));
    faces.push(new Face(color8, v8[80], v8[82], v8[114], v8[112]));
    faces.push(new Face(color8, v8[80], v8[84], v8[92], v8[88]));
    faces.push(new Face(color8, v8[80], v8[84], v8[116], v8[112]));
    faces.push(new Face(color8, v8[80], v8[88], v8[120], v8[112]));
    faces.push(new Face(color8, v8[81], v8[83], v8[87], v8[85]));
    faces.push(new Face(color8, v8[81], v8[83], v8[91], v8[89]));
    faces.push(new Face(color8, v8[81], v8[83], v8[115], v8[113]));
    faces.push(new Face(color8, v8[81], v8[85], v8[93], v8[89]));
    faces.push(new Face(color8, v8[81], v8[85], v8[117], v8[113]));
    faces.push(new Face(color8, v8[81], v8[89], v8[121], v8[113]));
    faces.push(new Face(color8, v8[82], v8[83], v8[87], v8[86]));
    faces.push(new Face(color8, v8[82], v8[83], v8[91], v8[90]));
    faces.push(new Face(color8, v8[82], v8[83], v8[115], v8[114]));
    faces.push(new Face(color8, v8[82], v8[86], v8[94], v8[90]));
    faces.push(new Face(color8, v8[82], v8[86], v8[118], v8[114]));
    faces.push(new Face(color8, v8[82], v8[90], v8[122], v8[114]));
    faces.push(new Face(color8, v8[83], v8[87], v8[95], v8[91]));
    faces.push(new Face(color8, v8[83], v8[87], v8[119], v8[115]));
    faces.push(new Face(color8, v8[83], v8[91], v8[123], v8[115]));
    faces.push(new Face(color8, v8[84], v8[85], v8[87], v8[86]));
    faces.push(new Face(color8, v8[84], v8[85], v8[93], v8[92]));
    faces.push(new Face(color8, v8[84], v8[85], v8[117], v8[116]));
    faces.push(new Face(color8, v8[84], v8[86], v8[94], v8[92]));
    faces.push(new Face(color8, v8[84], v8[86], v8[118], v8[116]));
    faces.push(new Face(color8, v8[84], v8[92], v8[124], v8[116]));
    faces.push(new Face(color8, v8[85], v8[87], v8[95], v8[93]));
    faces.push(new Face(color8, v8[85], v8[87], v8[119], v8[117]));
    faces.push(new Face(color8, v8[85], v8[93], v8[125], v8[117]));
    faces.push(new Face(color8, v8[86], v8[87], v8[95], v8[94]));
    faces.push(new Face(color8, v8[86], v8[87], v8[119], v8[118]));
    faces.push(new Face(color8, v8[86], v8[94], v8[126], v8[118]));
    faces.push(new Face(color8, v8[87], v8[95], v8[127], v8[119]));
    faces.push(new Face(color8, v8[88], v8[89], v8[91], v8[90]));
    faces.push(new Face(color8, v8[88], v8[89], v8[93], v8[92]));
    faces.push(new Face(color8, v8[88], v8[89], v8[121], v8[120]));
    faces.push(new Face(color8, v8[88], v8[90], v8[94], v8[92]));
    faces.push(new Face(color8, v8[88], v8[90], v8[122], v8[120]));
    faces.push(new Face(color8, v8[88], v8[92], v8[124], v8[120]));
    faces.push(new Face(color8, v8[89], v8[91], v8[95], v8[93]));
    faces.push(new Face(color8, v8[89], v8[91], v8[123], v8[121]));
    faces.push(new Face(color8, v8[89], v8[93], v8[125], v8[121]));
    faces.push(new Face(color8, v8[90], v8[91], v8[95], v8[94]));
    faces.push(new Face(color8, v8[90], v8[91], v8[123], v8[122]));
    faces.push(new Face(color8, v8[90], v8[94], v8[126], v8[122]));
    faces.push(new Face(color8, v8[91], v8[95], v8[127], v8[123]));
    faces.push(new Face(color8, v8[92], v8[93], v8[95], v8[94]));
    faces.push(new Face(color8, v8[92], v8[93], v8[125], v8[124]));
    faces.push(new Face(color8, v8[92], v8[94], v8[126], v8[124]));
    faces.push(new Face(color8, v8[93], v8[95], v8[127], v8[125]));
    faces.push(new Face(color8, v8[94], v8[95], v8[127], v8[126]));
    faces.push(new Face(color8, v8[96], v8[97], v8[99], v8[98]));
    faces.push(new Face(color8, v8[96], v8[97], v8[101], v8[100]));
    faces.push(new Face(color8, v8[96], v8[97], v8[105], v8[104]));
    faces.push(new Face(color8, v8[96], v8[97], v8[113], v8[112]));
    faces.push(new Face(color8, v8[96], v8[98], v8[102], v8[100]));
    faces.push(new Face(color8, v8[96], v8[98], v8[106], v8[104]));
    faces.push(new Face(color8, v8[96], v8[98], v8[114], v8[112]));
    faces.push(new Face(color8, v8[96], v8[100], v8[108], v8[104]));
    faces.push(new Face(color8, v8[96], v8[100], v8[116], v8[112]));
    faces.push(new Face(color8, v8[96], v8[104], v8[120], v8[112]));
    faces.push(new Face(color8, v8[97], v8[99], v8[103], v8[101]));
    faces.push(new Face(color8, v8[97], v8[99], v8[107], v8[105]));
    faces.push(new Face(color8, v8[97], v8[99], v8[115], v8[113]));
    faces.push(new Face(color8, v8[97], v8[101], v8[109], v8[105]));
    faces.push(new Face(color8, v8[97], v8[101], v8[117], v8[113]));
    faces.push(new Face(color8, v8[97], v8[105], v8[121], v8[113]));
    faces.push(new Face(color8, v8[98], v8[99], v8[103], v8[102]));
    faces.push(new Face(color8, v8[98], v8[99], v8[107], v8[106]));
    faces.push(new Face(color8, v8[98], v8[99], v8[115], v8[114]));
    faces.push(new Face(color8, v8[98], v8[102], v8[110], v8[106]));
    faces.push(new Face(color8, v8[98], v8[102], v8[118], v8[114]));
    faces.push(new Face(color8, v8[98], v8[106], v8[122], v8[114]));
    faces.push(new Face(color8, v8[99], v8[103], v8[111], v8[107]));
    faces.push(new Face(color8, v8[99], v8[103], v8[119], v8[115]));
    faces.push(new Face(color8, v8[99], v8[107], v8[123], v8[115]));
    faces.push(new Face(color8, v8[100], v8[101], v8[103], v8[102]));
    faces.push(new Face(color8, v8[100], v8[101], v8[109], v8[108]));
    faces.push(new Face(color8, v8[100], v8[101], v8[117], v8[116]));
    faces.push(new Face(color8, v8[100], v8[102], v8[110], v8[108]));
    faces.push(new Face(color8, v8[100], v8[102], v8[118], v8[116]));
    faces.push(new Face(color8, v8[100], v8[108], v8[124], v8[116]));
    faces.push(new Face(color8, v8[101], v8[103], v8[111], v8[109]));
    faces.push(new Face(color8, v8[101], v8[103], v8[119], v8[117]));
    faces.push(new Face(color8, v8[101], v8[109], v8[125], v8[117]));
    faces.push(new Face(color8, v8[102], v8[103], v8[111], v8[110]));
    faces.push(new Face(color8, v8[102], v8[103], v8[119], v8[118]));
    faces.push(new Face(color8, v8[102], v8[110], v8[126], v8[118]));
    faces.push(new Face(color8, v8[103], v8[111], v8[127], v8[119]));
    faces.push(new Face(color8, v8[104], v8[105], v8[107], v8[106]));
    faces.push(new Face(color8, v8[104], v8[105], v8[109], v8[108]));
    faces.push(new Face(color8, v8[104], v8[105], v8[121], v8[120]));
    faces.push(new Face(color8, v8[104], v8[106], v8[110], v8[108]));
    faces.push(new Face(color8, v8[104], v8[106], v8[122], v8[120]));
    faces.push(new Face(color8, v8[104], v8[108], v8[124], v8[120]));
    faces.push(new Face(color8, v8[105], v8[107], v8[111], v8[109]));
    faces.push(new Face(color8, v8[105], v8[107], v8[123], v8[121]));
    faces.push(new Face(color8, v8[105], v8[109], v8[125], v8[121]));
    faces.push(new Face(color8, v8[106], v8[107], v8[111], v8[110]));
    faces.push(new Face(color8, v8[106], v8[107], v8[123], v8[122]));
    faces.push(new Face(color8, v8[106], v8[110], v8[126], v8[122]));
    faces.push(new Face(color8, v8[107], v8[111], v8[127], v8[123]));
    faces.push(new Face(color8, v8[108], v8[109], v8[111], v8[110]));
    faces.push(new Face(color8, v8[108], v8[109], v8[125], v8[124]));
    faces.push(new Face(color8, v8[108], v8[110], v8[126], v8[124]));
    faces.push(new Face(color8, v8[109], v8[111], v8[127], v8[125]));
    faces.push(new Face(color8, v8[110], v8[111], v8[127], v8[126]));
    faces.push(new Face(color8, v8[112], v8[113], v8[115], v8[114]));
    faces.push(new Face(color8, v8[112], v8[113], v8[117], v8[116]));
    faces.push(new Face(color8, v8[112], v8[113], v8[121], v8[120]));
    faces.push(new Face(color8, v8[112], v8[114], v8[118], v8[116]));
    faces.push(new Face(color8, v8[112], v8[114], v8[122], v8[120]));
    faces.push(new Face(color8, v8[112], v8[116], v8[124], v8[120]));
    faces.push(new Face(color8, v8[113], v8[115], v8[119], v8[117]));
    faces.push(new Face(color8, v8[113], v8[115], v8[123], v8[121]));
    faces.push(new Face(color8, v8[113], v8[117], v8[125], v8[121]));
    faces.push(new Face(color8, v8[114], v8[115], v8[119], v8[118]));
    faces.push(new Face(color8, v8[114], v8[115], v8[123], v8[122]));
    faces.push(new Face(color8, v8[114], v8[118], v8[126], v8[122]));
    faces.push(new Face(color8, v8[115], v8[119], v8[127], v8[123]));
    faces.push(new Face(color8, v8[116], v8[117], v8[119], v8[118]));
    faces.push(new Face(color8, v8[116], v8[117], v8[125], v8[124]));
    faces.push(new Face(color8, v8[116], v8[118], v8[126], v8[124]));
    faces.push(new Face(color8, v8[117], v8[119], v8[127], v8[125]));
    faces.push(new Face(color8, v8[118], v8[119], v8[127], v8[126]));
    faces.push(new Face(color8, v8[120], v8[121], v8[123], v8[122]));
    faces.push(new Face(color8, v8[120], v8[121], v8[125], v8[124]));
    faces.push(new Face(color8, v8[120], v8[122], v8[126], v8[124]));
    faces.push(new Face(color8, v8[121], v8[123], v8[127], v8[125]));
    faces.push(new Face(color8, v8[122], v8[123], v8[127], v8[126]));
    faces.push(new Face(color8, v8[124], v8[125], v8[127], v8[126]));
    for (let i = 0; i < v8.length; i++) {
        v8[i].rotate(r);
        v8[i].project();
    }

    v9[0] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v9[1] = new Vertex(-w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v9[2] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v9[3] = new Vertex(-w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v9[4] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v9[5] = new Vertex(-w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v9[6] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v9[7] = new Vertex(-w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v9[8] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v9[9] = new Vertex(-w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v9[10] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v9[11] = new Vertex(-w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v9[12] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v9[13] = new Vertex(-w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v9[14] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2);
    v9[15] = new Vertex(-w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v9[16] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v9[17] = new Vertex(-w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v9[18] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v9[19] = new Vertex(-w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v9[20] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v9[21] = new Vertex(-w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v9[22] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2);
    v9[23] = new Vertex(-w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v9[24] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v9[25] = new Vertex(-w/2, w/2+Math.sin(theta)*w, -w/2, w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v9[26] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2);
    v9[27] = new Vertex(-w/2, w/2+Math.sin(theta)*w, -w/2, w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v9[28] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2);
    v9[29] = new Vertex(-w/2, w/2+Math.sin(theta)*w, -w/2, w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v9[30] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, w/2, w/2, -w/2);
    v9[31] = new Vertex(-w/2, w/2+Math.sin(theta)*w, -w/2, w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v9[32] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v9[33] = new Vertex(-w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v9[34] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v9[35] = new Vertex(-w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v9[36] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v9[37] = new Vertex(-w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v9[38] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v9[39] = new Vertex(-w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v9[40] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v9[41] = new Vertex(-w/2, w/2+Math.sin(theta)*w, w/2, -w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v9[42] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v9[43] = new Vertex(-w/2, w/2+Math.sin(theta)*w, w/2, -w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v9[44] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v9[45] = new Vertex(-w/2, w/2+Math.sin(theta)*w, w/2, -w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v9[46] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, w/2, w/2, -w/2);
    v9[47] = new Vertex(-w/2, w/2+Math.sin(theta)*w, w/2, -w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v9[48] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v9[49] = new Vertex(-w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v9[50] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v9[51] = new Vertex(-w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v9[52] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v9[53] = new Vertex(-w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v9[54] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, w/2, w/2, -w/2);
    v9[55] = new Vertex(-w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v9[56] = new Vertex(-w/2, w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v9[57] = new Vertex(-w/2, w/2+Math.sin(theta)*w, w/2, w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v9[58] = new Vertex(-w/2, w/2, w/2, w/2, w/2, -w/2, w/2, -w/2);
    v9[59] = new Vertex(-w/2, w/2+Math.sin(theta)*w, w/2, w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v9[60] = new Vertex(-w/2, w/2, w/2, w/2, w/2, w/2, -w/2, -w/2);
    v9[61] = new Vertex(-w/2, w/2+Math.sin(theta)*w, w/2, w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v9[62] = new Vertex(-w/2, w/2, w/2, w/2, w/2, w/2, w/2, -w/2);
    v9[63] = new Vertex(-w/2, w/2+Math.sin(theta)*w, w/2, w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v9[64] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v9[65] = new Vertex(w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v9[66] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v9[67] = new Vertex(w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v9[68] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v9[69] = new Vertex(w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v9[70] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v9[71] = new Vertex(w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v9[72] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v9[73] = new Vertex(w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v9[74] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v9[75] = new Vertex(w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v9[76] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v9[77] = new Vertex(w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v9[78] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2);
    v9[79] = new Vertex(w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v9[80] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v9[81] = new Vertex(w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v9[82] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v9[83] = new Vertex(w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v9[84] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v9[85] = new Vertex(w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v9[86] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2);
    v9[87] = new Vertex(w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v9[88] = new Vertex(w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v9[89] = new Vertex(w/2, w/2+Math.sin(theta)*w, -w/2, w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v9[90] = new Vertex(w/2, w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2);
    v9[91] = new Vertex(w/2, w/2+Math.sin(theta)*w, -w/2, w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v9[92] = new Vertex(w/2, w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2);
    v9[93] = new Vertex(w/2, w/2+Math.sin(theta)*w, -w/2, w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v9[94] = new Vertex(w/2, w/2, -w/2, w/2, w/2, w/2, w/2, -w/2);
    v9[95] = new Vertex(w/2, w/2+Math.sin(theta)*w, -w/2, w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v9[96] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v9[97] = new Vertex(w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v9[98] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v9[99] = new Vertex(w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v9[100] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v9[101] = new Vertex(w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v9[102] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v9[103] = new Vertex(w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v9[104] = new Vertex(w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v9[105] = new Vertex(w/2, w/2+Math.sin(theta)*w, w/2, -w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v9[106] = new Vertex(w/2, w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v9[107] = new Vertex(w/2, w/2+Math.sin(theta)*w, w/2, -w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v9[108] = new Vertex(w/2, w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v9[109] = new Vertex(w/2, w/2+Math.sin(theta)*w, w/2, -w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v9[110] = new Vertex(w/2, w/2, w/2, -w/2, w/2, w/2, w/2, -w/2);
    v9[111] = new Vertex(w/2, w/2+Math.sin(theta)*w, w/2, -w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v9[112] = new Vertex(w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v9[113] = new Vertex(w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v9[114] = new Vertex(w/2, w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v9[115] = new Vertex(w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v9[116] = new Vertex(w/2, w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v9[117] = new Vertex(w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v9[118] = new Vertex(w/2, w/2, w/2, w/2, -w/2, w/2, w/2, -w/2);
    v9[119] = new Vertex(w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v9[120] = new Vertex(w/2, w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v9[121] = new Vertex(w/2, w/2+Math.sin(theta)*w, w/2, w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v9[122] = new Vertex(w/2, w/2, w/2, w/2, w/2, -w/2, w/2, -w/2);
    v9[123] = new Vertex(w/2, w/2+Math.sin(theta)*w, w/2, w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v9[124] = new Vertex(w/2, w/2, w/2, w/2, w/2, w/2, -w/2, -w/2);
    v9[125] = new Vertex(w/2, w/2+Math.sin(theta)*w, w/2, w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v9[126] = new Vertex(w/2, w/2, w/2, w/2, w/2, w/2, w/2, -w/2);
    v9[127] = new Vertex(w/2, w/2+Math.sin(theta)*w, w/2, w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    faces.push(new Face(color9, v9[0], v9[1], v9[3], v9[2]));
    faces.push(new Face(color9, v9[0], v9[1], v9[5], v9[4]));
    faces.push(new Face(color9, v9[0], v9[1], v9[9], v9[8]));
    faces.push(new Face(color9, v9[0], v9[1], v9[17], v9[16]));
    faces.push(new Face(color9, v9[0], v9[1], v9[33], v9[32]));
    faces.push(new Face(color9, v9[0], v9[1], v9[65], v9[64]));
    faces.push(new Face(color9, v9[0], v9[2], v9[6], v9[4]));
    faces.push(new Face(color9, v9[0], v9[2], v9[10], v9[8]));
    faces.push(new Face(color9, v9[0], v9[2], v9[18], v9[16]));
    faces.push(new Face(color9, v9[0], v9[2], v9[34], v9[32]));
    faces.push(new Face(color9, v9[0], v9[2], v9[66], v9[64]));
    faces.push(new Face(color9, v9[0], v9[4], v9[12], v9[8]));
    faces.push(new Face(color9, v9[0], v9[4], v9[20], v9[16]));
    faces.push(new Face(color9, v9[0], v9[4], v9[36], v9[32]));
    faces.push(new Face(color9, v9[0], v9[4], v9[68], v9[64]));
    faces.push(new Face(color9, v9[0], v9[8], v9[24], v9[16]));
    faces.push(new Face(color9, v9[0], v9[8], v9[40], v9[32]));
    faces.push(new Face(color9, v9[0], v9[8], v9[72], v9[64]));
    faces.push(new Face(color9, v9[0], v9[16], v9[48], v9[32]));
    faces.push(new Face(color9, v9[0], v9[16], v9[80], v9[64]));
    faces.push(new Face(color9, v9[0], v9[32], v9[96], v9[64]));
    faces.push(new Face(color9, v9[1], v9[3], v9[7], v9[5]));
    faces.push(new Face(color9, v9[1], v9[3], v9[11], v9[9]));
    faces.push(new Face(color9, v9[1], v9[3], v9[19], v9[17]));
    faces.push(new Face(color9, v9[1], v9[3], v9[35], v9[33]));
    faces.push(new Face(color9, v9[1], v9[3], v9[67], v9[65]));
    faces.push(new Face(color9, v9[1], v9[5], v9[13], v9[9]));
    faces.push(new Face(color9, v9[1], v9[5], v9[21], v9[17]));
    faces.push(new Face(color9, v9[1], v9[5], v9[37], v9[33]));
    faces.push(new Face(color9, v9[1], v9[5], v9[69], v9[65]));
    faces.push(new Face(color9, v9[1], v9[9], v9[25], v9[17]));
    faces.push(new Face(color9, v9[1], v9[9], v9[41], v9[33]));
    faces.push(new Face(color9, v9[1], v9[9], v9[73], v9[65]));
    faces.push(new Face(color9, v9[1], v9[17], v9[49], v9[33]));
    faces.push(new Face(color9, v9[1], v9[17], v9[81], v9[65]));
    faces.push(new Face(color9, v9[1], v9[33], v9[97], v9[65]));
    faces.push(new Face(color9, v9[2], v9[3], v9[7], v9[6]));
    faces.push(new Face(color9, v9[2], v9[3], v9[11], v9[10]));
    faces.push(new Face(color9, v9[2], v9[3], v9[19], v9[18]));
    faces.push(new Face(color9, v9[2], v9[3], v9[35], v9[34]));
    faces.push(new Face(color9, v9[2], v9[3], v9[67], v9[66]));
    faces.push(new Face(color9, v9[2], v9[6], v9[14], v9[10]));
    faces.push(new Face(color9, v9[2], v9[6], v9[22], v9[18]));
    faces.push(new Face(color9, v9[2], v9[6], v9[38], v9[34]));
    faces.push(new Face(color9, v9[2], v9[6], v9[70], v9[66]));
    faces.push(new Face(color9, v9[2], v9[10], v9[26], v9[18]));
    faces.push(new Face(color9, v9[2], v9[10], v9[42], v9[34]));
    faces.push(new Face(color9, v9[2], v9[10], v9[74], v9[66]));
    faces.push(new Face(color9, v9[2], v9[18], v9[50], v9[34]));
    faces.push(new Face(color9, v9[2], v9[18], v9[82], v9[66]));
    faces.push(new Face(color9, v9[2], v9[34], v9[98], v9[66]));
    faces.push(new Face(color9, v9[3], v9[7], v9[15], v9[11]));
    faces.push(new Face(color9, v9[3], v9[7], v9[23], v9[19]));
    faces.push(new Face(color9, v9[3], v9[7], v9[39], v9[35]));
    faces.push(new Face(color9, v9[3], v9[7], v9[71], v9[67]));
    faces.push(new Face(color9, v9[3], v9[11], v9[27], v9[19]));
    faces.push(new Face(color9, v9[3], v9[11], v9[43], v9[35]));
    faces.push(new Face(color9, v9[3], v9[11], v9[75], v9[67]));
    faces.push(new Face(color9, v9[3], v9[19], v9[51], v9[35]));
    faces.push(new Face(color9, v9[3], v9[19], v9[83], v9[67]));
    faces.push(new Face(color9, v9[3], v9[35], v9[99], v9[67]));
    faces.push(new Face(color9, v9[4], v9[5], v9[7], v9[6]));
    faces.push(new Face(color9, v9[4], v9[5], v9[13], v9[12]));
    faces.push(new Face(color9, v9[4], v9[5], v9[21], v9[20]));
    faces.push(new Face(color9, v9[4], v9[5], v9[37], v9[36]));
    faces.push(new Face(color9, v9[4], v9[5], v9[69], v9[68]));
    faces.push(new Face(color9, v9[4], v9[6], v9[14], v9[12]));
    faces.push(new Face(color9, v9[4], v9[6], v9[22], v9[20]));
    faces.push(new Face(color9, v9[4], v9[6], v9[38], v9[36]));
    faces.push(new Face(color9, v9[4], v9[6], v9[70], v9[68]));
    faces.push(new Face(color9, v9[4], v9[12], v9[28], v9[20]));
    faces.push(new Face(color9, v9[4], v9[12], v9[44], v9[36]));
    faces.push(new Face(color9, v9[4], v9[12], v9[76], v9[68]));
    faces.push(new Face(color9, v9[4], v9[20], v9[52], v9[36]));
    faces.push(new Face(color9, v9[4], v9[20], v9[84], v9[68]));
    faces.push(new Face(color9, v9[4], v9[36], v9[100], v9[68]));
    faces.push(new Face(color9, v9[5], v9[7], v9[15], v9[13]));
    faces.push(new Face(color9, v9[5], v9[7], v9[23], v9[21]));
    faces.push(new Face(color9, v9[5], v9[7], v9[39], v9[37]));
    faces.push(new Face(color9, v9[5], v9[7], v9[71], v9[69]));
    faces.push(new Face(color9, v9[5], v9[13], v9[29], v9[21]));
    faces.push(new Face(color9, v9[5], v9[13], v9[45], v9[37]));
    faces.push(new Face(color9, v9[5], v9[13], v9[77], v9[69]));
    faces.push(new Face(color9, v9[5], v9[21], v9[53], v9[37]));
    faces.push(new Face(color9, v9[5], v9[21], v9[85], v9[69]));
    faces.push(new Face(color9, v9[5], v9[37], v9[101], v9[69]));
    faces.push(new Face(color9, v9[6], v9[7], v9[15], v9[14]));
    faces.push(new Face(color9, v9[6], v9[7], v9[23], v9[22]));
    faces.push(new Face(color9, v9[6], v9[7], v9[39], v9[38]));
    faces.push(new Face(color9, v9[6], v9[7], v9[71], v9[70]));
    faces.push(new Face(color9, v9[6], v9[14], v9[30], v9[22]));
    faces.push(new Face(color9, v9[6], v9[14], v9[46], v9[38]));
    faces.push(new Face(color9, v9[6], v9[14], v9[78], v9[70]));
    faces.push(new Face(color9, v9[6], v9[22], v9[54], v9[38]));
    faces.push(new Face(color9, v9[6], v9[22], v9[86], v9[70]));
    faces.push(new Face(color9, v9[6], v9[38], v9[102], v9[70]));
    faces.push(new Face(color9, v9[7], v9[15], v9[31], v9[23]));
    faces.push(new Face(color9, v9[7], v9[15], v9[47], v9[39]));
    faces.push(new Face(color9, v9[7], v9[15], v9[79], v9[71]));
    faces.push(new Face(color9, v9[7], v9[23], v9[55], v9[39]));
    faces.push(new Face(color9, v9[7], v9[23], v9[87], v9[71]));
    faces.push(new Face(color9, v9[7], v9[39], v9[103], v9[71]));
    faces.push(new Face(color9, v9[8], v9[9], v9[11], v9[10]));
    faces.push(new Face(color9, v9[8], v9[9], v9[13], v9[12]));
    faces.push(new Face(color9, v9[8], v9[9], v9[25], v9[24]));
    faces.push(new Face(color9, v9[8], v9[9], v9[41], v9[40]));
    faces.push(new Face(color9, v9[8], v9[9], v9[73], v9[72]));
    faces.push(new Face(color9, v9[8], v9[10], v9[14], v9[12]));
    faces.push(new Face(color9, v9[8], v9[10], v9[26], v9[24]));
    faces.push(new Face(color9, v9[8], v9[10], v9[42], v9[40]));
    faces.push(new Face(color9, v9[8], v9[10], v9[74], v9[72]));
    faces.push(new Face(color9, v9[8], v9[12], v9[28], v9[24]));
    faces.push(new Face(color9, v9[8], v9[12], v9[44], v9[40]));
    faces.push(new Face(color9, v9[8], v9[12], v9[76], v9[72]));
    faces.push(new Face(color9, v9[8], v9[24], v9[56], v9[40]));
    faces.push(new Face(color9, v9[8], v9[24], v9[88], v9[72]));
    faces.push(new Face(color9, v9[8], v9[40], v9[104], v9[72]));
    faces.push(new Face(color9, v9[9], v9[11], v9[15], v9[13]));
    faces.push(new Face(color9, v9[9], v9[11], v9[27], v9[25]));
    faces.push(new Face(color9, v9[9], v9[11], v9[43], v9[41]));
    faces.push(new Face(color9, v9[9], v9[11], v9[75], v9[73]));
    faces.push(new Face(color9, v9[9], v9[13], v9[29], v9[25]));
    faces.push(new Face(color9, v9[9], v9[13], v9[45], v9[41]));
    faces.push(new Face(color9, v9[9], v9[13], v9[77], v9[73]));
    faces.push(new Face(color9, v9[9], v9[25], v9[57], v9[41]));
    faces.push(new Face(color9, v9[9], v9[25], v9[89], v9[73]));
    faces.push(new Face(color9, v9[9], v9[41], v9[105], v9[73]));
    faces.push(new Face(color9, v9[10], v9[11], v9[15], v9[14]));
    faces.push(new Face(color9, v9[10], v9[11], v9[27], v9[26]));
    faces.push(new Face(color9, v9[10], v9[11], v9[43], v9[42]));
    faces.push(new Face(color9, v9[10], v9[11], v9[75], v9[74]));
    faces.push(new Face(color9, v9[10], v9[14], v9[30], v9[26]));
    faces.push(new Face(color9, v9[10], v9[14], v9[46], v9[42]));
    faces.push(new Face(color9, v9[10], v9[14], v9[78], v9[74]));
    faces.push(new Face(color9, v9[10], v9[26], v9[58], v9[42]));
    faces.push(new Face(color9, v9[10], v9[26], v9[90], v9[74]));
    faces.push(new Face(color9, v9[10], v9[42], v9[106], v9[74]));
    faces.push(new Face(color9, v9[11], v9[15], v9[31], v9[27]));
    faces.push(new Face(color9, v9[11], v9[15], v9[47], v9[43]));
    faces.push(new Face(color9, v9[11], v9[15], v9[79], v9[75]));
    faces.push(new Face(color9, v9[11], v9[27], v9[59], v9[43]));
    faces.push(new Face(color9, v9[11], v9[27], v9[91], v9[75]));
    faces.push(new Face(color9, v9[11], v9[43], v9[107], v9[75]));
    faces.push(new Face(color9, v9[12], v9[13], v9[15], v9[14]));
    faces.push(new Face(color9, v9[12], v9[13], v9[29], v9[28]));
    faces.push(new Face(color9, v9[12], v9[13], v9[45], v9[44]));
    faces.push(new Face(color9, v9[12], v9[13], v9[77], v9[76]));
    faces.push(new Face(color9, v9[12], v9[14], v9[30], v9[28]));
    faces.push(new Face(color9, v9[12], v9[14], v9[46], v9[44]));
    faces.push(new Face(color9, v9[12], v9[14], v9[78], v9[76]));
    faces.push(new Face(color9, v9[12], v9[28], v9[60], v9[44]));
    faces.push(new Face(color9, v9[12], v9[28], v9[92], v9[76]));
    faces.push(new Face(color9, v9[12], v9[44], v9[108], v9[76]));
    faces.push(new Face(color9, v9[13], v9[15], v9[31], v9[29]));
    faces.push(new Face(color9, v9[13], v9[15], v9[47], v9[45]));
    faces.push(new Face(color9, v9[13], v9[15], v9[79], v9[77]));
    faces.push(new Face(color9, v9[13], v9[29], v9[61], v9[45]));
    faces.push(new Face(color9, v9[13], v9[29], v9[93], v9[77]));
    faces.push(new Face(color9, v9[13], v9[45], v9[109], v9[77]));
    faces.push(new Face(color9, v9[14], v9[15], v9[31], v9[30]));
    faces.push(new Face(color9, v9[14], v9[15], v9[47], v9[46]));
    faces.push(new Face(color9, v9[14], v9[15], v9[79], v9[78]));
    faces.push(new Face(color9, v9[14], v9[30], v9[62], v9[46]));
    faces.push(new Face(color9, v9[14], v9[30], v9[94], v9[78]));
    faces.push(new Face(color9, v9[14], v9[46], v9[110], v9[78]));
    faces.push(new Face(color9, v9[15], v9[31], v9[63], v9[47]));
    faces.push(new Face(color9, v9[15], v9[31], v9[95], v9[79]));
    faces.push(new Face(color9, v9[15], v9[47], v9[111], v9[79]));
    faces.push(new Face(color9, v9[16], v9[17], v9[19], v9[18]));
    faces.push(new Face(color9, v9[16], v9[17], v9[21], v9[20]));
    faces.push(new Face(color9, v9[16], v9[17], v9[25], v9[24]));
    faces.push(new Face(color9, v9[16], v9[17], v9[49], v9[48]));
    faces.push(new Face(color9, v9[16], v9[17], v9[81], v9[80]));
    faces.push(new Face(color9, v9[16], v9[18], v9[22], v9[20]));
    faces.push(new Face(color9, v9[16], v9[18], v9[26], v9[24]));
    faces.push(new Face(color9, v9[16], v9[18], v9[50], v9[48]));
    faces.push(new Face(color9, v9[16], v9[18], v9[82], v9[80]));
    faces.push(new Face(color9, v9[16], v9[20], v9[28], v9[24]));
    faces.push(new Face(color9, v9[16], v9[20], v9[52], v9[48]));
    faces.push(new Face(color9, v9[16], v9[20], v9[84], v9[80]));
    faces.push(new Face(color9, v9[16], v9[24], v9[56], v9[48]));
    faces.push(new Face(color9, v9[16], v9[24], v9[88], v9[80]));
    faces.push(new Face(color9, v9[16], v9[48], v9[112], v9[80]));
    faces.push(new Face(color9, v9[17], v9[19], v9[23], v9[21]));
    faces.push(new Face(color9, v9[17], v9[19], v9[27], v9[25]));
    faces.push(new Face(color9, v9[17], v9[19], v9[51], v9[49]));
    faces.push(new Face(color9, v9[17], v9[19], v9[83], v9[81]));
    faces.push(new Face(color9, v9[17], v9[21], v9[29], v9[25]));
    faces.push(new Face(color9, v9[17], v9[21], v9[53], v9[49]));
    faces.push(new Face(color9, v9[17], v9[21], v9[85], v9[81]));
    faces.push(new Face(color9, v9[17], v9[25], v9[57], v9[49]));
    faces.push(new Face(color9, v9[17], v9[25], v9[89], v9[81]));
    faces.push(new Face(color9, v9[17], v9[49], v9[113], v9[81]));
    faces.push(new Face(color9, v9[18], v9[19], v9[23], v9[22]));
    faces.push(new Face(color9, v9[18], v9[19], v9[27], v9[26]));
    faces.push(new Face(color9, v9[18], v9[19], v9[51], v9[50]));
    faces.push(new Face(color9, v9[18], v9[19], v9[83], v9[82]));
    faces.push(new Face(color9, v9[18], v9[22], v9[30], v9[26]));
    faces.push(new Face(color9, v9[18], v9[22], v9[54], v9[50]));
    faces.push(new Face(color9, v9[18], v9[22], v9[86], v9[82]));
    faces.push(new Face(color9, v9[18], v9[26], v9[58], v9[50]));
    faces.push(new Face(color9, v9[18], v9[26], v9[90], v9[82]));
    faces.push(new Face(color9, v9[18], v9[50], v9[114], v9[82]));
    faces.push(new Face(color9, v9[19], v9[23], v9[31], v9[27]));
    faces.push(new Face(color9, v9[19], v9[23], v9[55], v9[51]));
    faces.push(new Face(color9, v9[19], v9[23], v9[87], v9[83]));
    faces.push(new Face(color9, v9[19], v9[27], v9[59], v9[51]));
    faces.push(new Face(color9, v9[19], v9[27], v9[91], v9[83]));
    faces.push(new Face(color9, v9[19], v9[51], v9[115], v9[83]));
    faces.push(new Face(color9, v9[20], v9[21], v9[23], v9[22]));
    faces.push(new Face(color9, v9[20], v9[21], v9[29], v9[28]));
    faces.push(new Face(color9, v9[20], v9[21], v9[53], v9[52]));
    faces.push(new Face(color9, v9[20], v9[21], v9[85], v9[84]));
    faces.push(new Face(color9, v9[20], v9[22], v9[30], v9[28]));
    faces.push(new Face(color9, v9[20], v9[22], v9[54], v9[52]));
    faces.push(new Face(color9, v9[20], v9[22], v9[86], v9[84]));
    faces.push(new Face(color9, v9[20], v9[28], v9[60], v9[52]));
    faces.push(new Face(color9, v9[20], v9[28], v9[92], v9[84]));
    faces.push(new Face(color9, v9[20], v9[52], v9[116], v9[84]));
    faces.push(new Face(color9, v9[21], v9[23], v9[31], v9[29]));
    faces.push(new Face(color9, v9[21], v9[23], v9[55], v9[53]));
    faces.push(new Face(color9, v9[21], v9[23], v9[87], v9[85]));
    faces.push(new Face(color9, v9[21], v9[29], v9[61], v9[53]));
    faces.push(new Face(color9, v9[21], v9[29], v9[93], v9[85]));
    faces.push(new Face(color9, v9[21], v9[53], v9[117], v9[85]));
    faces.push(new Face(color9, v9[22], v9[23], v9[31], v9[30]));
    faces.push(new Face(color9, v9[22], v9[23], v9[55], v9[54]));
    faces.push(new Face(color9, v9[22], v9[23], v9[87], v9[86]));
    faces.push(new Face(color9, v9[22], v9[30], v9[62], v9[54]));
    faces.push(new Face(color9, v9[22], v9[30], v9[94], v9[86]));
    faces.push(new Face(color9, v9[22], v9[54], v9[118], v9[86]));
    faces.push(new Face(color9, v9[23], v9[31], v9[63], v9[55]));
    faces.push(new Face(color9, v9[23], v9[31], v9[95], v9[87]));
    faces.push(new Face(color9, v9[23], v9[55], v9[119], v9[87]));
    faces.push(new Face(color9, v9[24], v9[25], v9[27], v9[26]));
    faces.push(new Face(color9, v9[24], v9[25], v9[29], v9[28]));
    faces.push(new Face(color9, v9[24], v9[25], v9[57], v9[56]));
    faces.push(new Face(color9, v9[24], v9[25], v9[89], v9[88]));
    faces.push(new Face(color9, v9[24], v9[26], v9[30], v9[28]));
    faces.push(new Face(color9, v9[24], v9[26], v9[58], v9[56]));
    faces.push(new Face(color9, v9[24], v9[26], v9[90], v9[88]));
    faces.push(new Face(color9, v9[24], v9[28], v9[60], v9[56]));
    faces.push(new Face(color9, v9[24], v9[28], v9[92], v9[88]));
    faces.push(new Face(color9, v9[24], v9[56], v9[120], v9[88]));
    faces.push(new Face(color9, v9[25], v9[27], v9[31], v9[29]));
    faces.push(new Face(color9, v9[25], v9[27], v9[59], v9[57]));
    faces.push(new Face(color9, v9[25], v9[27], v9[91], v9[89]));
    faces.push(new Face(color9, v9[25], v9[29], v9[61], v9[57]));
    faces.push(new Face(color9, v9[25], v9[29], v9[93], v9[89]));
    faces.push(new Face(color9, v9[25], v9[57], v9[121], v9[89]));
    faces.push(new Face(color9, v9[26], v9[27], v9[31], v9[30]));
    faces.push(new Face(color9, v9[26], v9[27], v9[59], v9[58]));
    faces.push(new Face(color9, v9[26], v9[27], v9[91], v9[90]));
    faces.push(new Face(color9, v9[26], v9[30], v9[62], v9[58]));
    faces.push(new Face(color9, v9[26], v9[30], v9[94], v9[90]));
    faces.push(new Face(color9, v9[26], v9[58], v9[122], v9[90]));
    faces.push(new Face(color9, v9[27], v9[31], v9[63], v9[59]));
    faces.push(new Face(color9, v9[27], v9[31], v9[95], v9[91]));
    faces.push(new Face(color9, v9[27], v9[59], v9[123], v9[91]));
    faces.push(new Face(color9, v9[28], v9[29], v9[31], v9[30]));
    faces.push(new Face(color9, v9[28], v9[29], v9[61], v9[60]));
    faces.push(new Face(color9, v9[28], v9[29], v9[93], v9[92]));
    faces.push(new Face(color9, v9[28], v9[30], v9[62], v9[60]));
    faces.push(new Face(color9, v9[28], v9[30], v9[94], v9[92]));
    faces.push(new Face(color9, v9[28], v9[60], v9[124], v9[92]));
    faces.push(new Face(color9, v9[29], v9[31], v9[63], v9[61]));
    faces.push(new Face(color9, v9[29], v9[31], v9[95], v9[93]));
    faces.push(new Face(color9, v9[29], v9[61], v9[125], v9[93]));
    faces.push(new Face(color9, v9[30], v9[31], v9[63], v9[62]));
    faces.push(new Face(color9, v9[30], v9[31], v9[95], v9[94]));
    faces.push(new Face(color9, v9[30], v9[62], v9[126], v9[94]));
    faces.push(new Face(color9, v9[31], v9[63], v9[127], v9[95]));
    faces.push(new Face(color9, v9[32], v9[33], v9[35], v9[34]));
    faces.push(new Face(color9, v9[32], v9[33], v9[37], v9[36]));
    faces.push(new Face(color9, v9[32], v9[33], v9[41], v9[40]));
    faces.push(new Face(color9, v9[32], v9[33], v9[49], v9[48]));
    faces.push(new Face(color9, v9[32], v9[33], v9[97], v9[96]));
    faces.push(new Face(color9, v9[32], v9[34], v9[38], v9[36]));
    faces.push(new Face(color9, v9[32], v9[34], v9[42], v9[40]));
    faces.push(new Face(color9, v9[32], v9[34], v9[50], v9[48]));
    faces.push(new Face(color9, v9[32], v9[34], v9[98], v9[96]));
    faces.push(new Face(color9, v9[32], v9[36], v9[44], v9[40]));
    faces.push(new Face(color9, v9[32], v9[36], v9[52], v9[48]));
    faces.push(new Face(color9, v9[32], v9[36], v9[100], v9[96]));
    faces.push(new Face(color9, v9[32], v9[40], v9[56], v9[48]));
    faces.push(new Face(color9, v9[32], v9[40], v9[104], v9[96]));
    faces.push(new Face(color9, v9[32], v9[48], v9[112], v9[96]));
    faces.push(new Face(color9, v9[33], v9[35], v9[39], v9[37]));
    faces.push(new Face(color9, v9[33], v9[35], v9[43], v9[41]));
    faces.push(new Face(color9, v9[33], v9[35], v9[51], v9[49]));
    faces.push(new Face(color9, v9[33], v9[35], v9[99], v9[97]));
    faces.push(new Face(color9, v9[33], v9[37], v9[45], v9[41]));
    faces.push(new Face(color9, v9[33], v9[37], v9[53], v9[49]));
    faces.push(new Face(color9, v9[33], v9[37], v9[101], v9[97]));
    faces.push(new Face(color9, v9[33], v9[41], v9[57], v9[49]));
    faces.push(new Face(color9, v9[33], v9[41], v9[105], v9[97]));
    faces.push(new Face(color9, v9[33], v9[49], v9[113], v9[97]));
    faces.push(new Face(color9, v9[34], v9[35], v9[39], v9[38]));
    faces.push(new Face(color9, v9[34], v9[35], v9[43], v9[42]));
    faces.push(new Face(color9, v9[34], v9[35], v9[51], v9[50]));
    faces.push(new Face(color9, v9[34], v9[35], v9[99], v9[98]));
    faces.push(new Face(color9, v9[34], v9[38], v9[46], v9[42]));
    faces.push(new Face(color9, v9[34], v9[38], v9[54], v9[50]));
    faces.push(new Face(color9, v9[34], v9[38], v9[102], v9[98]));
    faces.push(new Face(color9, v9[34], v9[42], v9[58], v9[50]));
    faces.push(new Face(color9, v9[34], v9[42], v9[106], v9[98]));
    faces.push(new Face(color9, v9[34], v9[50], v9[114], v9[98]));
    faces.push(new Face(color9, v9[35], v9[39], v9[47], v9[43]));
    faces.push(new Face(color9, v9[35], v9[39], v9[55], v9[51]));
    faces.push(new Face(color9, v9[35], v9[39], v9[103], v9[99]));
    faces.push(new Face(color9, v9[35], v9[43], v9[59], v9[51]));
    faces.push(new Face(color9, v9[35], v9[43], v9[107], v9[99]));
    faces.push(new Face(color9, v9[35], v9[51], v9[115], v9[99]));
    faces.push(new Face(color9, v9[36], v9[37], v9[39], v9[38]));
    faces.push(new Face(color9, v9[36], v9[37], v9[45], v9[44]));
    faces.push(new Face(color9, v9[36], v9[37], v9[53], v9[52]));
    faces.push(new Face(color9, v9[36], v9[37], v9[101], v9[100]));
    faces.push(new Face(color9, v9[36], v9[38], v9[46], v9[44]));
    faces.push(new Face(color9, v9[36], v9[38], v9[54], v9[52]));
    faces.push(new Face(color9, v9[36], v9[38], v9[102], v9[100]));
    faces.push(new Face(color9, v9[36], v9[44], v9[60], v9[52]));
    faces.push(new Face(color9, v9[36], v9[44], v9[108], v9[100]));
    faces.push(new Face(color9, v9[36], v9[52], v9[116], v9[100]));
    faces.push(new Face(color9, v9[37], v9[39], v9[47], v9[45]));
    faces.push(new Face(color9, v9[37], v9[39], v9[55], v9[53]));
    faces.push(new Face(color9, v9[37], v9[39], v9[103], v9[101]));
    faces.push(new Face(color9, v9[37], v9[45], v9[61], v9[53]));
    faces.push(new Face(color9, v9[37], v9[45], v9[109], v9[101]));
    faces.push(new Face(color9, v9[37], v9[53], v9[117], v9[101]));
    faces.push(new Face(color9, v9[38], v9[39], v9[47], v9[46]));
    faces.push(new Face(color9, v9[38], v9[39], v9[55], v9[54]));
    faces.push(new Face(color9, v9[38], v9[39], v9[103], v9[102]));
    faces.push(new Face(color9, v9[38], v9[46], v9[62], v9[54]));
    faces.push(new Face(color9, v9[38], v9[46], v9[110], v9[102]));
    faces.push(new Face(color9, v9[38], v9[54], v9[118], v9[102]));
    faces.push(new Face(color9, v9[39], v9[47], v9[63], v9[55]));
    faces.push(new Face(color9, v9[39], v9[47], v9[111], v9[103]));
    faces.push(new Face(color9, v9[39], v9[55], v9[119], v9[103]));
    faces.push(new Face(color9, v9[40], v9[41], v9[43], v9[42]));
    faces.push(new Face(color9, v9[40], v9[41], v9[45], v9[44]));
    faces.push(new Face(color9, v9[40], v9[41], v9[57], v9[56]));
    faces.push(new Face(color9, v9[40], v9[41], v9[105], v9[104]));
    faces.push(new Face(color9, v9[40], v9[42], v9[46], v9[44]));
    faces.push(new Face(color9, v9[40], v9[42], v9[58], v9[56]));
    faces.push(new Face(color9, v9[40], v9[42], v9[106], v9[104]));
    faces.push(new Face(color9, v9[40], v9[44], v9[60], v9[56]));
    faces.push(new Face(color9, v9[40], v9[44], v9[108], v9[104]));
    faces.push(new Face(color9, v9[40], v9[56], v9[120], v9[104]));
    faces.push(new Face(color9, v9[41], v9[43], v9[47], v9[45]));
    faces.push(new Face(color9, v9[41], v9[43], v9[59], v9[57]));
    faces.push(new Face(color9, v9[41], v9[43], v9[107], v9[105]));
    faces.push(new Face(color9, v9[41], v9[45], v9[61], v9[57]));
    faces.push(new Face(color9, v9[41], v9[45], v9[109], v9[105]));
    faces.push(new Face(color9, v9[41], v9[57], v9[121], v9[105]));
    faces.push(new Face(color9, v9[42], v9[43], v9[47], v9[46]));
    faces.push(new Face(color9, v9[42], v9[43], v9[59], v9[58]));
    faces.push(new Face(color9, v9[42], v9[43], v9[107], v9[106]));
    faces.push(new Face(color9, v9[42], v9[46], v9[62], v9[58]));
    faces.push(new Face(color9, v9[42], v9[46], v9[110], v9[106]));
    faces.push(new Face(color9, v9[42], v9[58], v9[122], v9[106]));
    faces.push(new Face(color9, v9[43], v9[47], v9[63], v9[59]));
    faces.push(new Face(color9, v9[43], v9[47], v9[111], v9[107]));
    faces.push(new Face(color9, v9[43], v9[59], v9[123], v9[107]));
    faces.push(new Face(color9, v9[44], v9[45], v9[47], v9[46]));
    faces.push(new Face(color9, v9[44], v9[45], v9[61], v9[60]));
    faces.push(new Face(color9, v9[44], v9[45], v9[109], v9[108]));
    faces.push(new Face(color9, v9[44], v9[46], v9[62], v9[60]));
    faces.push(new Face(color9, v9[44], v9[46], v9[110], v9[108]));
    faces.push(new Face(color9, v9[44], v9[60], v9[124], v9[108]));
    faces.push(new Face(color9, v9[45], v9[47], v9[63], v9[61]));
    faces.push(new Face(color9, v9[45], v9[47], v9[111], v9[109]));
    faces.push(new Face(color9, v9[45], v9[61], v9[125], v9[109]));
    faces.push(new Face(color9, v9[46], v9[47], v9[63], v9[62]));
    faces.push(new Face(color9, v9[46], v9[47], v9[111], v9[110]));
    faces.push(new Face(color9, v9[46], v9[62], v9[126], v9[110]));
    faces.push(new Face(color9, v9[47], v9[63], v9[127], v9[111]));
    faces.push(new Face(color9, v9[48], v9[49], v9[51], v9[50]));
    faces.push(new Face(color9, v9[48], v9[49], v9[53], v9[52]));
    faces.push(new Face(color9, v9[48], v9[49], v9[57], v9[56]));
    faces.push(new Face(color9, v9[48], v9[49], v9[113], v9[112]));
    faces.push(new Face(color9, v9[48], v9[50], v9[54], v9[52]));
    faces.push(new Face(color9, v9[48], v9[50], v9[58], v9[56]));
    faces.push(new Face(color9, v9[48], v9[50], v9[114], v9[112]));
    faces.push(new Face(color9, v9[48], v9[52], v9[60], v9[56]));
    faces.push(new Face(color9, v9[48], v9[52], v9[116], v9[112]));
    faces.push(new Face(color9, v9[48], v9[56], v9[120], v9[112]));
    faces.push(new Face(color9, v9[49], v9[51], v9[55], v9[53]));
    faces.push(new Face(color9, v9[49], v9[51], v9[59], v9[57]));
    faces.push(new Face(color9, v9[49], v9[51], v9[115], v9[113]));
    faces.push(new Face(color9, v9[49], v9[53], v9[61], v9[57]));
    faces.push(new Face(color9, v9[49], v9[53], v9[117], v9[113]));
    faces.push(new Face(color9, v9[49], v9[57], v9[121], v9[113]));
    faces.push(new Face(color9, v9[50], v9[51], v9[55], v9[54]));
    faces.push(new Face(color9, v9[50], v9[51], v9[59], v9[58]));
    faces.push(new Face(color9, v9[50], v9[51], v9[115], v9[114]));
    faces.push(new Face(color9, v9[50], v9[54], v9[62], v9[58]));
    faces.push(new Face(color9, v9[50], v9[54], v9[118], v9[114]));
    faces.push(new Face(color9, v9[50], v9[58], v9[122], v9[114]));
    faces.push(new Face(color9, v9[51], v9[55], v9[63], v9[59]));
    faces.push(new Face(color9, v9[51], v9[55], v9[119], v9[115]));
    faces.push(new Face(color9, v9[51], v9[59], v9[123], v9[115]));
    faces.push(new Face(color9, v9[52], v9[53], v9[55], v9[54]));
    faces.push(new Face(color9, v9[52], v9[53], v9[61], v9[60]));
    faces.push(new Face(color9, v9[52], v9[53], v9[117], v9[116]));
    faces.push(new Face(color9, v9[52], v9[54], v9[62], v9[60]));
    faces.push(new Face(color9, v9[52], v9[54], v9[118], v9[116]));
    faces.push(new Face(color9, v9[52], v9[60], v9[124], v9[116]));
    faces.push(new Face(color9, v9[53], v9[55], v9[63], v9[61]));
    faces.push(new Face(color9, v9[53], v9[55], v9[119], v9[117]));
    faces.push(new Face(color9, v9[53], v9[61], v9[125], v9[117]));
    faces.push(new Face(color9, v9[54], v9[55], v9[63], v9[62]));
    faces.push(new Face(color9, v9[54], v9[55], v9[119], v9[118]));
    faces.push(new Face(color9, v9[54], v9[62], v9[126], v9[118]));
    faces.push(new Face(color9, v9[55], v9[63], v9[127], v9[119]));
    faces.push(new Face(color9, v9[56], v9[57], v9[59], v9[58]));
    faces.push(new Face(color9, v9[56], v9[57], v9[61], v9[60]));
    faces.push(new Face(color9, v9[56], v9[57], v9[121], v9[120]));
    faces.push(new Face(color9, v9[56], v9[58], v9[62], v9[60]));
    faces.push(new Face(color9, v9[56], v9[58], v9[122], v9[120]));
    faces.push(new Face(color9, v9[56], v9[60], v9[124], v9[120]));
    faces.push(new Face(color9, v9[57], v9[59], v9[63], v9[61]));
    faces.push(new Face(color9, v9[57], v9[59], v9[123], v9[121]));
    faces.push(new Face(color9, v9[57], v9[61], v9[125], v9[121]));
    faces.push(new Face(color9, v9[58], v9[59], v9[63], v9[62]));
    faces.push(new Face(color9, v9[58], v9[59], v9[123], v9[122]));
    faces.push(new Face(color9, v9[58], v9[62], v9[126], v9[122]));
    faces.push(new Face(color9, v9[59], v9[63], v9[127], v9[123]));
    faces.push(new Face(color9, v9[60], v9[61], v9[63], v9[62]));
    faces.push(new Face(color9, v9[60], v9[61], v9[125], v9[124]));
    faces.push(new Face(color9, v9[60], v9[62], v9[126], v9[124]));
    faces.push(new Face(color9, v9[61], v9[63], v9[127], v9[125]));
    faces.push(new Face(color9, v9[62], v9[63], v9[127], v9[126]));
    faces.push(new Face(color9, v9[64], v9[65], v9[67], v9[66]));
    faces.push(new Face(color9, v9[64], v9[65], v9[69], v9[68]));
    faces.push(new Face(color9, v9[64], v9[65], v9[73], v9[72]));
    faces.push(new Face(color9, v9[64], v9[65], v9[81], v9[80]));
    faces.push(new Face(color9, v9[64], v9[65], v9[97], v9[96]));
    faces.push(new Face(color9, v9[64], v9[66], v9[70], v9[68]));
    faces.push(new Face(color9, v9[64], v9[66], v9[74], v9[72]));
    faces.push(new Face(color9, v9[64], v9[66], v9[82], v9[80]));
    faces.push(new Face(color9, v9[64], v9[66], v9[98], v9[96]));
    faces.push(new Face(color9, v9[64], v9[68], v9[76], v9[72]));
    faces.push(new Face(color9, v9[64], v9[68], v9[84], v9[80]));
    faces.push(new Face(color9, v9[64], v9[68], v9[100], v9[96]));
    faces.push(new Face(color9, v9[64], v9[72], v9[88], v9[80]));
    faces.push(new Face(color9, v9[64], v9[72], v9[104], v9[96]));
    faces.push(new Face(color9, v9[64], v9[80], v9[112], v9[96]));
    faces.push(new Face(color9, v9[65], v9[67], v9[71], v9[69]));
    faces.push(new Face(color9, v9[65], v9[67], v9[75], v9[73]));
    faces.push(new Face(color9, v9[65], v9[67], v9[83], v9[81]));
    faces.push(new Face(color9, v9[65], v9[67], v9[99], v9[97]));
    faces.push(new Face(color9, v9[65], v9[69], v9[77], v9[73]));
    faces.push(new Face(color9, v9[65], v9[69], v9[85], v9[81]));
    faces.push(new Face(color9, v9[65], v9[69], v9[101], v9[97]));
    faces.push(new Face(color9, v9[65], v9[73], v9[89], v9[81]));
    faces.push(new Face(color9, v9[65], v9[73], v9[105], v9[97]));
    faces.push(new Face(color9, v9[65], v9[81], v9[113], v9[97]));
    faces.push(new Face(color9, v9[66], v9[67], v9[71], v9[70]));
    faces.push(new Face(color9, v9[66], v9[67], v9[75], v9[74]));
    faces.push(new Face(color9, v9[66], v9[67], v9[83], v9[82]));
    faces.push(new Face(color9, v9[66], v9[67], v9[99], v9[98]));
    faces.push(new Face(color9, v9[66], v9[70], v9[78], v9[74]));
    faces.push(new Face(color9, v9[66], v9[70], v9[86], v9[82]));
    faces.push(new Face(color9, v9[66], v9[70], v9[102], v9[98]));
    faces.push(new Face(color9, v9[66], v9[74], v9[90], v9[82]));
    faces.push(new Face(color9, v9[66], v9[74], v9[106], v9[98]));
    faces.push(new Face(color9, v9[66], v9[82], v9[114], v9[98]));
    faces.push(new Face(color9, v9[67], v9[71], v9[79], v9[75]));
    faces.push(new Face(color9, v9[67], v9[71], v9[87], v9[83]));
    faces.push(new Face(color9, v9[67], v9[71], v9[103], v9[99]));
    faces.push(new Face(color9, v9[67], v9[75], v9[91], v9[83]));
    faces.push(new Face(color9, v9[67], v9[75], v9[107], v9[99]));
    faces.push(new Face(color9, v9[67], v9[83], v9[115], v9[99]));
    faces.push(new Face(color9, v9[68], v9[69], v9[71], v9[70]));
    faces.push(new Face(color9, v9[68], v9[69], v9[77], v9[76]));
    faces.push(new Face(color9, v9[68], v9[69], v9[85], v9[84]));
    faces.push(new Face(color9, v9[68], v9[69], v9[101], v9[100]));
    faces.push(new Face(color9, v9[68], v9[70], v9[78], v9[76]));
    faces.push(new Face(color9, v9[68], v9[70], v9[86], v9[84]));
    faces.push(new Face(color9, v9[68], v9[70], v9[102], v9[100]));
    faces.push(new Face(color9, v9[68], v9[76], v9[92], v9[84]));
    faces.push(new Face(color9, v9[68], v9[76], v9[108], v9[100]));
    faces.push(new Face(color9, v9[68], v9[84], v9[116], v9[100]));
    faces.push(new Face(color9, v9[69], v9[71], v9[79], v9[77]));
    faces.push(new Face(color9, v9[69], v9[71], v9[87], v9[85]));
    faces.push(new Face(color9, v9[69], v9[71], v9[103], v9[101]));
    faces.push(new Face(color9, v9[69], v9[77], v9[93], v9[85]));
    faces.push(new Face(color9, v9[69], v9[77], v9[109], v9[101]));
    faces.push(new Face(color9, v9[69], v9[85], v9[117], v9[101]));
    faces.push(new Face(color9, v9[70], v9[71], v9[79], v9[78]));
    faces.push(new Face(color9, v9[70], v9[71], v9[87], v9[86]));
    faces.push(new Face(color9, v9[70], v9[71], v9[103], v9[102]));
    faces.push(new Face(color9, v9[70], v9[78], v9[94], v9[86]));
    faces.push(new Face(color9, v9[70], v9[78], v9[110], v9[102]));
    faces.push(new Face(color9, v9[70], v9[86], v9[118], v9[102]));
    faces.push(new Face(color9, v9[71], v9[79], v9[95], v9[87]));
    faces.push(new Face(color9, v9[71], v9[79], v9[111], v9[103]));
    faces.push(new Face(color9, v9[71], v9[87], v9[119], v9[103]));
    faces.push(new Face(color9, v9[72], v9[73], v9[75], v9[74]));
    faces.push(new Face(color9, v9[72], v9[73], v9[77], v9[76]));
    faces.push(new Face(color9, v9[72], v9[73], v9[89], v9[88]));
    faces.push(new Face(color9, v9[72], v9[73], v9[105], v9[104]));
    faces.push(new Face(color9, v9[72], v9[74], v9[78], v9[76]));
    faces.push(new Face(color9, v9[72], v9[74], v9[90], v9[88]));
    faces.push(new Face(color9, v9[72], v9[74], v9[106], v9[104]));
    faces.push(new Face(color9, v9[72], v9[76], v9[92], v9[88]));
    faces.push(new Face(color9, v9[72], v9[76], v9[108], v9[104]));
    faces.push(new Face(color9, v9[72], v9[88], v9[120], v9[104]));
    faces.push(new Face(color9, v9[73], v9[75], v9[79], v9[77]));
    faces.push(new Face(color9, v9[73], v9[75], v9[91], v9[89]));
    faces.push(new Face(color9, v9[73], v9[75], v9[107], v9[105]));
    faces.push(new Face(color9, v9[73], v9[77], v9[93], v9[89]));
    faces.push(new Face(color9, v9[73], v9[77], v9[109], v9[105]));
    faces.push(new Face(color9, v9[73], v9[89], v9[121], v9[105]));
    faces.push(new Face(color9, v9[74], v9[75], v9[79], v9[78]));
    faces.push(new Face(color9, v9[74], v9[75], v9[91], v9[90]));
    faces.push(new Face(color9, v9[74], v9[75], v9[107], v9[106]));
    faces.push(new Face(color9, v9[74], v9[78], v9[94], v9[90]));
    faces.push(new Face(color9, v9[74], v9[78], v9[110], v9[106]));
    faces.push(new Face(color9, v9[74], v9[90], v9[122], v9[106]));
    faces.push(new Face(color9, v9[75], v9[79], v9[95], v9[91]));
    faces.push(new Face(color9, v9[75], v9[79], v9[111], v9[107]));
    faces.push(new Face(color9, v9[75], v9[91], v9[123], v9[107]));
    faces.push(new Face(color9, v9[76], v9[77], v9[79], v9[78]));
    faces.push(new Face(color9, v9[76], v9[77], v9[93], v9[92]));
    faces.push(new Face(color9, v9[76], v9[77], v9[109], v9[108]));
    faces.push(new Face(color9, v9[76], v9[78], v9[94], v9[92]));
    faces.push(new Face(color9, v9[76], v9[78], v9[110], v9[108]));
    faces.push(new Face(color9, v9[76], v9[92], v9[124], v9[108]));
    faces.push(new Face(color9, v9[77], v9[79], v9[95], v9[93]));
    faces.push(new Face(color9, v9[77], v9[79], v9[111], v9[109]));
    faces.push(new Face(color9, v9[77], v9[93], v9[125], v9[109]));
    faces.push(new Face(color9, v9[78], v9[79], v9[95], v9[94]));
    faces.push(new Face(color9, v9[78], v9[79], v9[111], v9[110]));
    faces.push(new Face(color9, v9[78], v9[94], v9[126], v9[110]));
    faces.push(new Face(color9, v9[79], v9[95], v9[127], v9[111]));
    faces.push(new Face(color9, v9[80], v9[81], v9[83], v9[82]));
    faces.push(new Face(color9, v9[80], v9[81], v9[85], v9[84]));
    faces.push(new Face(color9, v9[80], v9[81], v9[89], v9[88]));
    faces.push(new Face(color9, v9[80], v9[81], v9[113], v9[112]));
    faces.push(new Face(color9, v9[80], v9[82], v9[86], v9[84]));
    faces.push(new Face(color9, v9[80], v9[82], v9[90], v9[88]));
    faces.push(new Face(color9, v9[80], v9[82], v9[114], v9[112]));
    faces.push(new Face(color9, v9[80], v9[84], v9[92], v9[88]));
    faces.push(new Face(color9, v9[80], v9[84], v9[116], v9[112]));
    faces.push(new Face(color9, v9[80], v9[88], v9[120], v9[112]));
    faces.push(new Face(color9, v9[81], v9[83], v9[87], v9[85]));
    faces.push(new Face(color9, v9[81], v9[83], v9[91], v9[89]));
    faces.push(new Face(color9, v9[81], v9[83], v9[115], v9[113]));
    faces.push(new Face(color9, v9[81], v9[85], v9[93], v9[89]));
    faces.push(new Face(color9, v9[81], v9[85], v9[117], v9[113]));
    faces.push(new Face(color9, v9[81], v9[89], v9[121], v9[113]));
    faces.push(new Face(color9, v9[82], v9[83], v9[87], v9[86]));
    faces.push(new Face(color9, v9[82], v9[83], v9[91], v9[90]));
    faces.push(new Face(color9, v9[82], v9[83], v9[115], v9[114]));
    faces.push(new Face(color9, v9[82], v9[86], v9[94], v9[90]));
    faces.push(new Face(color9, v9[82], v9[86], v9[118], v9[114]));
    faces.push(new Face(color9, v9[82], v9[90], v9[122], v9[114]));
    faces.push(new Face(color9, v9[83], v9[87], v9[95], v9[91]));
    faces.push(new Face(color9, v9[83], v9[87], v9[119], v9[115]));
    faces.push(new Face(color9, v9[83], v9[91], v9[123], v9[115]));
    faces.push(new Face(color9, v9[84], v9[85], v9[87], v9[86]));
    faces.push(new Face(color9, v9[84], v9[85], v9[93], v9[92]));
    faces.push(new Face(color9, v9[84], v9[85], v9[117], v9[116]));
    faces.push(new Face(color9, v9[84], v9[86], v9[94], v9[92]));
    faces.push(new Face(color9, v9[84], v9[86], v9[118], v9[116]));
    faces.push(new Face(color9, v9[84], v9[92], v9[124], v9[116]));
    faces.push(new Face(color9, v9[85], v9[87], v9[95], v9[93]));
    faces.push(new Face(color9, v9[85], v9[87], v9[119], v9[117]));
    faces.push(new Face(color9, v9[85], v9[93], v9[125], v9[117]));
    faces.push(new Face(color9, v9[86], v9[87], v9[95], v9[94]));
    faces.push(new Face(color9, v9[86], v9[87], v9[119], v9[118]));
    faces.push(new Face(color9, v9[86], v9[94], v9[126], v9[118]));
    faces.push(new Face(color9, v9[87], v9[95], v9[127], v9[119]));
    faces.push(new Face(color9, v9[88], v9[89], v9[91], v9[90]));
    faces.push(new Face(color9, v9[88], v9[89], v9[93], v9[92]));
    faces.push(new Face(color9, v9[88], v9[89], v9[121], v9[120]));
    faces.push(new Face(color9, v9[88], v9[90], v9[94], v9[92]));
    faces.push(new Face(color9, v9[88], v9[90], v9[122], v9[120]));
    faces.push(new Face(color9, v9[88], v9[92], v9[124], v9[120]));
    faces.push(new Face(color9, v9[89], v9[91], v9[95], v9[93]));
    faces.push(new Face(color9, v9[89], v9[91], v9[123], v9[121]));
    faces.push(new Face(color9, v9[89], v9[93], v9[125], v9[121]));
    faces.push(new Face(color9, v9[90], v9[91], v9[95], v9[94]));
    faces.push(new Face(color9, v9[90], v9[91], v9[123], v9[122]));
    faces.push(new Face(color9, v9[90], v9[94], v9[126], v9[122]));
    faces.push(new Face(color9, v9[91], v9[95], v9[127], v9[123]));
    faces.push(new Face(color9, v9[92], v9[93], v9[95], v9[94]));
    faces.push(new Face(color9, v9[92], v9[93], v9[125], v9[124]));
    faces.push(new Face(color9, v9[92], v9[94], v9[126], v9[124]));
    faces.push(new Face(color9, v9[93], v9[95], v9[127], v9[125]));
    faces.push(new Face(color9, v9[94], v9[95], v9[127], v9[126]));
    faces.push(new Face(color9, v9[96], v9[97], v9[99], v9[98]));
    faces.push(new Face(color9, v9[96], v9[97], v9[101], v9[100]));
    faces.push(new Face(color9, v9[96], v9[97], v9[105], v9[104]));
    faces.push(new Face(color9, v9[96], v9[97], v9[113], v9[112]));
    faces.push(new Face(color9, v9[96], v9[98], v9[102], v9[100]));
    faces.push(new Face(color9, v9[96], v9[98], v9[106], v9[104]));
    faces.push(new Face(color9, v9[96], v9[98], v9[114], v9[112]));
    faces.push(new Face(color9, v9[96], v9[100], v9[108], v9[104]));
    faces.push(new Face(color9, v9[96], v9[100], v9[116], v9[112]));
    faces.push(new Face(color9, v9[96], v9[104], v9[120], v9[112]));
    faces.push(new Face(color9, v9[97], v9[99], v9[103], v9[101]));
    faces.push(new Face(color9, v9[97], v9[99], v9[107], v9[105]));
    faces.push(new Face(color9, v9[97], v9[99], v9[115], v9[113]));
    faces.push(new Face(color9, v9[97], v9[101], v9[109], v9[105]));
    faces.push(new Face(color9, v9[97], v9[101], v9[117], v9[113]));
    faces.push(new Face(color9, v9[97], v9[105], v9[121], v9[113]));
    faces.push(new Face(color9, v9[98], v9[99], v9[103], v9[102]));
    faces.push(new Face(color9, v9[98], v9[99], v9[107], v9[106]));
    faces.push(new Face(color9, v9[98], v9[99], v9[115], v9[114]));
    faces.push(new Face(color9, v9[98], v9[102], v9[110], v9[106]));
    faces.push(new Face(color9, v9[98], v9[102], v9[118], v9[114]));
    faces.push(new Face(color9, v9[98], v9[106], v9[122], v9[114]));
    faces.push(new Face(color9, v9[99], v9[103], v9[111], v9[107]));
    faces.push(new Face(color9, v9[99], v9[103], v9[119], v9[115]));
    faces.push(new Face(color9, v9[99], v9[107], v9[123], v9[115]));
    faces.push(new Face(color9, v9[100], v9[101], v9[103], v9[102]));
    faces.push(new Face(color9, v9[100], v9[101], v9[109], v9[108]));
    faces.push(new Face(color9, v9[100], v9[101], v9[117], v9[116]));
    faces.push(new Face(color9, v9[100], v9[102], v9[110], v9[108]));
    faces.push(new Face(color9, v9[100], v9[102], v9[118], v9[116]));
    faces.push(new Face(color9, v9[100], v9[108], v9[124], v9[116]));
    faces.push(new Face(color9, v9[101], v9[103], v9[111], v9[109]));
    faces.push(new Face(color9, v9[101], v9[103], v9[119], v9[117]));
    faces.push(new Face(color9, v9[101], v9[109], v9[125], v9[117]));
    faces.push(new Face(color9, v9[102], v9[103], v9[111], v9[110]));
    faces.push(new Face(color9, v9[102], v9[103], v9[119], v9[118]));
    faces.push(new Face(color9, v9[102], v9[110], v9[126], v9[118]));
    faces.push(new Face(color9, v9[103], v9[111], v9[127], v9[119]));
    faces.push(new Face(color9, v9[104], v9[105], v9[107], v9[106]));
    faces.push(new Face(color9, v9[104], v9[105], v9[109], v9[108]));
    faces.push(new Face(color9, v9[104], v9[105], v9[121], v9[120]));
    faces.push(new Face(color9, v9[104], v9[106], v9[110], v9[108]));
    faces.push(new Face(color9, v9[104], v9[106], v9[122], v9[120]));
    faces.push(new Face(color9, v9[104], v9[108], v9[124], v9[120]));
    faces.push(new Face(color9, v9[105], v9[107], v9[111], v9[109]));
    faces.push(new Face(color9, v9[105], v9[107], v9[123], v9[121]));
    faces.push(new Face(color9, v9[105], v9[109], v9[125], v9[121]));
    faces.push(new Face(color9, v9[106], v9[107], v9[111], v9[110]));
    faces.push(new Face(color9, v9[106], v9[107], v9[123], v9[122]));
    faces.push(new Face(color9, v9[106], v9[110], v9[126], v9[122]));
    faces.push(new Face(color9, v9[107], v9[111], v9[127], v9[123]));
    faces.push(new Face(color9, v9[108], v9[109], v9[111], v9[110]));
    faces.push(new Face(color9, v9[108], v9[109], v9[125], v9[124]));
    faces.push(new Face(color9, v9[108], v9[110], v9[126], v9[124]));
    faces.push(new Face(color9, v9[109], v9[111], v9[127], v9[125]));
    faces.push(new Face(color9, v9[110], v9[111], v9[127], v9[126]));
    faces.push(new Face(color9, v9[112], v9[113], v9[115], v9[114]));
    faces.push(new Face(color9, v9[112], v9[113], v9[117], v9[116]));
    faces.push(new Face(color9, v9[112], v9[113], v9[121], v9[120]));
    faces.push(new Face(color9, v9[112], v9[114], v9[118], v9[116]));
    faces.push(new Face(color9, v9[112], v9[114], v9[122], v9[120]));
    faces.push(new Face(color9, v9[112], v9[116], v9[124], v9[120]));
    faces.push(new Face(color9, v9[113], v9[115], v9[119], v9[117]));
    faces.push(new Face(color9, v9[113], v9[115], v9[123], v9[121]));
    faces.push(new Face(color9, v9[113], v9[117], v9[125], v9[121]));
    faces.push(new Face(color9, v9[114], v9[115], v9[119], v9[118]));
    faces.push(new Face(color9, v9[114], v9[115], v9[123], v9[122]));
    faces.push(new Face(color9, v9[114], v9[118], v9[126], v9[122]));
    faces.push(new Face(color9, v9[115], v9[119], v9[127], v9[123]));
    faces.push(new Face(color9, v9[116], v9[117], v9[119], v9[118]));
    faces.push(new Face(color9, v9[116], v9[117], v9[125], v9[124]));
    faces.push(new Face(color9, v9[116], v9[118], v9[126], v9[124]));
    faces.push(new Face(color9, v9[117], v9[119], v9[127], v9[125]));
    faces.push(new Face(color9, v9[118], v9[119], v9[127], v9[126]));
    faces.push(new Face(color9, v9[120], v9[121], v9[123], v9[122]));
    faces.push(new Face(color9, v9[120], v9[121], v9[125], v9[124]));
    faces.push(new Face(color9, v9[120], v9[122], v9[126], v9[124]));
    faces.push(new Face(color9, v9[121], v9[123], v9[127], v9[125]));
    faces.push(new Face(color9, v9[122], v9[123], v9[127], v9[126]));
    faces.push(new Face(color9, v9[124], v9[125], v9[127], v9[126]));
    for (let i = 0; i < v9.length; i++) {
        v9[i].rotate(r);
        v9[i].project();
    }

    v10[0] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v10[1] = new Vertex(-w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v10[2] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v10[3] = new Vertex(-w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v10[4] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v10[5] = new Vertex(-w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v10[6] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v10[7] = new Vertex(-w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v10[8] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v10[9] = new Vertex(-w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v10[10] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v10[11] = new Vertex(-w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v10[12] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v10[13] = new Vertex(-w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v10[14] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, w/2, w/2, -w/2);
    v10[15] = new Vertex(-w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v10[16] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v10[17] = new Vertex(-w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v10[18] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v10[19] = new Vertex(-w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v10[20] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v10[21] = new Vertex(-w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v10[22] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, w/2, w/2, -w/2);
    v10[23] = new Vertex(-w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v10[24] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v10[25] = new Vertex(-w/2, -w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v10[26] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, -w/2, w/2, -w/2);
    v10[27] = new Vertex(-w/2, -w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v10[28] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, w/2, -w/2, -w/2);
    v10[29] = new Vertex(-w/2, -w/2, w/2+Math.sin(theta)*w, w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v10[30] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, w/2, w/2, -w/2);
    v10[31] = new Vertex(-w/2, -w/2, w/2+Math.sin(theta)*w, w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v10[32] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v10[33] = new Vertex(-w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v10[34] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v10[35] = new Vertex(-w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v10[36] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v10[37] = new Vertex(-w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v10[38] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v10[39] = new Vertex(-w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v10[40] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v10[41] = new Vertex(-w/2, w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v10[42] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v10[43] = new Vertex(-w/2, w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v10[44] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v10[45] = new Vertex(-w/2, w/2, w/2+Math.sin(theta)*w, -w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v10[46] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, w/2, w/2, -w/2);
    v10[47] = new Vertex(-w/2, w/2, w/2+Math.sin(theta)*w, -w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v10[48] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v10[49] = new Vertex(-w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v10[50] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v10[51] = new Vertex(-w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v10[52] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v10[53] = new Vertex(-w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v10[54] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, w/2, w/2, -w/2);
    v10[55] = new Vertex(-w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v10[56] = new Vertex(-w/2, w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v10[57] = new Vertex(-w/2, w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v10[58] = new Vertex(-w/2, w/2, w/2, w/2, w/2, -w/2, w/2, -w/2);
    v10[59] = new Vertex(-w/2, w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v10[60] = new Vertex(-w/2, w/2, w/2, w/2, w/2, w/2, -w/2, -w/2);
    v10[61] = new Vertex(-w/2, w/2, w/2+Math.sin(theta)*w, w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v10[62] = new Vertex(-w/2, w/2, w/2, w/2, w/2, w/2, w/2, -w/2);
    v10[63] = new Vertex(-w/2, w/2, w/2+Math.sin(theta)*w, w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v10[64] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v10[65] = new Vertex(w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v10[66] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v10[67] = new Vertex(w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v10[68] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v10[69] = new Vertex(w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v10[70] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v10[71] = new Vertex(w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v10[72] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v10[73] = new Vertex(w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v10[74] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v10[75] = new Vertex(w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v10[76] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v10[77] = new Vertex(w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v10[78] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, w/2, w/2, -w/2);
    v10[79] = new Vertex(w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v10[80] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v10[81] = new Vertex(w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v10[82] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v10[83] = new Vertex(w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v10[84] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v10[85] = new Vertex(w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v10[86] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, w/2, w/2, -w/2);
    v10[87] = new Vertex(w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v10[88] = new Vertex(w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v10[89] = new Vertex(w/2, -w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v10[90] = new Vertex(w/2, -w/2, w/2, w/2, w/2, -w/2, w/2, -w/2);
    v10[91] = new Vertex(w/2, -w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v10[92] = new Vertex(w/2, -w/2, w/2, w/2, w/2, w/2, -w/2, -w/2);
    v10[93] = new Vertex(w/2, -w/2, w/2+Math.sin(theta)*w, w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v10[94] = new Vertex(w/2, -w/2, w/2, w/2, w/2, w/2, w/2, -w/2);
    v10[95] = new Vertex(w/2, -w/2, w/2+Math.sin(theta)*w, w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v10[96] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v10[97] = new Vertex(w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v10[98] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v10[99] = new Vertex(w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v10[100] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v10[101] = new Vertex(w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v10[102] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v10[103] = new Vertex(w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v10[104] = new Vertex(w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v10[105] = new Vertex(w/2, w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v10[106] = new Vertex(w/2, w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v10[107] = new Vertex(w/2, w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v10[108] = new Vertex(w/2, w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v10[109] = new Vertex(w/2, w/2, w/2+Math.sin(theta)*w, -w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v10[110] = new Vertex(w/2, w/2, w/2, -w/2, w/2, w/2, w/2, -w/2);
    v10[111] = new Vertex(w/2, w/2, w/2+Math.sin(theta)*w, -w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v10[112] = new Vertex(w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v10[113] = new Vertex(w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v10[114] = new Vertex(w/2, w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v10[115] = new Vertex(w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v10[116] = new Vertex(w/2, w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v10[117] = new Vertex(w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v10[118] = new Vertex(w/2, w/2, w/2, w/2, -w/2, w/2, w/2, -w/2);
    v10[119] = new Vertex(w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v10[120] = new Vertex(w/2, w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v10[121] = new Vertex(w/2, w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v10[122] = new Vertex(w/2, w/2, w/2, w/2, w/2, -w/2, w/2, -w/2);
    v10[123] = new Vertex(w/2, w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v10[124] = new Vertex(w/2, w/2, w/2, w/2, w/2, w/2, -w/2, -w/2);
    v10[125] = new Vertex(w/2, w/2, w/2+Math.sin(theta)*w, w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v10[126] = new Vertex(w/2, w/2, w/2, w/2, w/2, w/2, w/2, -w/2);
    v10[127] = new Vertex(w/2, w/2, w/2+Math.sin(theta)*w, w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    faces.push(new Face(color10, v10[0], v10[1], v10[3], v10[2]));
    faces.push(new Face(color10, v10[0], v10[1], v10[5], v10[4]));
    faces.push(new Face(color10, v10[0], v10[1], v10[9], v10[8]));
    faces.push(new Face(color10, v10[0], v10[1], v10[17], v10[16]));
    faces.push(new Face(color10, v10[0], v10[1], v10[33], v10[32]));
    faces.push(new Face(color10, v10[0], v10[1], v10[65], v10[64]));
    faces.push(new Face(color10, v10[0], v10[2], v10[6], v10[4]));
    faces.push(new Face(color10, v10[0], v10[2], v10[10], v10[8]));
    faces.push(new Face(color10, v10[0], v10[2], v10[18], v10[16]));
    faces.push(new Face(color10, v10[0], v10[2], v10[34], v10[32]));
    faces.push(new Face(color10, v10[0], v10[2], v10[66], v10[64]));
    faces.push(new Face(color10, v10[0], v10[4], v10[12], v10[8]));
    faces.push(new Face(color10, v10[0], v10[4], v10[20], v10[16]));
    faces.push(new Face(color10, v10[0], v10[4], v10[36], v10[32]));
    faces.push(new Face(color10, v10[0], v10[4], v10[68], v10[64]));
    faces.push(new Face(color10, v10[0], v10[8], v10[24], v10[16]));
    faces.push(new Face(color10, v10[0], v10[8], v10[40], v10[32]));
    faces.push(new Face(color10, v10[0], v10[8], v10[72], v10[64]));
    faces.push(new Face(color10, v10[0], v10[16], v10[48], v10[32]));
    faces.push(new Face(color10, v10[0], v10[16], v10[80], v10[64]));
    faces.push(new Face(color10, v10[0], v10[32], v10[96], v10[64]));
    faces.push(new Face(color10, v10[1], v10[3], v10[7], v10[5]));
    faces.push(new Face(color10, v10[1], v10[3], v10[11], v10[9]));
    faces.push(new Face(color10, v10[1], v10[3], v10[19], v10[17]));
    faces.push(new Face(color10, v10[1], v10[3], v10[35], v10[33]));
    faces.push(new Face(color10, v10[1], v10[3], v10[67], v10[65]));
    faces.push(new Face(color10, v10[1], v10[5], v10[13], v10[9]));
    faces.push(new Face(color10, v10[1], v10[5], v10[21], v10[17]));
    faces.push(new Face(color10, v10[1], v10[5], v10[37], v10[33]));
    faces.push(new Face(color10, v10[1], v10[5], v10[69], v10[65]));
    faces.push(new Face(color10, v10[1], v10[9], v10[25], v10[17]));
    faces.push(new Face(color10, v10[1], v10[9], v10[41], v10[33]));
    faces.push(new Face(color10, v10[1], v10[9], v10[73], v10[65]));
    faces.push(new Face(color10, v10[1], v10[17], v10[49], v10[33]));
    faces.push(new Face(color10, v10[1], v10[17], v10[81], v10[65]));
    faces.push(new Face(color10, v10[1], v10[33], v10[97], v10[65]));
    faces.push(new Face(color10, v10[2], v10[3], v10[7], v10[6]));
    faces.push(new Face(color10, v10[2], v10[3], v10[11], v10[10]));
    faces.push(new Face(color10, v10[2], v10[3], v10[19], v10[18]));
    faces.push(new Face(color10, v10[2], v10[3], v10[35], v10[34]));
    faces.push(new Face(color10, v10[2], v10[3], v10[67], v10[66]));
    faces.push(new Face(color10, v10[2], v10[6], v10[14], v10[10]));
    faces.push(new Face(color10, v10[2], v10[6], v10[22], v10[18]));
    faces.push(new Face(color10, v10[2], v10[6], v10[38], v10[34]));
    faces.push(new Face(color10, v10[2], v10[6], v10[70], v10[66]));
    faces.push(new Face(color10, v10[2], v10[10], v10[26], v10[18]));
    faces.push(new Face(color10, v10[2], v10[10], v10[42], v10[34]));
    faces.push(new Face(color10, v10[2], v10[10], v10[74], v10[66]));
    faces.push(new Face(color10, v10[2], v10[18], v10[50], v10[34]));
    faces.push(new Face(color10, v10[2], v10[18], v10[82], v10[66]));
    faces.push(new Face(color10, v10[2], v10[34], v10[98], v10[66]));
    faces.push(new Face(color10, v10[3], v10[7], v10[15], v10[11]));
    faces.push(new Face(color10, v10[3], v10[7], v10[23], v10[19]));
    faces.push(new Face(color10, v10[3], v10[7], v10[39], v10[35]));
    faces.push(new Face(color10, v10[3], v10[7], v10[71], v10[67]));
    faces.push(new Face(color10, v10[3], v10[11], v10[27], v10[19]));
    faces.push(new Face(color10, v10[3], v10[11], v10[43], v10[35]));
    faces.push(new Face(color10, v10[3], v10[11], v10[75], v10[67]));
    faces.push(new Face(color10, v10[3], v10[19], v10[51], v10[35]));
    faces.push(new Face(color10, v10[3], v10[19], v10[83], v10[67]));
    faces.push(new Face(color10, v10[3], v10[35], v10[99], v10[67]));
    faces.push(new Face(color10, v10[4], v10[5], v10[7], v10[6]));
    faces.push(new Face(color10, v10[4], v10[5], v10[13], v10[12]));
    faces.push(new Face(color10, v10[4], v10[5], v10[21], v10[20]));
    faces.push(new Face(color10, v10[4], v10[5], v10[37], v10[36]));
    faces.push(new Face(color10, v10[4], v10[5], v10[69], v10[68]));
    faces.push(new Face(color10, v10[4], v10[6], v10[14], v10[12]));
    faces.push(new Face(color10, v10[4], v10[6], v10[22], v10[20]));
    faces.push(new Face(color10, v10[4], v10[6], v10[38], v10[36]));
    faces.push(new Face(color10, v10[4], v10[6], v10[70], v10[68]));
    faces.push(new Face(color10, v10[4], v10[12], v10[28], v10[20]));
    faces.push(new Face(color10, v10[4], v10[12], v10[44], v10[36]));
    faces.push(new Face(color10, v10[4], v10[12], v10[76], v10[68]));
    faces.push(new Face(color10, v10[4], v10[20], v10[52], v10[36]));
    faces.push(new Face(color10, v10[4], v10[20], v10[84], v10[68]));
    faces.push(new Face(color10, v10[4], v10[36], v10[100], v10[68]));
    faces.push(new Face(color10, v10[5], v10[7], v10[15], v10[13]));
    faces.push(new Face(color10, v10[5], v10[7], v10[23], v10[21]));
    faces.push(new Face(color10, v10[5], v10[7], v10[39], v10[37]));
    faces.push(new Face(color10, v10[5], v10[7], v10[71], v10[69]));
    faces.push(new Face(color10, v10[5], v10[13], v10[29], v10[21]));
    faces.push(new Face(color10, v10[5], v10[13], v10[45], v10[37]));
    faces.push(new Face(color10, v10[5], v10[13], v10[77], v10[69]));
    faces.push(new Face(color10, v10[5], v10[21], v10[53], v10[37]));
    faces.push(new Face(color10, v10[5], v10[21], v10[85], v10[69]));
    faces.push(new Face(color10, v10[5], v10[37], v10[101], v10[69]));
    faces.push(new Face(color10, v10[6], v10[7], v10[15], v10[14]));
    faces.push(new Face(color10, v10[6], v10[7], v10[23], v10[22]));
    faces.push(new Face(color10, v10[6], v10[7], v10[39], v10[38]));
    faces.push(new Face(color10, v10[6], v10[7], v10[71], v10[70]));
    faces.push(new Face(color10, v10[6], v10[14], v10[30], v10[22]));
    faces.push(new Face(color10, v10[6], v10[14], v10[46], v10[38]));
    faces.push(new Face(color10, v10[6], v10[14], v10[78], v10[70]));
    faces.push(new Face(color10, v10[6], v10[22], v10[54], v10[38]));
    faces.push(new Face(color10, v10[6], v10[22], v10[86], v10[70]));
    faces.push(new Face(color10, v10[6], v10[38], v10[102], v10[70]));
    faces.push(new Face(color10, v10[7], v10[15], v10[31], v10[23]));
    faces.push(new Face(color10, v10[7], v10[15], v10[47], v10[39]));
    faces.push(new Face(color10, v10[7], v10[15], v10[79], v10[71]));
    faces.push(new Face(color10, v10[7], v10[23], v10[55], v10[39]));
    faces.push(new Face(color10, v10[7], v10[23], v10[87], v10[71]));
    faces.push(new Face(color10, v10[7], v10[39], v10[103], v10[71]));
    faces.push(new Face(color10, v10[8], v10[9], v10[11], v10[10]));
    faces.push(new Face(color10, v10[8], v10[9], v10[13], v10[12]));
    faces.push(new Face(color10, v10[8], v10[9], v10[25], v10[24]));
    faces.push(new Face(color10, v10[8], v10[9], v10[41], v10[40]));
    faces.push(new Face(color10, v10[8], v10[9], v10[73], v10[72]));
    faces.push(new Face(color10, v10[8], v10[10], v10[14], v10[12]));
    faces.push(new Face(color10, v10[8], v10[10], v10[26], v10[24]));
    faces.push(new Face(color10, v10[8], v10[10], v10[42], v10[40]));
    faces.push(new Face(color10, v10[8], v10[10], v10[74], v10[72]));
    faces.push(new Face(color10, v10[8], v10[12], v10[28], v10[24]));
    faces.push(new Face(color10, v10[8], v10[12], v10[44], v10[40]));
    faces.push(new Face(color10, v10[8], v10[12], v10[76], v10[72]));
    faces.push(new Face(color10, v10[8], v10[24], v10[56], v10[40]));
    faces.push(new Face(color10, v10[8], v10[24], v10[88], v10[72]));
    faces.push(new Face(color10, v10[8], v10[40], v10[104], v10[72]));
    faces.push(new Face(color10, v10[9], v10[11], v10[15], v10[13]));
    faces.push(new Face(color10, v10[9], v10[11], v10[27], v10[25]));
    faces.push(new Face(color10, v10[9], v10[11], v10[43], v10[41]));
    faces.push(new Face(color10, v10[9], v10[11], v10[75], v10[73]));
    faces.push(new Face(color10, v10[9], v10[13], v10[29], v10[25]));
    faces.push(new Face(color10, v10[9], v10[13], v10[45], v10[41]));
    faces.push(new Face(color10, v10[9], v10[13], v10[77], v10[73]));
    faces.push(new Face(color10, v10[9], v10[25], v10[57], v10[41]));
    faces.push(new Face(color10, v10[9], v10[25], v10[89], v10[73]));
    faces.push(new Face(color10, v10[9], v10[41], v10[105], v10[73]));
    faces.push(new Face(color10, v10[10], v10[11], v10[15], v10[14]));
    faces.push(new Face(color10, v10[10], v10[11], v10[27], v10[26]));
    faces.push(new Face(color10, v10[10], v10[11], v10[43], v10[42]));
    faces.push(new Face(color10, v10[10], v10[11], v10[75], v10[74]));
    faces.push(new Face(color10, v10[10], v10[14], v10[30], v10[26]));
    faces.push(new Face(color10, v10[10], v10[14], v10[46], v10[42]));
    faces.push(new Face(color10, v10[10], v10[14], v10[78], v10[74]));
    faces.push(new Face(color10, v10[10], v10[26], v10[58], v10[42]));
    faces.push(new Face(color10, v10[10], v10[26], v10[90], v10[74]));
    faces.push(new Face(color10, v10[10], v10[42], v10[106], v10[74]));
    faces.push(new Face(color10, v10[11], v10[15], v10[31], v10[27]));
    faces.push(new Face(color10, v10[11], v10[15], v10[47], v10[43]));
    faces.push(new Face(color10, v10[11], v10[15], v10[79], v10[75]));
    faces.push(new Face(color10, v10[11], v10[27], v10[59], v10[43]));
    faces.push(new Face(color10, v10[11], v10[27], v10[91], v10[75]));
    faces.push(new Face(color10, v10[11], v10[43], v10[107], v10[75]));
    faces.push(new Face(color10, v10[12], v10[13], v10[15], v10[14]));
    faces.push(new Face(color10, v10[12], v10[13], v10[29], v10[28]));
    faces.push(new Face(color10, v10[12], v10[13], v10[45], v10[44]));
    faces.push(new Face(color10, v10[12], v10[13], v10[77], v10[76]));
    faces.push(new Face(color10, v10[12], v10[14], v10[30], v10[28]));
    faces.push(new Face(color10, v10[12], v10[14], v10[46], v10[44]));
    faces.push(new Face(color10, v10[12], v10[14], v10[78], v10[76]));
    faces.push(new Face(color10, v10[12], v10[28], v10[60], v10[44]));
    faces.push(new Face(color10, v10[12], v10[28], v10[92], v10[76]));
    faces.push(new Face(color10, v10[12], v10[44], v10[108], v10[76]));
    faces.push(new Face(color10, v10[13], v10[15], v10[31], v10[29]));
    faces.push(new Face(color10, v10[13], v10[15], v10[47], v10[45]));
    faces.push(new Face(color10, v10[13], v10[15], v10[79], v10[77]));
    faces.push(new Face(color10, v10[13], v10[29], v10[61], v10[45]));
    faces.push(new Face(color10, v10[13], v10[29], v10[93], v10[77]));
    faces.push(new Face(color10, v10[13], v10[45], v10[109], v10[77]));
    faces.push(new Face(color10, v10[14], v10[15], v10[31], v10[30]));
    faces.push(new Face(color10, v10[14], v10[15], v10[47], v10[46]));
    faces.push(new Face(color10, v10[14], v10[15], v10[79], v10[78]));
    faces.push(new Face(color10, v10[14], v10[30], v10[62], v10[46]));
    faces.push(new Face(color10, v10[14], v10[30], v10[94], v10[78]));
    faces.push(new Face(color10, v10[14], v10[46], v10[110], v10[78]));
    faces.push(new Face(color10, v10[15], v10[31], v10[63], v10[47]));
    faces.push(new Face(color10, v10[15], v10[31], v10[95], v10[79]));
    faces.push(new Face(color10, v10[15], v10[47], v10[111], v10[79]));
    faces.push(new Face(color10, v10[16], v10[17], v10[19], v10[18]));
    faces.push(new Face(color10, v10[16], v10[17], v10[21], v10[20]));
    faces.push(new Face(color10, v10[16], v10[17], v10[25], v10[24]));
    faces.push(new Face(color10, v10[16], v10[17], v10[49], v10[48]));
    faces.push(new Face(color10, v10[16], v10[17], v10[81], v10[80]));
    faces.push(new Face(color10, v10[16], v10[18], v10[22], v10[20]));
    faces.push(new Face(color10, v10[16], v10[18], v10[26], v10[24]));
    faces.push(new Face(color10, v10[16], v10[18], v10[50], v10[48]));
    faces.push(new Face(color10, v10[16], v10[18], v10[82], v10[80]));
    faces.push(new Face(color10, v10[16], v10[20], v10[28], v10[24]));
    faces.push(new Face(color10, v10[16], v10[20], v10[52], v10[48]));
    faces.push(new Face(color10, v10[16], v10[20], v10[84], v10[80]));
    faces.push(new Face(color10, v10[16], v10[24], v10[56], v10[48]));
    faces.push(new Face(color10, v10[16], v10[24], v10[88], v10[80]));
    faces.push(new Face(color10, v10[16], v10[48], v10[112], v10[80]));
    faces.push(new Face(color10, v10[17], v10[19], v10[23], v10[21]));
    faces.push(new Face(color10, v10[17], v10[19], v10[27], v10[25]));
    faces.push(new Face(color10, v10[17], v10[19], v10[51], v10[49]));
    faces.push(new Face(color10, v10[17], v10[19], v10[83], v10[81]));
    faces.push(new Face(color10, v10[17], v10[21], v10[29], v10[25]));
    faces.push(new Face(color10, v10[17], v10[21], v10[53], v10[49]));
    faces.push(new Face(color10, v10[17], v10[21], v10[85], v10[81]));
    faces.push(new Face(color10, v10[17], v10[25], v10[57], v10[49]));
    faces.push(new Face(color10, v10[17], v10[25], v10[89], v10[81]));
    faces.push(new Face(color10, v10[17], v10[49], v10[113], v10[81]));
    faces.push(new Face(color10, v10[18], v10[19], v10[23], v10[22]));
    faces.push(new Face(color10, v10[18], v10[19], v10[27], v10[26]));
    faces.push(new Face(color10, v10[18], v10[19], v10[51], v10[50]));
    faces.push(new Face(color10, v10[18], v10[19], v10[83], v10[82]));
    faces.push(new Face(color10, v10[18], v10[22], v10[30], v10[26]));
    faces.push(new Face(color10, v10[18], v10[22], v10[54], v10[50]));
    faces.push(new Face(color10, v10[18], v10[22], v10[86], v10[82]));
    faces.push(new Face(color10, v10[18], v10[26], v10[58], v10[50]));
    faces.push(new Face(color10, v10[18], v10[26], v10[90], v10[82]));
    faces.push(new Face(color10, v10[18], v10[50], v10[114], v10[82]));
    faces.push(new Face(color10, v10[19], v10[23], v10[31], v10[27]));
    faces.push(new Face(color10, v10[19], v10[23], v10[55], v10[51]));
    faces.push(new Face(color10, v10[19], v10[23], v10[87], v10[83]));
    faces.push(new Face(color10, v10[19], v10[27], v10[59], v10[51]));
    faces.push(new Face(color10, v10[19], v10[27], v10[91], v10[83]));
    faces.push(new Face(color10, v10[19], v10[51], v10[115], v10[83]));
    faces.push(new Face(color10, v10[20], v10[21], v10[23], v10[22]));
    faces.push(new Face(color10, v10[20], v10[21], v10[29], v10[28]));
    faces.push(new Face(color10, v10[20], v10[21], v10[53], v10[52]));
    faces.push(new Face(color10, v10[20], v10[21], v10[85], v10[84]));
    faces.push(new Face(color10, v10[20], v10[22], v10[30], v10[28]));
    faces.push(new Face(color10, v10[20], v10[22], v10[54], v10[52]));
    faces.push(new Face(color10, v10[20], v10[22], v10[86], v10[84]));
    faces.push(new Face(color10, v10[20], v10[28], v10[60], v10[52]));
    faces.push(new Face(color10, v10[20], v10[28], v10[92], v10[84]));
    faces.push(new Face(color10, v10[20], v10[52], v10[116], v10[84]));
    faces.push(new Face(color10, v10[21], v10[23], v10[31], v10[29]));
    faces.push(new Face(color10, v10[21], v10[23], v10[55], v10[53]));
    faces.push(new Face(color10, v10[21], v10[23], v10[87], v10[85]));
    faces.push(new Face(color10, v10[21], v10[29], v10[61], v10[53]));
    faces.push(new Face(color10, v10[21], v10[29], v10[93], v10[85]));
    faces.push(new Face(color10, v10[21], v10[53], v10[117], v10[85]));
    faces.push(new Face(color10, v10[22], v10[23], v10[31], v10[30]));
    faces.push(new Face(color10, v10[22], v10[23], v10[55], v10[54]));
    faces.push(new Face(color10, v10[22], v10[23], v10[87], v10[86]));
    faces.push(new Face(color10, v10[22], v10[30], v10[62], v10[54]));
    faces.push(new Face(color10, v10[22], v10[30], v10[94], v10[86]));
    faces.push(new Face(color10, v10[22], v10[54], v10[118], v10[86]));
    faces.push(new Face(color10, v10[23], v10[31], v10[63], v10[55]));
    faces.push(new Face(color10, v10[23], v10[31], v10[95], v10[87]));
    faces.push(new Face(color10, v10[23], v10[55], v10[119], v10[87]));
    faces.push(new Face(color10, v10[24], v10[25], v10[27], v10[26]));
    faces.push(new Face(color10, v10[24], v10[25], v10[29], v10[28]));
    faces.push(new Face(color10, v10[24], v10[25], v10[57], v10[56]));
    faces.push(new Face(color10, v10[24], v10[25], v10[89], v10[88]));
    faces.push(new Face(color10, v10[24], v10[26], v10[30], v10[28]));
    faces.push(new Face(color10, v10[24], v10[26], v10[58], v10[56]));
    faces.push(new Face(color10, v10[24], v10[26], v10[90], v10[88]));
    faces.push(new Face(color10, v10[24], v10[28], v10[60], v10[56]));
    faces.push(new Face(color10, v10[24], v10[28], v10[92], v10[88]));
    faces.push(new Face(color10, v10[24], v10[56], v10[120], v10[88]));
    faces.push(new Face(color10, v10[25], v10[27], v10[31], v10[29]));
    faces.push(new Face(color10, v10[25], v10[27], v10[59], v10[57]));
    faces.push(new Face(color10, v10[25], v10[27], v10[91], v10[89]));
    faces.push(new Face(color10, v10[25], v10[29], v10[61], v10[57]));
    faces.push(new Face(color10, v10[25], v10[29], v10[93], v10[89]));
    faces.push(new Face(color10, v10[25], v10[57], v10[121], v10[89]));
    faces.push(new Face(color10, v10[26], v10[27], v10[31], v10[30]));
    faces.push(new Face(color10, v10[26], v10[27], v10[59], v10[58]));
    faces.push(new Face(color10, v10[26], v10[27], v10[91], v10[90]));
    faces.push(new Face(color10, v10[26], v10[30], v10[62], v10[58]));
    faces.push(new Face(color10, v10[26], v10[30], v10[94], v10[90]));
    faces.push(new Face(color10, v10[26], v10[58], v10[122], v10[90]));
    faces.push(new Face(color10, v10[27], v10[31], v10[63], v10[59]));
    faces.push(new Face(color10, v10[27], v10[31], v10[95], v10[91]));
    faces.push(new Face(color10, v10[27], v10[59], v10[123], v10[91]));
    faces.push(new Face(color10, v10[28], v10[29], v10[31], v10[30]));
    faces.push(new Face(color10, v10[28], v10[29], v10[61], v10[60]));
    faces.push(new Face(color10, v10[28], v10[29], v10[93], v10[92]));
    faces.push(new Face(color10, v10[28], v10[30], v10[62], v10[60]));
    faces.push(new Face(color10, v10[28], v10[30], v10[94], v10[92]));
    faces.push(new Face(color10, v10[28], v10[60], v10[124], v10[92]));
    faces.push(new Face(color10, v10[29], v10[31], v10[63], v10[61]));
    faces.push(new Face(color10, v10[29], v10[31], v10[95], v10[93]));
    faces.push(new Face(color10, v10[29], v10[61], v10[125], v10[93]));
    faces.push(new Face(color10, v10[30], v10[31], v10[63], v10[62]));
    faces.push(new Face(color10, v10[30], v10[31], v10[95], v10[94]));
    faces.push(new Face(color10, v10[30], v10[62], v10[126], v10[94]));
    faces.push(new Face(color10, v10[31], v10[63], v10[127], v10[95]));
    faces.push(new Face(color10, v10[32], v10[33], v10[35], v10[34]));
    faces.push(new Face(color10, v10[32], v10[33], v10[37], v10[36]));
    faces.push(new Face(color10, v10[32], v10[33], v10[41], v10[40]));
    faces.push(new Face(color10, v10[32], v10[33], v10[49], v10[48]));
    faces.push(new Face(color10, v10[32], v10[33], v10[97], v10[96]));
    faces.push(new Face(color10, v10[32], v10[34], v10[38], v10[36]));
    faces.push(new Face(color10, v10[32], v10[34], v10[42], v10[40]));
    faces.push(new Face(color10, v10[32], v10[34], v10[50], v10[48]));
    faces.push(new Face(color10, v10[32], v10[34], v10[98], v10[96]));
    faces.push(new Face(color10, v10[32], v10[36], v10[44], v10[40]));
    faces.push(new Face(color10, v10[32], v10[36], v10[52], v10[48]));
    faces.push(new Face(color10, v10[32], v10[36], v10[100], v10[96]));
    faces.push(new Face(color10, v10[32], v10[40], v10[56], v10[48]));
    faces.push(new Face(color10, v10[32], v10[40], v10[104], v10[96]));
    faces.push(new Face(color10, v10[32], v10[48], v10[112], v10[96]));
    faces.push(new Face(color10, v10[33], v10[35], v10[39], v10[37]));
    faces.push(new Face(color10, v10[33], v10[35], v10[43], v10[41]));
    faces.push(new Face(color10, v10[33], v10[35], v10[51], v10[49]));
    faces.push(new Face(color10, v10[33], v10[35], v10[99], v10[97]));
    faces.push(new Face(color10, v10[33], v10[37], v10[45], v10[41]));
    faces.push(new Face(color10, v10[33], v10[37], v10[53], v10[49]));
    faces.push(new Face(color10, v10[33], v10[37], v10[101], v10[97]));
    faces.push(new Face(color10, v10[33], v10[41], v10[57], v10[49]));
    faces.push(new Face(color10, v10[33], v10[41], v10[105], v10[97]));
    faces.push(new Face(color10, v10[33], v10[49], v10[113], v10[97]));
    faces.push(new Face(color10, v10[34], v10[35], v10[39], v10[38]));
    faces.push(new Face(color10, v10[34], v10[35], v10[43], v10[42]));
    faces.push(new Face(color10, v10[34], v10[35], v10[51], v10[50]));
    faces.push(new Face(color10, v10[34], v10[35], v10[99], v10[98]));
    faces.push(new Face(color10, v10[34], v10[38], v10[46], v10[42]));
    faces.push(new Face(color10, v10[34], v10[38], v10[54], v10[50]));
    faces.push(new Face(color10, v10[34], v10[38], v10[102], v10[98]));
    faces.push(new Face(color10, v10[34], v10[42], v10[58], v10[50]));
    faces.push(new Face(color10, v10[34], v10[42], v10[106], v10[98]));
    faces.push(new Face(color10, v10[34], v10[50], v10[114], v10[98]));
    faces.push(new Face(color10, v10[35], v10[39], v10[47], v10[43]));
    faces.push(new Face(color10, v10[35], v10[39], v10[55], v10[51]));
    faces.push(new Face(color10, v10[35], v10[39], v10[103], v10[99]));
    faces.push(new Face(color10, v10[35], v10[43], v10[59], v10[51]));
    faces.push(new Face(color10, v10[35], v10[43], v10[107], v10[99]));
    faces.push(new Face(color10, v10[35], v10[51], v10[115], v10[99]));
    faces.push(new Face(color10, v10[36], v10[37], v10[39], v10[38]));
    faces.push(new Face(color10, v10[36], v10[37], v10[45], v10[44]));
    faces.push(new Face(color10, v10[36], v10[37], v10[53], v10[52]));
    faces.push(new Face(color10, v10[36], v10[37], v10[101], v10[100]));
    faces.push(new Face(color10, v10[36], v10[38], v10[46], v10[44]));
    faces.push(new Face(color10, v10[36], v10[38], v10[54], v10[52]));
    faces.push(new Face(color10, v10[36], v10[38], v10[102], v10[100]));
    faces.push(new Face(color10, v10[36], v10[44], v10[60], v10[52]));
    faces.push(new Face(color10, v10[36], v10[44], v10[108], v10[100]));
    faces.push(new Face(color10, v10[36], v10[52], v10[116], v10[100]));
    faces.push(new Face(color10, v10[37], v10[39], v10[47], v10[45]));
    faces.push(new Face(color10, v10[37], v10[39], v10[55], v10[53]));
    faces.push(new Face(color10, v10[37], v10[39], v10[103], v10[101]));
    faces.push(new Face(color10, v10[37], v10[45], v10[61], v10[53]));
    faces.push(new Face(color10, v10[37], v10[45], v10[109], v10[101]));
    faces.push(new Face(color10, v10[37], v10[53], v10[117], v10[101]));
    faces.push(new Face(color10, v10[38], v10[39], v10[47], v10[46]));
    faces.push(new Face(color10, v10[38], v10[39], v10[55], v10[54]));
    faces.push(new Face(color10, v10[38], v10[39], v10[103], v10[102]));
    faces.push(new Face(color10, v10[38], v10[46], v10[62], v10[54]));
    faces.push(new Face(color10, v10[38], v10[46], v10[110], v10[102]));
    faces.push(new Face(color10, v10[38], v10[54], v10[118], v10[102]));
    faces.push(new Face(color10, v10[39], v10[47], v10[63], v10[55]));
    faces.push(new Face(color10, v10[39], v10[47], v10[111], v10[103]));
    faces.push(new Face(color10, v10[39], v10[55], v10[119], v10[103]));
    faces.push(new Face(color10, v10[40], v10[41], v10[43], v10[42]));
    faces.push(new Face(color10, v10[40], v10[41], v10[45], v10[44]));
    faces.push(new Face(color10, v10[40], v10[41], v10[57], v10[56]));
    faces.push(new Face(color10, v10[40], v10[41], v10[105], v10[104]));
    faces.push(new Face(color10, v10[40], v10[42], v10[46], v10[44]));
    faces.push(new Face(color10, v10[40], v10[42], v10[58], v10[56]));
    faces.push(new Face(color10, v10[40], v10[42], v10[106], v10[104]));
    faces.push(new Face(color10, v10[40], v10[44], v10[60], v10[56]));
    faces.push(new Face(color10, v10[40], v10[44], v10[108], v10[104]));
    faces.push(new Face(color10, v10[40], v10[56], v10[120], v10[104]));
    faces.push(new Face(color10, v10[41], v10[43], v10[47], v10[45]));
    faces.push(new Face(color10, v10[41], v10[43], v10[59], v10[57]));
    faces.push(new Face(color10, v10[41], v10[43], v10[107], v10[105]));
    faces.push(new Face(color10, v10[41], v10[45], v10[61], v10[57]));
    faces.push(new Face(color10, v10[41], v10[45], v10[109], v10[105]));
    faces.push(new Face(color10, v10[41], v10[57], v10[121], v10[105]));
    faces.push(new Face(color10, v10[42], v10[43], v10[47], v10[46]));
    faces.push(new Face(color10, v10[42], v10[43], v10[59], v10[58]));
    faces.push(new Face(color10, v10[42], v10[43], v10[107], v10[106]));
    faces.push(new Face(color10, v10[42], v10[46], v10[62], v10[58]));
    faces.push(new Face(color10, v10[42], v10[46], v10[110], v10[106]));
    faces.push(new Face(color10, v10[42], v10[58], v10[122], v10[106]));
    faces.push(new Face(color10, v10[43], v10[47], v10[63], v10[59]));
    faces.push(new Face(color10, v10[43], v10[47], v10[111], v10[107]));
    faces.push(new Face(color10, v10[43], v10[59], v10[123], v10[107]));
    faces.push(new Face(color10, v10[44], v10[45], v10[47], v10[46]));
    faces.push(new Face(color10, v10[44], v10[45], v10[61], v10[60]));
    faces.push(new Face(color10, v10[44], v10[45], v10[109], v10[108]));
    faces.push(new Face(color10, v10[44], v10[46], v10[62], v10[60]));
    faces.push(new Face(color10, v10[44], v10[46], v10[110], v10[108]));
    faces.push(new Face(color10, v10[44], v10[60], v10[124], v10[108]));
    faces.push(new Face(color10, v10[45], v10[47], v10[63], v10[61]));
    faces.push(new Face(color10, v10[45], v10[47], v10[111], v10[109]));
    faces.push(new Face(color10, v10[45], v10[61], v10[125], v10[109]));
    faces.push(new Face(color10, v10[46], v10[47], v10[63], v10[62]));
    faces.push(new Face(color10, v10[46], v10[47], v10[111], v10[110]));
    faces.push(new Face(color10, v10[46], v10[62], v10[126], v10[110]));
    faces.push(new Face(color10, v10[47], v10[63], v10[127], v10[111]));
    faces.push(new Face(color10, v10[48], v10[49], v10[51], v10[50]));
    faces.push(new Face(color10, v10[48], v10[49], v10[53], v10[52]));
    faces.push(new Face(color10, v10[48], v10[49], v10[57], v10[56]));
    faces.push(new Face(color10, v10[48], v10[49], v10[113], v10[112]));
    faces.push(new Face(color10, v10[48], v10[50], v10[54], v10[52]));
    faces.push(new Face(color10, v10[48], v10[50], v10[58], v10[56]));
    faces.push(new Face(color10, v10[48], v10[50], v10[114], v10[112]));
    faces.push(new Face(color10, v10[48], v10[52], v10[60], v10[56]));
    faces.push(new Face(color10, v10[48], v10[52], v10[116], v10[112]));
    faces.push(new Face(color10, v10[48], v10[56], v10[120], v10[112]));
    faces.push(new Face(color10, v10[49], v10[51], v10[55], v10[53]));
    faces.push(new Face(color10, v10[49], v10[51], v10[59], v10[57]));
    faces.push(new Face(color10, v10[49], v10[51], v10[115], v10[113]));
    faces.push(new Face(color10, v10[49], v10[53], v10[61], v10[57]));
    faces.push(new Face(color10, v10[49], v10[53], v10[117], v10[113]));
    faces.push(new Face(color10, v10[49], v10[57], v10[121], v10[113]));
    faces.push(new Face(color10, v10[50], v10[51], v10[55], v10[54]));
    faces.push(new Face(color10, v10[50], v10[51], v10[59], v10[58]));
    faces.push(new Face(color10, v10[50], v10[51], v10[115], v10[114]));
    faces.push(new Face(color10, v10[50], v10[54], v10[62], v10[58]));
    faces.push(new Face(color10, v10[50], v10[54], v10[118], v10[114]));
    faces.push(new Face(color10, v10[50], v10[58], v10[122], v10[114]));
    faces.push(new Face(color10, v10[51], v10[55], v10[63], v10[59]));
    faces.push(new Face(color10, v10[51], v10[55], v10[119], v10[115]));
    faces.push(new Face(color10, v10[51], v10[59], v10[123], v10[115]));
    faces.push(new Face(color10, v10[52], v10[53], v10[55], v10[54]));
    faces.push(new Face(color10, v10[52], v10[53], v10[61], v10[60]));
    faces.push(new Face(color10, v10[52], v10[53], v10[117], v10[116]));
    faces.push(new Face(color10, v10[52], v10[54], v10[62], v10[60]));
    faces.push(new Face(color10, v10[52], v10[54], v10[118], v10[116]));
    faces.push(new Face(color10, v10[52], v10[60], v10[124], v10[116]));
    faces.push(new Face(color10, v10[53], v10[55], v10[63], v10[61]));
    faces.push(new Face(color10, v10[53], v10[55], v10[119], v10[117]));
    faces.push(new Face(color10, v10[53], v10[61], v10[125], v10[117]));
    faces.push(new Face(color10, v10[54], v10[55], v10[63], v10[62]));
    faces.push(new Face(color10, v10[54], v10[55], v10[119], v10[118]));
    faces.push(new Face(color10, v10[54], v10[62], v10[126], v10[118]));
    faces.push(new Face(color10, v10[55], v10[63], v10[127], v10[119]));
    faces.push(new Face(color10, v10[56], v10[57], v10[59], v10[58]));
    faces.push(new Face(color10, v10[56], v10[57], v10[61], v10[60]));
    faces.push(new Face(color10, v10[56], v10[57], v10[121], v10[120]));
    faces.push(new Face(color10, v10[56], v10[58], v10[62], v10[60]));
    faces.push(new Face(color10, v10[56], v10[58], v10[122], v10[120]));
    faces.push(new Face(color10, v10[56], v10[60], v10[124], v10[120]));
    faces.push(new Face(color10, v10[57], v10[59], v10[63], v10[61]));
    faces.push(new Face(color10, v10[57], v10[59], v10[123], v10[121]));
    faces.push(new Face(color10, v10[57], v10[61], v10[125], v10[121]));
    faces.push(new Face(color10, v10[58], v10[59], v10[63], v10[62]));
    faces.push(new Face(color10, v10[58], v10[59], v10[123], v10[122]));
    faces.push(new Face(color10, v10[58], v10[62], v10[126], v10[122]));
    faces.push(new Face(color10, v10[59], v10[63], v10[127], v10[123]));
    faces.push(new Face(color10, v10[60], v10[61], v10[63], v10[62]));
    faces.push(new Face(color10, v10[60], v10[61], v10[125], v10[124]));
    faces.push(new Face(color10, v10[60], v10[62], v10[126], v10[124]));
    faces.push(new Face(color10, v10[61], v10[63], v10[127], v10[125]));
    faces.push(new Face(color10, v10[62], v10[63], v10[127], v10[126]));
    faces.push(new Face(color10, v10[64], v10[65], v10[67], v10[66]));
    faces.push(new Face(color10, v10[64], v10[65], v10[69], v10[68]));
    faces.push(new Face(color10, v10[64], v10[65], v10[73], v10[72]));
    faces.push(new Face(color10, v10[64], v10[65], v10[81], v10[80]));
    faces.push(new Face(color10, v10[64], v10[65], v10[97], v10[96]));
    faces.push(new Face(color10, v10[64], v10[66], v10[70], v10[68]));
    faces.push(new Face(color10, v10[64], v10[66], v10[74], v10[72]));
    faces.push(new Face(color10, v10[64], v10[66], v10[82], v10[80]));
    faces.push(new Face(color10, v10[64], v10[66], v10[98], v10[96]));
    faces.push(new Face(color10, v10[64], v10[68], v10[76], v10[72]));
    faces.push(new Face(color10, v10[64], v10[68], v10[84], v10[80]));
    faces.push(new Face(color10, v10[64], v10[68], v10[100], v10[96]));
    faces.push(new Face(color10, v10[64], v10[72], v10[88], v10[80]));
    faces.push(new Face(color10, v10[64], v10[72], v10[104], v10[96]));
    faces.push(new Face(color10, v10[64], v10[80], v10[112], v10[96]));
    faces.push(new Face(color10, v10[65], v10[67], v10[71], v10[69]));
    faces.push(new Face(color10, v10[65], v10[67], v10[75], v10[73]));
    faces.push(new Face(color10, v10[65], v10[67], v10[83], v10[81]));
    faces.push(new Face(color10, v10[65], v10[67], v10[99], v10[97]));
    faces.push(new Face(color10, v10[65], v10[69], v10[77], v10[73]));
    faces.push(new Face(color10, v10[65], v10[69], v10[85], v10[81]));
    faces.push(new Face(color10, v10[65], v10[69], v10[101], v10[97]));
    faces.push(new Face(color10, v10[65], v10[73], v10[89], v10[81]));
    faces.push(new Face(color10, v10[65], v10[73], v10[105], v10[97]));
    faces.push(new Face(color10, v10[65], v10[81], v10[113], v10[97]));
    faces.push(new Face(color10, v10[66], v10[67], v10[71], v10[70]));
    faces.push(new Face(color10, v10[66], v10[67], v10[75], v10[74]));
    faces.push(new Face(color10, v10[66], v10[67], v10[83], v10[82]));
    faces.push(new Face(color10, v10[66], v10[67], v10[99], v10[98]));
    faces.push(new Face(color10, v10[66], v10[70], v10[78], v10[74]));
    faces.push(new Face(color10, v10[66], v10[70], v10[86], v10[82]));
    faces.push(new Face(color10, v10[66], v10[70], v10[102], v10[98]));
    faces.push(new Face(color10, v10[66], v10[74], v10[90], v10[82]));
    faces.push(new Face(color10, v10[66], v10[74], v10[106], v10[98]));
    faces.push(new Face(color10, v10[66], v10[82], v10[114], v10[98]));
    faces.push(new Face(color10, v10[67], v10[71], v10[79], v10[75]));
    faces.push(new Face(color10, v10[67], v10[71], v10[87], v10[83]));
    faces.push(new Face(color10, v10[67], v10[71], v10[103], v10[99]));
    faces.push(new Face(color10, v10[67], v10[75], v10[91], v10[83]));
    faces.push(new Face(color10, v10[67], v10[75], v10[107], v10[99]));
    faces.push(new Face(color10, v10[67], v10[83], v10[115], v10[99]));
    faces.push(new Face(color10, v10[68], v10[69], v10[71], v10[70]));
    faces.push(new Face(color10, v10[68], v10[69], v10[77], v10[76]));
    faces.push(new Face(color10, v10[68], v10[69], v10[85], v10[84]));
    faces.push(new Face(color10, v10[68], v10[69], v10[101], v10[100]));
    faces.push(new Face(color10, v10[68], v10[70], v10[78], v10[76]));
    faces.push(new Face(color10, v10[68], v10[70], v10[86], v10[84]));
    faces.push(new Face(color10, v10[68], v10[70], v10[102], v10[100]));
    faces.push(new Face(color10, v10[68], v10[76], v10[92], v10[84]));
    faces.push(new Face(color10, v10[68], v10[76], v10[108], v10[100]));
    faces.push(new Face(color10, v10[68], v10[84], v10[116], v10[100]));
    faces.push(new Face(color10, v10[69], v10[71], v10[79], v10[77]));
    faces.push(new Face(color10, v10[69], v10[71], v10[87], v10[85]));
    faces.push(new Face(color10, v10[69], v10[71], v10[103], v10[101]));
    faces.push(new Face(color10, v10[69], v10[77], v10[93], v10[85]));
    faces.push(new Face(color10, v10[69], v10[77], v10[109], v10[101]));
    faces.push(new Face(color10, v10[69], v10[85], v10[117], v10[101]));
    faces.push(new Face(color10, v10[70], v10[71], v10[79], v10[78]));
    faces.push(new Face(color10, v10[70], v10[71], v10[87], v10[86]));
    faces.push(new Face(color10, v10[70], v10[71], v10[103], v10[102]));
    faces.push(new Face(color10, v10[70], v10[78], v10[94], v10[86]));
    faces.push(new Face(color10, v10[70], v10[78], v10[110], v10[102]));
    faces.push(new Face(color10, v10[70], v10[86], v10[118], v10[102]));
    faces.push(new Face(color10, v10[71], v10[79], v10[95], v10[87]));
    faces.push(new Face(color10, v10[71], v10[79], v10[111], v10[103]));
    faces.push(new Face(color10, v10[71], v10[87], v10[119], v10[103]));
    faces.push(new Face(color10, v10[72], v10[73], v10[75], v10[74]));
    faces.push(new Face(color10, v10[72], v10[73], v10[77], v10[76]));
    faces.push(new Face(color10, v10[72], v10[73], v10[89], v10[88]));
    faces.push(new Face(color10, v10[72], v10[73], v10[105], v10[104]));
    faces.push(new Face(color10, v10[72], v10[74], v10[78], v10[76]));
    faces.push(new Face(color10, v10[72], v10[74], v10[90], v10[88]));
    faces.push(new Face(color10, v10[72], v10[74], v10[106], v10[104]));
    faces.push(new Face(color10, v10[72], v10[76], v10[92], v10[88]));
    faces.push(new Face(color10, v10[72], v10[76], v10[108], v10[104]));
    faces.push(new Face(color10, v10[72], v10[88], v10[120], v10[104]));
    faces.push(new Face(color10, v10[73], v10[75], v10[79], v10[77]));
    faces.push(new Face(color10, v10[73], v10[75], v10[91], v10[89]));
    faces.push(new Face(color10, v10[73], v10[75], v10[107], v10[105]));
    faces.push(new Face(color10, v10[73], v10[77], v10[93], v10[89]));
    faces.push(new Face(color10, v10[73], v10[77], v10[109], v10[105]));
    faces.push(new Face(color10, v10[73], v10[89], v10[121], v10[105]));
    faces.push(new Face(color10, v10[74], v10[75], v10[79], v10[78]));
    faces.push(new Face(color10, v10[74], v10[75], v10[91], v10[90]));
    faces.push(new Face(color10, v10[74], v10[75], v10[107], v10[106]));
    faces.push(new Face(color10, v10[74], v10[78], v10[94], v10[90]));
    faces.push(new Face(color10, v10[74], v10[78], v10[110], v10[106]));
    faces.push(new Face(color10, v10[74], v10[90], v10[122], v10[106]));
    faces.push(new Face(color10, v10[75], v10[79], v10[95], v10[91]));
    faces.push(new Face(color10, v10[75], v10[79], v10[111], v10[107]));
    faces.push(new Face(color10, v10[75], v10[91], v10[123], v10[107]));
    faces.push(new Face(color10, v10[76], v10[77], v10[79], v10[78]));
    faces.push(new Face(color10, v10[76], v10[77], v10[93], v10[92]));
    faces.push(new Face(color10, v10[76], v10[77], v10[109], v10[108]));
    faces.push(new Face(color10, v10[76], v10[78], v10[94], v10[92]));
    faces.push(new Face(color10, v10[76], v10[78], v10[110], v10[108]));
    faces.push(new Face(color10, v10[76], v10[92], v10[124], v10[108]));
    faces.push(new Face(color10, v10[77], v10[79], v10[95], v10[93]));
    faces.push(new Face(color10, v10[77], v10[79], v10[111], v10[109]));
    faces.push(new Face(color10, v10[77], v10[93], v10[125], v10[109]));
    faces.push(new Face(color10, v10[78], v10[79], v10[95], v10[94]));
    faces.push(new Face(color10, v10[78], v10[79], v10[111], v10[110]));
    faces.push(new Face(color10, v10[78], v10[94], v10[126], v10[110]));
    faces.push(new Face(color10, v10[79], v10[95], v10[127], v10[111]));
    faces.push(new Face(color10, v10[80], v10[81], v10[83], v10[82]));
    faces.push(new Face(color10, v10[80], v10[81], v10[85], v10[84]));
    faces.push(new Face(color10, v10[80], v10[81], v10[89], v10[88]));
    faces.push(new Face(color10, v10[80], v10[81], v10[113], v10[112]));
    faces.push(new Face(color10, v10[80], v10[82], v10[86], v10[84]));
    faces.push(new Face(color10, v10[80], v10[82], v10[90], v10[88]));
    faces.push(new Face(color10, v10[80], v10[82], v10[114], v10[112]));
    faces.push(new Face(color10, v10[80], v10[84], v10[92], v10[88]));
    faces.push(new Face(color10, v10[80], v10[84], v10[116], v10[112]));
    faces.push(new Face(color10, v10[80], v10[88], v10[120], v10[112]));
    faces.push(new Face(color10, v10[81], v10[83], v10[87], v10[85]));
    faces.push(new Face(color10, v10[81], v10[83], v10[91], v10[89]));
    faces.push(new Face(color10, v10[81], v10[83], v10[115], v10[113]));
    faces.push(new Face(color10, v10[81], v10[85], v10[93], v10[89]));
    faces.push(new Face(color10, v10[81], v10[85], v10[117], v10[113]));
    faces.push(new Face(color10, v10[81], v10[89], v10[121], v10[113]));
    faces.push(new Face(color10, v10[82], v10[83], v10[87], v10[86]));
    faces.push(new Face(color10, v10[82], v10[83], v10[91], v10[90]));
    faces.push(new Face(color10, v10[82], v10[83], v10[115], v10[114]));
    faces.push(new Face(color10, v10[82], v10[86], v10[94], v10[90]));
    faces.push(new Face(color10, v10[82], v10[86], v10[118], v10[114]));
    faces.push(new Face(color10, v10[82], v10[90], v10[122], v10[114]));
    faces.push(new Face(color10, v10[83], v10[87], v10[95], v10[91]));
    faces.push(new Face(color10, v10[83], v10[87], v10[119], v10[115]));
    faces.push(new Face(color10, v10[83], v10[91], v10[123], v10[115]));
    faces.push(new Face(color10, v10[84], v10[85], v10[87], v10[86]));
    faces.push(new Face(color10, v10[84], v10[85], v10[93], v10[92]));
    faces.push(new Face(color10, v10[84], v10[85], v10[117], v10[116]));
    faces.push(new Face(color10, v10[84], v10[86], v10[94], v10[92]));
    faces.push(new Face(color10, v10[84], v10[86], v10[118], v10[116]));
    faces.push(new Face(color10, v10[84], v10[92], v10[124], v10[116]));
    faces.push(new Face(color10, v10[85], v10[87], v10[95], v10[93]));
    faces.push(new Face(color10, v10[85], v10[87], v10[119], v10[117]));
    faces.push(new Face(color10, v10[85], v10[93], v10[125], v10[117]));
    faces.push(new Face(color10, v10[86], v10[87], v10[95], v10[94]));
    faces.push(new Face(color10, v10[86], v10[87], v10[119], v10[118]));
    faces.push(new Face(color10, v10[86], v10[94], v10[126], v10[118]));
    faces.push(new Face(color10, v10[87], v10[95], v10[127], v10[119]));
    faces.push(new Face(color10, v10[88], v10[89], v10[91], v10[90]));
    faces.push(new Face(color10, v10[88], v10[89], v10[93], v10[92]));
    faces.push(new Face(color10, v10[88], v10[89], v10[121], v10[120]));
    faces.push(new Face(color10, v10[88], v10[90], v10[94], v10[92]));
    faces.push(new Face(color10, v10[88], v10[90], v10[122], v10[120]));
    faces.push(new Face(color10, v10[88], v10[92], v10[124], v10[120]));
    faces.push(new Face(color10, v10[89], v10[91], v10[95], v10[93]));
    faces.push(new Face(color10, v10[89], v10[91], v10[123], v10[121]));
    faces.push(new Face(color10, v10[89], v10[93], v10[125], v10[121]));
    faces.push(new Face(color10, v10[90], v10[91], v10[95], v10[94]));
    faces.push(new Face(color10, v10[90], v10[91], v10[123], v10[122]));
    faces.push(new Face(color10, v10[90], v10[94], v10[126], v10[122]));
    faces.push(new Face(color10, v10[91], v10[95], v10[127], v10[123]));
    faces.push(new Face(color10, v10[92], v10[93], v10[95], v10[94]));
    faces.push(new Face(color10, v10[92], v10[93], v10[125], v10[124]));
    faces.push(new Face(color10, v10[92], v10[94], v10[126], v10[124]));
    faces.push(new Face(color10, v10[93], v10[95], v10[127], v10[125]));
    faces.push(new Face(color10, v10[94], v10[95], v10[127], v10[126]));
    faces.push(new Face(color10, v10[96], v10[97], v10[99], v10[98]));
    faces.push(new Face(color10, v10[96], v10[97], v10[101], v10[100]));
    faces.push(new Face(color10, v10[96], v10[97], v10[105], v10[104]));
    faces.push(new Face(color10, v10[96], v10[97], v10[113], v10[112]));
    faces.push(new Face(color10, v10[96], v10[98], v10[102], v10[100]));
    faces.push(new Face(color10, v10[96], v10[98], v10[106], v10[104]));
    faces.push(new Face(color10, v10[96], v10[98], v10[114], v10[112]));
    faces.push(new Face(color10, v10[96], v10[100], v10[108], v10[104]));
    faces.push(new Face(color10, v10[96], v10[100], v10[116], v10[112]));
    faces.push(new Face(color10, v10[96], v10[104], v10[120], v10[112]));
    faces.push(new Face(color10, v10[97], v10[99], v10[103], v10[101]));
    faces.push(new Face(color10, v10[97], v10[99], v10[107], v10[105]));
    faces.push(new Face(color10, v10[97], v10[99], v10[115], v10[113]));
    faces.push(new Face(color10, v10[97], v10[101], v10[109], v10[105]));
    faces.push(new Face(color10, v10[97], v10[101], v10[117], v10[113]));
    faces.push(new Face(color10, v10[97], v10[105], v10[121], v10[113]));
    faces.push(new Face(color10, v10[98], v10[99], v10[103], v10[102]));
    faces.push(new Face(color10, v10[98], v10[99], v10[107], v10[106]));
    faces.push(new Face(color10, v10[98], v10[99], v10[115], v10[114]));
    faces.push(new Face(color10, v10[98], v10[102], v10[110], v10[106]));
    faces.push(new Face(color10, v10[98], v10[102], v10[118], v10[114]));
    faces.push(new Face(color10, v10[98], v10[106], v10[122], v10[114]));
    faces.push(new Face(color10, v10[99], v10[103], v10[111], v10[107]));
    faces.push(new Face(color10, v10[99], v10[103], v10[119], v10[115]));
    faces.push(new Face(color10, v10[99], v10[107], v10[123], v10[115]));
    faces.push(new Face(color10, v10[100], v10[101], v10[103], v10[102]));
    faces.push(new Face(color10, v10[100], v10[101], v10[109], v10[108]));
    faces.push(new Face(color10, v10[100], v10[101], v10[117], v10[116]));
    faces.push(new Face(color10, v10[100], v10[102], v10[110], v10[108]));
    faces.push(new Face(color10, v10[100], v10[102], v10[118], v10[116]));
    faces.push(new Face(color10, v10[100], v10[108], v10[124], v10[116]));
    faces.push(new Face(color10, v10[101], v10[103], v10[111], v10[109]));
    faces.push(new Face(color10, v10[101], v10[103], v10[119], v10[117]));
    faces.push(new Face(color10, v10[101], v10[109], v10[125], v10[117]));
    faces.push(new Face(color10, v10[102], v10[103], v10[111], v10[110]));
    faces.push(new Face(color10, v10[102], v10[103], v10[119], v10[118]));
    faces.push(new Face(color10, v10[102], v10[110], v10[126], v10[118]));
    faces.push(new Face(color10, v10[103], v10[111], v10[127], v10[119]));
    faces.push(new Face(color10, v10[104], v10[105], v10[107], v10[106]));
    faces.push(new Face(color10, v10[104], v10[105], v10[109], v10[108]));
    faces.push(new Face(color10, v10[104], v10[105], v10[121], v10[120]));
    faces.push(new Face(color10, v10[104], v10[106], v10[110], v10[108]));
    faces.push(new Face(color10, v10[104], v10[106], v10[122], v10[120]));
    faces.push(new Face(color10, v10[104], v10[108], v10[124], v10[120]));
    faces.push(new Face(color10, v10[105], v10[107], v10[111], v10[109]));
    faces.push(new Face(color10, v10[105], v10[107], v10[123], v10[121]));
    faces.push(new Face(color10, v10[105], v10[109], v10[125], v10[121]));
    faces.push(new Face(color10, v10[106], v10[107], v10[111], v10[110]));
    faces.push(new Face(color10, v10[106], v10[107], v10[123], v10[122]));
    faces.push(new Face(color10, v10[106], v10[110], v10[126], v10[122]));
    faces.push(new Face(color10, v10[107], v10[111], v10[127], v10[123]));
    faces.push(new Face(color10, v10[108], v10[109], v10[111], v10[110]));
    faces.push(new Face(color10, v10[108], v10[109], v10[125], v10[124]));
    faces.push(new Face(color10, v10[108], v10[110], v10[126], v10[124]));
    faces.push(new Face(color10, v10[109], v10[111], v10[127], v10[125]));
    faces.push(new Face(color10, v10[110], v10[111], v10[127], v10[126]));
    faces.push(new Face(color10, v10[112], v10[113], v10[115], v10[114]));
    faces.push(new Face(color10, v10[112], v10[113], v10[117], v10[116]));
    faces.push(new Face(color10, v10[112], v10[113], v10[121], v10[120]));
    faces.push(new Face(color10, v10[112], v10[114], v10[118], v10[116]));
    faces.push(new Face(color10, v10[112], v10[114], v10[122], v10[120]));
    faces.push(new Face(color10, v10[112], v10[116], v10[124], v10[120]));
    faces.push(new Face(color10, v10[113], v10[115], v10[119], v10[117]));
    faces.push(new Face(color10, v10[113], v10[115], v10[123], v10[121]));
    faces.push(new Face(color10, v10[113], v10[117], v10[125], v10[121]));
    faces.push(new Face(color10, v10[114], v10[115], v10[119], v10[118]));
    faces.push(new Face(color10, v10[114], v10[115], v10[123], v10[122]));
    faces.push(new Face(color10, v10[114], v10[118], v10[126], v10[122]));
    faces.push(new Face(color10, v10[115], v10[119], v10[127], v10[123]));
    faces.push(new Face(color10, v10[116], v10[117], v10[119], v10[118]));
    faces.push(new Face(color10, v10[116], v10[117], v10[125], v10[124]));
    faces.push(new Face(color10, v10[116], v10[118], v10[126], v10[124]));
    faces.push(new Face(color10, v10[117], v10[119], v10[127], v10[125]));
    faces.push(new Face(color10, v10[118], v10[119], v10[127], v10[126]));
    faces.push(new Face(color10, v10[120], v10[121], v10[123], v10[122]));
    faces.push(new Face(color10, v10[120], v10[121], v10[125], v10[124]));
    faces.push(new Face(color10, v10[120], v10[122], v10[126], v10[124]));
    faces.push(new Face(color10, v10[121], v10[123], v10[127], v10[125]));
    faces.push(new Face(color10, v10[122], v10[123], v10[127], v10[126]));
    faces.push(new Face(color10, v10[124], v10[125], v10[127], v10[126]));
    for (let i = 0; i < v10.length; i++) {
        v10[i].rotate(r);
        v10[i].project();
    }

    v11[0] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v11[1] = new Vertex(-w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v11[2] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v11[3] = new Vertex(-w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v11[4] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v11[5] = new Vertex(-w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v11[6] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2);
    v11[7] = new Vertex(-w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v11[8] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v11[9] = new Vertex(-w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v11[10] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2);
    v11[11] = new Vertex(-w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v11[12] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2);
    v11[13] = new Vertex(-w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v11[14] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, w/2, w/2, -w/2);
    v11[15] = new Vertex(-w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v11[16] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v11[17] = new Vertex(-w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v11[18] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v11[19] = new Vertex(-w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v11[20] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v11[21] = new Vertex(-w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v11[22] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, w/2, w/2, -w/2);
    v11[23] = new Vertex(-w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v11[24] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v11[25] = new Vertex(-w/2, -w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v11[26] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, -w/2, w/2, -w/2);
    v11[27] = new Vertex(-w/2, -w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v11[28] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, w/2, -w/2, -w/2);
    v11[29] = new Vertex(-w/2, -w/2, w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v11[30] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, w/2, w/2, -w/2);
    v11[31] = new Vertex(-w/2, -w/2, w/2, w/2+Math.sin(theta)*w, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v11[32] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v11[33] = new Vertex(-w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v11[34] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v11[35] = new Vertex(-w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v11[36] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v11[37] = new Vertex(-w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v11[38] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2);
    v11[39] = new Vertex(-w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v11[40] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v11[41] = new Vertex(-w/2, w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v11[42] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2);
    v11[43] = new Vertex(-w/2, w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v11[44] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2);
    v11[45] = new Vertex(-w/2, w/2, -w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v11[46] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, w/2, w/2, -w/2);
    v11[47] = new Vertex(-w/2, w/2, -w/2, w/2+Math.sin(theta)*w, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v11[48] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v11[49] = new Vertex(-w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v11[50] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v11[51] = new Vertex(-w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v11[52] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v11[53] = new Vertex(-w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v11[54] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, w/2, w/2, -w/2);
    v11[55] = new Vertex(-w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v11[56] = new Vertex(-w/2, w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v11[57] = new Vertex(-w/2, w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v11[58] = new Vertex(-w/2, w/2, w/2, w/2, w/2, -w/2, w/2, -w/2);
    v11[59] = new Vertex(-w/2, w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v11[60] = new Vertex(-w/2, w/2, w/2, w/2, w/2, w/2, -w/2, -w/2);
    v11[61] = new Vertex(-w/2, w/2, w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v11[62] = new Vertex(-w/2, w/2, w/2, w/2, w/2, w/2, w/2, -w/2);
    v11[63] = new Vertex(-w/2, w/2, w/2, w/2+Math.sin(theta)*w, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v11[64] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v11[65] = new Vertex(w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v11[66] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v11[67] = new Vertex(w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v11[68] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v11[69] = new Vertex(w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v11[70] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2);
    v11[71] = new Vertex(w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v11[72] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v11[73] = new Vertex(w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v11[74] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2);
    v11[75] = new Vertex(w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v11[76] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2);
    v11[77] = new Vertex(w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v11[78] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, w/2, w/2, -w/2);
    v11[79] = new Vertex(w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v11[80] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v11[81] = new Vertex(w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v11[82] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v11[83] = new Vertex(w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v11[84] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v11[85] = new Vertex(w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v11[86] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, w/2, w/2, -w/2);
    v11[87] = new Vertex(w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v11[88] = new Vertex(w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v11[89] = new Vertex(w/2, -w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v11[90] = new Vertex(w/2, -w/2, w/2, w/2, w/2, -w/2, w/2, -w/2);
    v11[91] = new Vertex(w/2, -w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v11[92] = new Vertex(w/2, -w/2, w/2, w/2, w/2, w/2, -w/2, -w/2);
    v11[93] = new Vertex(w/2, -w/2, w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v11[94] = new Vertex(w/2, -w/2, w/2, w/2, w/2, w/2, w/2, -w/2);
    v11[95] = new Vertex(w/2, -w/2, w/2, w/2+Math.sin(theta)*w, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v11[96] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v11[97] = new Vertex(w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v11[98] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v11[99] = new Vertex(w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v11[100] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v11[101] = new Vertex(w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v11[102] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2);
    v11[103] = new Vertex(w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v11[104] = new Vertex(w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v11[105] = new Vertex(w/2, w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v11[106] = new Vertex(w/2, w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2);
    v11[107] = new Vertex(w/2, w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v11[108] = new Vertex(w/2, w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2);
    v11[109] = new Vertex(w/2, w/2, -w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v11[110] = new Vertex(w/2, w/2, -w/2, w/2, w/2, w/2, w/2, -w/2);
    v11[111] = new Vertex(w/2, w/2, -w/2, w/2+Math.sin(theta)*w, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v11[112] = new Vertex(w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v11[113] = new Vertex(w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v11[114] = new Vertex(w/2, w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v11[115] = new Vertex(w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v11[116] = new Vertex(w/2, w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v11[117] = new Vertex(w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v11[118] = new Vertex(w/2, w/2, w/2, w/2, -w/2, w/2, w/2, -w/2);
    v11[119] = new Vertex(w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v11[120] = new Vertex(w/2, w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v11[121] = new Vertex(w/2, w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v11[122] = new Vertex(w/2, w/2, w/2, w/2, w/2, -w/2, w/2, -w/2);
    v11[123] = new Vertex(w/2, w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v11[124] = new Vertex(w/2, w/2, w/2, w/2, w/2, w/2, -w/2, -w/2);
    v11[125] = new Vertex(w/2, w/2, w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v11[126] = new Vertex(w/2, w/2, w/2, w/2, w/2, w/2, w/2, -w/2);
    v11[127] = new Vertex(w/2, w/2, w/2, w/2+Math.sin(theta)*w, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    faces.push(new Face(color11, v11[0], v11[1], v11[3], v11[2]));
    faces.push(new Face(color11, v11[0], v11[1], v11[5], v11[4]));
    faces.push(new Face(color11, v11[0], v11[1], v11[9], v11[8]));
    faces.push(new Face(color11, v11[0], v11[1], v11[17], v11[16]));
    faces.push(new Face(color11, v11[0], v11[1], v11[33], v11[32]));
    faces.push(new Face(color11, v11[0], v11[1], v11[65], v11[64]));
    faces.push(new Face(color11, v11[0], v11[2], v11[6], v11[4]));
    faces.push(new Face(color11, v11[0], v11[2], v11[10], v11[8]));
    faces.push(new Face(color11, v11[0], v11[2], v11[18], v11[16]));
    faces.push(new Face(color11, v11[0], v11[2], v11[34], v11[32]));
    faces.push(new Face(color11, v11[0], v11[2], v11[66], v11[64]));
    faces.push(new Face(color11, v11[0], v11[4], v11[12], v11[8]));
    faces.push(new Face(color11, v11[0], v11[4], v11[20], v11[16]));
    faces.push(new Face(color11, v11[0], v11[4], v11[36], v11[32]));
    faces.push(new Face(color11, v11[0], v11[4], v11[68], v11[64]));
    faces.push(new Face(color11, v11[0], v11[8], v11[24], v11[16]));
    faces.push(new Face(color11, v11[0], v11[8], v11[40], v11[32]));
    faces.push(new Face(color11, v11[0], v11[8], v11[72], v11[64]));
    faces.push(new Face(color11, v11[0], v11[16], v11[48], v11[32]));
    faces.push(new Face(color11, v11[0], v11[16], v11[80], v11[64]));
    faces.push(new Face(color11, v11[0], v11[32], v11[96], v11[64]));
    faces.push(new Face(color11, v11[1], v11[3], v11[7], v11[5]));
    faces.push(new Face(color11, v11[1], v11[3], v11[11], v11[9]));
    faces.push(new Face(color11, v11[1], v11[3], v11[19], v11[17]));
    faces.push(new Face(color11, v11[1], v11[3], v11[35], v11[33]));
    faces.push(new Face(color11, v11[1], v11[3], v11[67], v11[65]));
    faces.push(new Face(color11, v11[1], v11[5], v11[13], v11[9]));
    faces.push(new Face(color11, v11[1], v11[5], v11[21], v11[17]));
    faces.push(new Face(color11, v11[1], v11[5], v11[37], v11[33]));
    faces.push(new Face(color11, v11[1], v11[5], v11[69], v11[65]));
    faces.push(new Face(color11, v11[1], v11[9], v11[25], v11[17]));
    faces.push(new Face(color11, v11[1], v11[9], v11[41], v11[33]));
    faces.push(new Face(color11, v11[1], v11[9], v11[73], v11[65]));
    faces.push(new Face(color11, v11[1], v11[17], v11[49], v11[33]));
    faces.push(new Face(color11, v11[1], v11[17], v11[81], v11[65]));
    faces.push(new Face(color11, v11[1], v11[33], v11[97], v11[65]));
    faces.push(new Face(color11, v11[2], v11[3], v11[7], v11[6]));
    faces.push(new Face(color11, v11[2], v11[3], v11[11], v11[10]));
    faces.push(new Face(color11, v11[2], v11[3], v11[19], v11[18]));
    faces.push(new Face(color11, v11[2], v11[3], v11[35], v11[34]));
    faces.push(new Face(color11, v11[2], v11[3], v11[67], v11[66]));
    faces.push(new Face(color11, v11[2], v11[6], v11[14], v11[10]));
    faces.push(new Face(color11, v11[2], v11[6], v11[22], v11[18]));
    faces.push(new Face(color11, v11[2], v11[6], v11[38], v11[34]));
    faces.push(new Face(color11, v11[2], v11[6], v11[70], v11[66]));
    faces.push(new Face(color11, v11[2], v11[10], v11[26], v11[18]));
    faces.push(new Face(color11, v11[2], v11[10], v11[42], v11[34]));
    faces.push(new Face(color11, v11[2], v11[10], v11[74], v11[66]));
    faces.push(new Face(color11, v11[2], v11[18], v11[50], v11[34]));
    faces.push(new Face(color11, v11[2], v11[18], v11[82], v11[66]));
    faces.push(new Face(color11, v11[2], v11[34], v11[98], v11[66]));
    faces.push(new Face(color11, v11[3], v11[7], v11[15], v11[11]));
    faces.push(new Face(color11, v11[3], v11[7], v11[23], v11[19]));
    faces.push(new Face(color11, v11[3], v11[7], v11[39], v11[35]));
    faces.push(new Face(color11, v11[3], v11[7], v11[71], v11[67]));
    faces.push(new Face(color11, v11[3], v11[11], v11[27], v11[19]));
    faces.push(new Face(color11, v11[3], v11[11], v11[43], v11[35]));
    faces.push(new Face(color11, v11[3], v11[11], v11[75], v11[67]));
    faces.push(new Face(color11, v11[3], v11[19], v11[51], v11[35]));
    faces.push(new Face(color11, v11[3], v11[19], v11[83], v11[67]));
    faces.push(new Face(color11, v11[3], v11[35], v11[99], v11[67]));
    faces.push(new Face(color11, v11[4], v11[5], v11[7], v11[6]));
    faces.push(new Face(color11, v11[4], v11[5], v11[13], v11[12]));
    faces.push(new Face(color11, v11[4], v11[5], v11[21], v11[20]));
    faces.push(new Face(color11, v11[4], v11[5], v11[37], v11[36]));
    faces.push(new Face(color11, v11[4], v11[5], v11[69], v11[68]));
    faces.push(new Face(color11, v11[4], v11[6], v11[14], v11[12]));
    faces.push(new Face(color11, v11[4], v11[6], v11[22], v11[20]));
    faces.push(new Face(color11, v11[4], v11[6], v11[38], v11[36]));
    faces.push(new Face(color11, v11[4], v11[6], v11[70], v11[68]));
    faces.push(new Face(color11, v11[4], v11[12], v11[28], v11[20]));
    faces.push(new Face(color11, v11[4], v11[12], v11[44], v11[36]));
    faces.push(new Face(color11, v11[4], v11[12], v11[76], v11[68]));
    faces.push(new Face(color11, v11[4], v11[20], v11[52], v11[36]));
    faces.push(new Face(color11, v11[4], v11[20], v11[84], v11[68]));
    faces.push(new Face(color11, v11[4], v11[36], v11[100], v11[68]));
    faces.push(new Face(color11, v11[5], v11[7], v11[15], v11[13]));
    faces.push(new Face(color11, v11[5], v11[7], v11[23], v11[21]));
    faces.push(new Face(color11, v11[5], v11[7], v11[39], v11[37]));
    faces.push(new Face(color11, v11[5], v11[7], v11[71], v11[69]));
    faces.push(new Face(color11, v11[5], v11[13], v11[29], v11[21]));
    faces.push(new Face(color11, v11[5], v11[13], v11[45], v11[37]));
    faces.push(new Face(color11, v11[5], v11[13], v11[77], v11[69]));
    faces.push(new Face(color11, v11[5], v11[21], v11[53], v11[37]));
    faces.push(new Face(color11, v11[5], v11[21], v11[85], v11[69]));
    faces.push(new Face(color11, v11[5], v11[37], v11[101], v11[69]));
    faces.push(new Face(color11, v11[6], v11[7], v11[15], v11[14]));
    faces.push(new Face(color11, v11[6], v11[7], v11[23], v11[22]));
    faces.push(new Face(color11, v11[6], v11[7], v11[39], v11[38]));
    faces.push(new Face(color11, v11[6], v11[7], v11[71], v11[70]));
    faces.push(new Face(color11, v11[6], v11[14], v11[30], v11[22]));
    faces.push(new Face(color11, v11[6], v11[14], v11[46], v11[38]));
    faces.push(new Face(color11, v11[6], v11[14], v11[78], v11[70]));
    faces.push(new Face(color11, v11[6], v11[22], v11[54], v11[38]));
    faces.push(new Face(color11, v11[6], v11[22], v11[86], v11[70]));
    faces.push(new Face(color11, v11[6], v11[38], v11[102], v11[70]));
    faces.push(new Face(color11, v11[7], v11[15], v11[31], v11[23]));
    faces.push(new Face(color11, v11[7], v11[15], v11[47], v11[39]));
    faces.push(new Face(color11, v11[7], v11[15], v11[79], v11[71]));
    faces.push(new Face(color11, v11[7], v11[23], v11[55], v11[39]));
    faces.push(new Face(color11, v11[7], v11[23], v11[87], v11[71]));
    faces.push(new Face(color11, v11[7], v11[39], v11[103], v11[71]));
    faces.push(new Face(color11, v11[8], v11[9], v11[11], v11[10]));
    faces.push(new Face(color11, v11[8], v11[9], v11[13], v11[12]));
    faces.push(new Face(color11, v11[8], v11[9], v11[25], v11[24]));
    faces.push(new Face(color11, v11[8], v11[9], v11[41], v11[40]));
    faces.push(new Face(color11, v11[8], v11[9], v11[73], v11[72]));
    faces.push(new Face(color11, v11[8], v11[10], v11[14], v11[12]));
    faces.push(new Face(color11, v11[8], v11[10], v11[26], v11[24]));
    faces.push(new Face(color11, v11[8], v11[10], v11[42], v11[40]));
    faces.push(new Face(color11, v11[8], v11[10], v11[74], v11[72]));
    faces.push(new Face(color11, v11[8], v11[12], v11[28], v11[24]));
    faces.push(new Face(color11, v11[8], v11[12], v11[44], v11[40]));
    faces.push(new Face(color11, v11[8], v11[12], v11[76], v11[72]));
    faces.push(new Face(color11, v11[8], v11[24], v11[56], v11[40]));
    faces.push(new Face(color11, v11[8], v11[24], v11[88], v11[72]));
    faces.push(new Face(color11, v11[8], v11[40], v11[104], v11[72]));
    faces.push(new Face(color11, v11[9], v11[11], v11[15], v11[13]));
    faces.push(new Face(color11, v11[9], v11[11], v11[27], v11[25]));
    faces.push(new Face(color11, v11[9], v11[11], v11[43], v11[41]));
    faces.push(new Face(color11, v11[9], v11[11], v11[75], v11[73]));
    faces.push(new Face(color11, v11[9], v11[13], v11[29], v11[25]));
    faces.push(new Face(color11, v11[9], v11[13], v11[45], v11[41]));
    faces.push(new Face(color11, v11[9], v11[13], v11[77], v11[73]));
    faces.push(new Face(color11, v11[9], v11[25], v11[57], v11[41]));
    faces.push(new Face(color11, v11[9], v11[25], v11[89], v11[73]));
    faces.push(new Face(color11, v11[9], v11[41], v11[105], v11[73]));
    faces.push(new Face(color11, v11[10], v11[11], v11[15], v11[14]));
    faces.push(new Face(color11, v11[10], v11[11], v11[27], v11[26]));
    faces.push(new Face(color11, v11[10], v11[11], v11[43], v11[42]));
    faces.push(new Face(color11, v11[10], v11[11], v11[75], v11[74]));
    faces.push(new Face(color11, v11[10], v11[14], v11[30], v11[26]));
    faces.push(new Face(color11, v11[10], v11[14], v11[46], v11[42]));
    faces.push(new Face(color11, v11[10], v11[14], v11[78], v11[74]));
    faces.push(new Face(color11, v11[10], v11[26], v11[58], v11[42]));
    faces.push(new Face(color11, v11[10], v11[26], v11[90], v11[74]));
    faces.push(new Face(color11, v11[10], v11[42], v11[106], v11[74]));
    faces.push(new Face(color11, v11[11], v11[15], v11[31], v11[27]));
    faces.push(new Face(color11, v11[11], v11[15], v11[47], v11[43]));
    faces.push(new Face(color11, v11[11], v11[15], v11[79], v11[75]));
    faces.push(new Face(color11, v11[11], v11[27], v11[59], v11[43]));
    faces.push(new Face(color11, v11[11], v11[27], v11[91], v11[75]));
    faces.push(new Face(color11, v11[11], v11[43], v11[107], v11[75]));
    faces.push(new Face(color11, v11[12], v11[13], v11[15], v11[14]));
    faces.push(new Face(color11, v11[12], v11[13], v11[29], v11[28]));
    faces.push(new Face(color11, v11[12], v11[13], v11[45], v11[44]));
    faces.push(new Face(color11, v11[12], v11[13], v11[77], v11[76]));
    faces.push(new Face(color11, v11[12], v11[14], v11[30], v11[28]));
    faces.push(new Face(color11, v11[12], v11[14], v11[46], v11[44]));
    faces.push(new Face(color11, v11[12], v11[14], v11[78], v11[76]));
    faces.push(new Face(color11, v11[12], v11[28], v11[60], v11[44]));
    faces.push(new Face(color11, v11[12], v11[28], v11[92], v11[76]));
    faces.push(new Face(color11, v11[12], v11[44], v11[108], v11[76]));
    faces.push(new Face(color11, v11[13], v11[15], v11[31], v11[29]));
    faces.push(new Face(color11, v11[13], v11[15], v11[47], v11[45]));
    faces.push(new Face(color11, v11[13], v11[15], v11[79], v11[77]));
    faces.push(new Face(color11, v11[13], v11[29], v11[61], v11[45]));
    faces.push(new Face(color11, v11[13], v11[29], v11[93], v11[77]));
    faces.push(new Face(color11, v11[13], v11[45], v11[109], v11[77]));
    faces.push(new Face(color11, v11[14], v11[15], v11[31], v11[30]));
    faces.push(new Face(color11, v11[14], v11[15], v11[47], v11[46]));
    faces.push(new Face(color11, v11[14], v11[15], v11[79], v11[78]));
    faces.push(new Face(color11, v11[14], v11[30], v11[62], v11[46]));
    faces.push(new Face(color11, v11[14], v11[30], v11[94], v11[78]));
    faces.push(new Face(color11, v11[14], v11[46], v11[110], v11[78]));
    faces.push(new Face(color11, v11[15], v11[31], v11[63], v11[47]));
    faces.push(new Face(color11, v11[15], v11[31], v11[95], v11[79]));
    faces.push(new Face(color11, v11[15], v11[47], v11[111], v11[79]));
    faces.push(new Face(color11, v11[16], v11[17], v11[19], v11[18]));
    faces.push(new Face(color11, v11[16], v11[17], v11[21], v11[20]));
    faces.push(new Face(color11, v11[16], v11[17], v11[25], v11[24]));
    faces.push(new Face(color11, v11[16], v11[17], v11[49], v11[48]));
    faces.push(new Face(color11, v11[16], v11[17], v11[81], v11[80]));
    faces.push(new Face(color11, v11[16], v11[18], v11[22], v11[20]));
    faces.push(new Face(color11, v11[16], v11[18], v11[26], v11[24]));
    faces.push(new Face(color11, v11[16], v11[18], v11[50], v11[48]));
    faces.push(new Face(color11, v11[16], v11[18], v11[82], v11[80]));
    faces.push(new Face(color11, v11[16], v11[20], v11[28], v11[24]));
    faces.push(new Face(color11, v11[16], v11[20], v11[52], v11[48]));
    faces.push(new Face(color11, v11[16], v11[20], v11[84], v11[80]));
    faces.push(new Face(color11, v11[16], v11[24], v11[56], v11[48]));
    faces.push(new Face(color11, v11[16], v11[24], v11[88], v11[80]));
    faces.push(new Face(color11, v11[16], v11[48], v11[112], v11[80]));
    faces.push(new Face(color11, v11[17], v11[19], v11[23], v11[21]));
    faces.push(new Face(color11, v11[17], v11[19], v11[27], v11[25]));
    faces.push(new Face(color11, v11[17], v11[19], v11[51], v11[49]));
    faces.push(new Face(color11, v11[17], v11[19], v11[83], v11[81]));
    faces.push(new Face(color11, v11[17], v11[21], v11[29], v11[25]));
    faces.push(new Face(color11, v11[17], v11[21], v11[53], v11[49]));
    faces.push(new Face(color11, v11[17], v11[21], v11[85], v11[81]));
    faces.push(new Face(color11, v11[17], v11[25], v11[57], v11[49]));
    faces.push(new Face(color11, v11[17], v11[25], v11[89], v11[81]));
    faces.push(new Face(color11, v11[17], v11[49], v11[113], v11[81]));
    faces.push(new Face(color11, v11[18], v11[19], v11[23], v11[22]));
    faces.push(new Face(color11, v11[18], v11[19], v11[27], v11[26]));
    faces.push(new Face(color11, v11[18], v11[19], v11[51], v11[50]));
    faces.push(new Face(color11, v11[18], v11[19], v11[83], v11[82]));
    faces.push(new Face(color11, v11[18], v11[22], v11[30], v11[26]));
    faces.push(new Face(color11, v11[18], v11[22], v11[54], v11[50]));
    faces.push(new Face(color11, v11[18], v11[22], v11[86], v11[82]));
    faces.push(new Face(color11, v11[18], v11[26], v11[58], v11[50]));
    faces.push(new Face(color11, v11[18], v11[26], v11[90], v11[82]));
    faces.push(new Face(color11, v11[18], v11[50], v11[114], v11[82]));
    faces.push(new Face(color11, v11[19], v11[23], v11[31], v11[27]));
    faces.push(new Face(color11, v11[19], v11[23], v11[55], v11[51]));
    faces.push(new Face(color11, v11[19], v11[23], v11[87], v11[83]));
    faces.push(new Face(color11, v11[19], v11[27], v11[59], v11[51]));
    faces.push(new Face(color11, v11[19], v11[27], v11[91], v11[83]));
    faces.push(new Face(color11, v11[19], v11[51], v11[115], v11[83]));
    faces.push(new Face(color11, v11[20], v11[21], v11[23], v11[22]));
    faces.push(new Face(color11, v11[20], v11[21], v11[29], v11[28]));
    faces.push(new Face(color11, v11[20], v11[21], v11[53], v11[52]));
    faces.push(new Face(color11, v11[20], v11[21], v11[85], v11[84]));
    faces.push(new Face(color11, v11[20], v11[22], v11[30], v11[28]));
    faces.push(new Face(color11, v11[20], v11[22], v11[54], v11[52]));
    faces.push(new Face(color11, v11[20], v11[22], v11[86], v11[84]));
    faces.push(new Face(color11, v11[20], v11[28], v11[60], v11[52]));
    faces.push(new Face(color11, v11[20], v11[28], v11[92], v11[84]));
    faces.push(new Face(color11, v11[20], v11[52], v11[116], v11[84]));
    faces.push(new Face(color11, v11[21], v11[23], v11[31], v11[29]));
    faces.push(new Face(color11, v11[21], v11[23], v11[55], v11[53]));
    faces.push(new Face(color11, v11[21], v11[23], v11[87], v11[85]));
    faces.push(new Face(color11, v11[21], v11[29], v11[61], v11[53]));
    faces.push(new Face(color11, v11[21], v11[29], v11[93], v11[85]));
    faces.push(new Face(color11, v11[21], v11[53], v11[117], v11[85]));
    faces.push(new Face(color11, v11[22], v11[23], v11[31], v11[30]));
    faces.push(new Face(color11, v11[22], v11[23], v11[55], v11[54]));
    faces.push(new Face(color11, v11[22], v11[23], v11[87], v11[86]));
    faces.push(new Face(color11, v11[22], v11[30], v11[62], v11[54]));
    faces.push(new Face(color11, v11[22], v11[30], v11[94], v11[86]));
    faces.push(new Face(color11, v11[22], v11[54], v11[118], v11[86]));
    faces.push(new Face(color11, v11[23], v11[31], v11[63], v11[55]));
    faces.push(new Face(color11, v11[23], v11[31], v11[95], v11[87]));
    faces.push(new Face(color11, v11[23], v11[55], v11[119], v11[87]));
    faces.push(new Face(color11, v11[24], v11[25], v11[27], v11[26]));
    faces.push(new Face(color11, v11[24], v11[25], v11[29], v11[28]));
    faces.push(new Face(color11, v11[24], v11[25], v11[57], v11[56]));
    faces.push(new Face(color11, v11[24], v11[25], v11[89], v11[88]));
    faces.push(new Face(color11, v11[24], v11[26], v11[30], v11[28]));
    faces.push(new Face(color11, v11[24], v11[26], v11[58], v11[56]));
    faces.push(new Face(color11, v11[24], v11[26], v11[90], v11[88]));
    faces.push(new Face(color11, v11[24], v11[28], v11[60], v11[56]));
    faces.push(new Face(color11, v11[24], v11[28], v11[92], v11[88]));
    faces.push(new Face(color11, v11[24], v11[56], v11[120], v11[88]));
    faces.push(new Face(color11, v11[25], v11[27], v11[31], v11[29]));
    faces.push(new Face(color11, v11[25], v11[27], v11[59], v11[57]));
    faces.push(new Face(color11, v11[25], v11[27], v11[91], v11[89]));
    faces.push(new Face(color11, v11[25], v11[29], v11[61], v11[57]));
    faces.push(new Face(color11, v11[25], v11[29], v11[93], v11[89]));
    faces.push(new Face(color11, v11[25], v11[57], v11[121], v11[89]));
    faces.push(new Face(color11, v11[26], v11[27], v11[31], v11[30]));
    faces.push(new Face(color11, v11[26], v11[27], v11[59], v11[58]));
    faces.push(new Face(color11, v11[26], v11[27], v11[91], v11[90]));
    faces.push(new Face(color11, v11[26], v11[30], v11[62], v11[58]));
    faces.push(new Face(color11, v11[26], v11[30], v11[94], v11[90]));
    faces.push(new Face(color11, v11[26], v11[58], v11[122], v11[90]));
    faces.push(new Face(color11, v11[27], v11[31], v11[63], v11[59]));
    faces.push(new Face(color11, v11[27], v11[31], v11[95], v11[91]));
    faces.push(new Face(color11, v11[27], v11[59], v11[123], v11[91]));
    faces.push(new Face(color11, v11[28], v11[29], v11[31], v11[30]));
    faces.push(new Face(color11, v11[28], v11[29], v11[61], v11[60]));
    faces.push(new Face(color11, v11[28], v11[29], v11[93], v11[92]));
    faces.push(new Face(color11, v11[28], v11[30], v11[62], v11[60]));
    faces.push(new Face(color11, v11[28], v11[30], v11[94], v11[92]));
    faces.push(new Face(color11, v11[28], v11[60], v11[124], v11[92]));
    faces.push(new Face(color11, v11[29], v11[31], v11[63], v11[61]));
    faces.push(new Face(color11, v11[29], v11[31], v11[95], v11[93]));
    faces.push(new Face(color11, v11[29], v11[61], v11[125], v11[93]));
    faces.push(new Face(color11, v11[30], v11[31], v11[63], v11[62]));
    faces.push(new Face(color11, v11[30], v11[31], v11[95], v11[94]));
    faces.push(new Face(color11, v11[30], v11[62], v11[126], v11[94]));
    faces.push(new Face(color11, v11[31], v11[63], v11[127], v11[95]));
    faces.push(new Face(color11, v11[32], v11[33], v11[35], v11[34]));
    faces.push(new Face(color11, v11[32], v11[33], v11[37], v11[36]));
    faces.push(new Face(color11, v11[32], v11[33], v11[41], v11[40]));
    faces.push(new Face(color11, v11[32], v11[33], v11[49], v11[48]));
    faces.push(new Face(color11, v11[32], v11[33], v11[97], v11[96]));
    faces.push(new Face(color11, v11[32], v11[34], v11[38], v11[36]));
    faces.push(new Face(color11, v11[32], v11[34], v11[42], v11[40]));
    faces.push(new Face(color11, v11[32], v11[34], v11[50], v11[48]));
    faces.push(new Face(color11, v11[32], v11[34], v11[98], v11[96]));
    faces.push(new Face(color11, v11[32], v11[36], v11[44], v11[40]));
    faces.push(new Face(color11, v11[32], v11[36], v11[52], v11[48]));
    faces.push(new Face(color11, v11[32], v11[36], v11[100], v11[96]));
    faces.push(new Face(color11, v11[32], v11[40], v11[56], v11[48]));
    faces.push(new Face(color11, v11[32], v11[40], v11[104], v11[96]));
    faces.push(new Face(color11, v11[32], v11[48], v11[112], v11[96]));
    faces.push(new Face(color11, v11[33], v11[35], v11[39], v11[37]));
    faces.push(new Face(color11, v11[33], v11[35], v11[43], v11[41]));
    faces.push(new Face(color11, v11[33], v11[35], v11[51], v11[49]));
    faces.push(new Face(color11, v11[33], v11[35], v11[99], v11[97]));
    faces.push(new Face(color11, v11[33], v11[37], v11[45], v11[41]));
    faces.push(new Face(color11, v11[33], v11[37], v11[53], v11[49]));
    faces.push(new Face(color11, v11[33], v11[37], v11[101], v11[97]));
    faces.push(new Face(color11, v11[33], v11[41], v11[57], v11[49]));
    faces.push(new Face(color11, v11[33], v11[41], v11[105], v11[97]));
    faces.push(new Face(color11, v11[33], v11[49], v11[113], v11[97]));
    faces.push(new Face(color11, v11[34], v11[35], v11[39], v11[38]));
    faces.push(new Face(color11, v11[34], v11[35], v11[43], v11[42]));
    faces.push(new Face(color11, v11[34], v11[35], v11[51], v11[50]));
    faces.push(new Face(color11, v11[34], v11[35], v11[99], v11[98]));
    faces.push(new Face(color11, v11[34], v11[38], v11[46], v11[42]));
    faces.push(new Face(color11, v11[34], v11[38], v11[54], v11[50]));
    faces.push(new Face(color11, v11[34], v11[38], v11[102], v11[98]));
    faces.push(new Face(color11, v11[34], v11[42], v11[58], v11[50]));
    faces.push(new Face(color11, v11[34], v11[42], v11[106], v11[98]));
    faces.push(new Face(color11, v11[34], v11[50], v11[114], v11[98]));
    faces.push(new Face(color11, v11[35], v11[39], v11[47], v11[43]));
    faces.push(new Face(color11, v11[35], v11[39], v11[55], v11[51]));
    faces.push(new Face(color11, v11[35], v11[39], v11[103], v11[99]));
    faces.push(new Face(color11, v11[35], v11[43], v11[59], v11[51]));
    faces.push(new Face(color11, v11[35], v11[43], v11[107], v11[99]));
    faces.push(new Face(color11, v11[35], v11[51], v11[115], v11[99]));
    faces.push(new Face(color11, v11[36], v11[37], v11[39], v11[38]));
    faces.push(new Face(color11, v11[36], v11[37], v11[45], v11[44]));
    faces.push(new Face(color11, v11[36], v11[37], v11[53], v11[52]));
    faces.push(new Face(color11, v11[36], v11[37], v11[101], v11[100]));
    faces.push(new Face(color11, v11[36], v11[38], v11[46], v11[44]));
    faces.push(new Face(color11, v11[36], v11[38], v11[54], v11[52]));
    faces.push(new Face(color11, v11[36], v11[38], v11[102], v11[100]));
    faces.push(new Face(color11, v11[36], v11[44], v11[60], v11[52]));
    faces.push(new Face(color11, v11[36], v11[44], v11[108], v11[100]));
    faces.push(new Face(color11, v11[36], v11[52], v11[116], v11[100]));
    faces.push(new Face(color11, v11[37], v11[39], v11[47], v11[45]));
    faces.push(new Face(color11, v11[37], v11[39], v11[55], v11[53]));
    faces.push(new Face(color11, v11[37], v11[39], v11[103], v11[101]));
    faces.push(new Face(color11, v11[37], v11[45], v11[61], v11[53]));
    faces.push(new Face(color11, v11[37], v11[45], v11[109], v11[101]));
    faces.push(new Face(color11, v11[37], v11[53], v11[117], v11[101]));
    faces.push(new Face(color11, v11[38], v11[39], v11[47], v11[46]));
    faces.push(new Face(color11, v11[38], v11[39], v11[55], v11[54]));
    faces.push(new Face(color11, v11[38], v11[39], v11[103], v11[102]));
    faces.push(new Face(color11, v11[38], v11[46], v11[62], v11[54]));
    faces.push(new Face(color11, v11[38], v11[46], v11[110], v11[102]));
    faces.push(new Face(color11, v11[38], v11[54], v11[118], v11[102]));
    faces.push(new Face(color11, v11[39], v11[47], v11[63], v11[55]));
    faces.push(new Face(color11, v11[39], v11[47], v11[111], v11[103]));
    faces.push(new Face(color11, v11[39], v11[55], v11[119], v11[103]));
    faces.push(new Face(color11, v11[40], v11[41], v11[43], v11[42]));
    faces.push(new Face(color11, v11[40], v11[41], v11[45], v11[44]));
    faces.push(new Face(color11, v11[40], v11[41], v11[57], v11[56]));
    faces.push(new Face(color11, v11[40], v11[41], v11[105], v11[104]));
    faces.push(new Face(color11, v11[40], v11[42], v11[46], v11[44]));
    faces.push(new Face(color11, v11[40], v11[42], v11[58], v11[56]));
    faces.push(new Face(color11, v11[40], v11[42], v11[106], v11[104]));
    faces.push(new Face(color11, v11[40], v11[44], v11[60], v11[56]));
    faces.push(new Face(color11, v11[40], v11[44], v11[108], v11[104]));
    faces.push(new Face(color11, v11[40], v11[56], v11[120], v11[104]));
    faces.push(new Face(color11, v11[41], v11[43], v11[47], v11[45]));
    faces.push(new Face(color11, v11[41], v11[43], v11[59], v11[57]));
    faces.push(new Face(color11, v11[41], v11[43], v11[107], v11[105]));
    faces.push(new Face(color11, v11[41], v11[45], v11[61], v11[57]));
    faces.push(new Face(color11, v11[41], v11[45], v11[109], v11[105]));
    faces.push(new Face(color11, v11[41], v11[57], v11[121], v11[105]));
    faces.push(new Face(color11, v11[42], v11[43], v11[47], v11[46]));
    faces.push(new Face(color11, v11[42], v11[43], v11[59], v11[58]));
    faces.push(new Face(color11, v11[42], v11[43], v11[107], v11[106]));
    faces.push(new Face(color11, v11[42], v11[46], v11[62], v11[58]));
    faces.push(new Face(color11, v11[42], v11[46], v11[110], v11[106]));
    faces.push(new Face(color11, v11[42], v11[58], v11[122], v11[106]));
    faces.push(new Face(color11, v11[43], v11[47], v11[63], v11[59]));
    faces.push(new Face(color11, v11[43], v11[47], v11[111], v11[107]));
    faces.push(new Face(color11, v11[43], v11[59], v11[123], v11[107]));
    faces.push(new Face(color11, v11[44], v11[45], v11[47], v11[46]));
    faces.push(new Face(color11, v11[44], v11[45], v11[61], v11[60]));
    faces.push(new Face(color11, v11[44], v11[45], v11[109], v11[108]));
    faces.push(new Face(color11, v11[44], v11[46], v11[62], v11[60]));
    faces.push(new Face(color11, v11[44], v11[46], v11[110], v11[108]));
    faces.push(new Face(color11, v11[44], v11[60], v11[124], v11[108]));
    faces.push(new Face(color11, v11[45], v11[47], v11[63], v11[61]));
    faces.push(new Face(color11, v11[45], v11[47], v11[111], v11[109]));
    faces.push(new Face(color11, v11[45], v11[61], v11[125], v11[109]));
    faces.push(new Face(color11, v11[46], v11[47], v11[63], v11[62]));
    faces.push(new Face(color11, v11[46], v11[47], v11[111], v11[110]));
    faces.push(new Face(color11, v11[46], v11[62], v11[126], v11[110]));
    faces.push(new Face(color11, v11[47], v11[63], v11[127], v11[111]));
    faces.push(new Face(color11, v11[48], v11[49], v11[51], v11[50]));
    faces.push(new Face(color11, v11[48], v11[49], v11[53], v11[52]));
    faces.push(new Face(color11, v11[48], v11[49], v11[57], v11[56]));
    faces.push(new Face(color11, v11[48], v11[49], v11[113], v11[112]));
    faces.push(new Face(color11, v11[48], v11[50], v11[54], v11[52]));
    faces.push(new Face(color11, v11[48], v11[50], v11[58], v11[56]));
    faces.push(new Face(color11, v11[48], v11[50], v11[114], v11[112]));
    faces.push(new Face(color11, v11[48], v11[52], v11[60], v11[56]));
    faces.push(new Face(color11, v11[48], v11[52], v11[116], v11[112]));
    faces.push(new Face(color11, v11[48], v11[56], v11[120], v11[112]));
    faces.push(new Face(color11, v11[49], v11[51], v11[55], v11[53]));
    faces.push(new Face(color11, v11[49], v11[51], v11[59], v11[57]));
    faces.push(new Face(color11, v11[49], v11[51], v11[115], v11[113]));
    faces.push(new Face(color11, v11[49], v11[53], v11[61], v11[57]));
    faces.push(new Face(color11, v11[49], v11[53], v11[117], v11[113]));
    faces.push(new Face(color11, v11[49], v11[57], v11[121], v11[113]));
    faces.push(new Face(color11, v11[50], v11[51], v11[55], v11[54]));
    faces.push(new Face(color11, v11[50], v11[51], v11[59], v11[58]));
    faces.push(new Face(color11, v11[50], v11[51], v11[115], v11[114]));
    faces.push(new Face(color11, v11[50], v11[54], v11[62], v11[58]));
    faces.push(new Face(color11, v11[50], v11[54], v11[118], v11[114]));
    faces.push(new Face(color11, v11[50], v11[58], v11[122], v11[114]));
    faces.push(new Face(color11, v11[51], v11[55], v11[63], v11[59]));
    faces.push(new Face(color11, v11[51], v11[55], v11[119], v11[115]));
    faces.push(new Face(color11, v11[51], v11[59], v11[123], v11[115]));
    faces.push(new Face(color11, v11[52], v11[53], v11[55], v11[54]));
    faces.push(new Face(color11, v11[52], v11[53], v11[61], v11[60]));
    faces.push(new Face(color11, v11[52], v11[53], v11[117], v11[116]));
    faces.push(new Face(color11, v11[52], v11[54], v11[62], v11[60]));
    faces.push(new Face(color11, v11[52], v11[54], v11[118], v11[116]));
    faces.push(new Face(color11, v11[52], v11[60], v11[124], v11[116]));
    faces.push(new Face(color11, v11[53], v11[55], v11[63], v11[61]));
    faces.push(new Face(color11, v11[53], v11[55], v11[119], v11[117]));
    faces.push(new Face(color11, v11[53], v11[61], v11[125], v11[117]));
    faces.push(new Face(color11, v11[54], v11[55], v11[63], v11[62]));
    faces.push(new Face(color11, v11[54], v11[55], v11[119], v11[118]));
    faces.push(new Face(color11, v11[54], v11[62], v11[126], v11[118]));
    faces.push(new Face(color11, v11[55], v11[63], v11[127], v11[119]));
    faces.push(new Face(color11, v11[56], v11[57], v11[59], v11[58]));
    faces.push(new Face(color11, v11[56], v11[57], v11[61], v11[60]));
    faces.push(new Face(color11, v11[56], v11[57], v11[121], v11[120]));
    faces.push(new Face(color11, v11[56], v11[58], v11[62], v11[60]));
    faces.push(new Face(color11, v11[56], v11[58], v11[122], v11[120]));
    faces.push(new Face(color11, v11[56], v11[60], v11[124], v11[120]));
    faces.push(new Face(color11, v11[57], v11[59], v11[63], v11[61]));
    faces.push(new Face(color11, v11[57], v11[59], v11[123], v11[121]));
    faces.push(new Face(color11, v11[57], v11[61], v11[125], v11[121]));
    faces.push(new Face(color11, v11[58], v11[59], v11[63], v11[62]));
    faces.push(new Face(color11, v11[58], v11[59], v11[123], v11[122]));
    faces.push(new Face(color11, v11[58], v11[62], v11[126], v11[122]));
    faces.push(new Face(color11, v11[59], v11[63], v11[127], v11[123]));
    faces.push(new Face(color11, v11[60], v11[61], v11[63], v11[62]));
    faces.push(new Face(color11, v11[60], v11[61], v11[125], v11[124]));
    faces.push(new Face(color11, v11[60], v11[62], v11[126], v11[124]));
    faces.push(new Face(color11, v11[61], v11[63], v11[127], v11[125]));
    faces.push(new Face(color11, v11[62], v11[63], v11[127], v11[126]));
    faces.push(new Face(color11, v11[64], v11[65], v11[67], v11[66]));
    faces.push(new Face(color11, v11[64], v11[65], v11[69], v11[68]));
    faces.push(new Face(color11, v11[64], v11[65], v11[73], v11[72]));
    faces.push(new Face(color11, v11[64], v11[65], v11[81], v11[80]));
    faces.push(new Face(color11, v11[64], v11[65], v11[97], v11[96]));
    faces.push(new Face(color11, v11[64], v11[66], v11[70], v11[68]));
    faces.push(new Face(color11, v11[64], v11[66], v11[74], v11[72]));
    faces.push(new Face(color11, v11[64], v11[66], v11[82], v11[80]));
    faces.push(new Face(color11, v11[64], v11[66], v11[98], v11[96]));
    faces.push(new Face(color11, v11[64], v11[68], v11[76], v11[72]));
    faces.push(new Face(color11, v11[64], v11[68], v11[84], v11[80]));
    faces.push(new Face(color11, v11[64], v11[68], v11[100], v11[96]));
    faces.push(new Face(color11, v11[64], v11[72], v11[88], v11[80]));
    faces.push(new Face(color11, v11[64], v11[72], v11[104], v11[96]));
    faces.push(new Face(color11, v11[64], v11[80], v11[112], v11[96]));
    faces.push(new Face(color11, v11[65], v11[67], v11[71], v11[69]));
    faces.push(new Face(color11, v11[65], v11[67], v11[75], v11[73]));
    faces.push(new Face(color11, v11[65], v11[67], v11[83], v11[81]));
    faces.push(new Face(color11, v11[65], v11[67], v11[99], v11[97]));
    faces.push(new Face(color11, v11[65], v11[69], v11[77], v11[73]));
    faces.push(new Face(color11, v11[65], v11[69], v11[85], v11[81]));
    faces.push(new Face(color11, v11[65], v11[69], v11[101], v11[97]));
    faces.push(new Face(color11, v11[65], v11[73], v11[89], v11[81]));
    faces.push(new Face(color11, v11[65], v11[73], v11[105], v11[97]));
    faces.push(new Face(color11, v11[65], v11[81], v11[113], v11[97]));
    faces.push(new Face(color11, v11[66], v11[67], v11[71], v11[70]));
    faces.push(new Face(color11, v11[66], v11[67], v11[75], v11[74]));
    faces.push(new Face(color11, v11[66], v11[67], v11[83], v11[82]));
    faces.push(new Face(color11, v11[66], v11[67], v11[99], v11[98]));
    faces.push(new Face(color11, v11[66], v11[70], v11[78], v11[74]));
    faces.push(new Face(color11, v11[66], v11[70], v11[86], v11[82]));
    faces.push(new Face(color11, v11[66], v11[70], v11[102], v11[98]));
    faces.push(new Face(color11, v11[66], v11[74], v11[90], v11[82]));
    faces.push(new Face(color11, v11[66], v11[74], v11[106], v11[98]));
    faces.push(new Face(color11, v11[66], v11[82], v11[114], v11[98]));
    faces.push(new Face(color11, v11[67], v11[71], v11[79], v11[75]));
    faces.push(new Face(color11, v11[67], v11[71], v11[87], v11[83]));
    faces.push(new Face(color11, v11[67], v11[71], v11[103], v11[99]));
    faces.push(new Face(color11, v11[67], v11[75], v11[91], v11[83]));
    faces.push(new Face(color11, v11[67], v11[75], v11[107], v11[99]));
    faces.push(new Face(color11, v11[67], v11[83], v11[115], v11[99]));
    faces.push(new Face(color11, v11[68], v11[69], v11[71], v11[70]));
    faces.push(new Face(color11, v11[68], v11[69], v11[77], v11[76]));
    faces.push(new Face(color11, v11[68], v11[69], v11[85], v11[84]));
    faces.push(new Face(color11, v11[68], v11[69], v11[101], v11[100]));
    faces.push(new Face(color11, v11[68], v11[70], v11[78], v11[76]));
    faces.push(new Face(color11, v11[68], v11[70], v11[86], v11[84]));
    faces.push(new Face(color11, v11[68], v11[70], v11[102], v11[100]));
    faces.push(new Face(color11, v11[68], v11[76], v11[92], v11[84]));
    faces.push(new Face(color11, v11[68], v11[76], v11[108], v11[100]));
    faces.push(new Face(color11, v11[68], v11[84], v11[116], v11[100]));
    faces.push(new Face(color11, v11[69], v11[71], v11[79], v11[77]));
    faces.push(new Face(color11, v11[69], v11[71], v11[87], v11[85]));
    faces.push(new Face(color11, v11[69], v11[71], v11[103], v11[101]));
    faces.push(new Face(color11, v11[69], v11[77], v11[93], v11[85]));
    faces.push(new Face(color11, v11[69], v11[77], v11[109], v11[101]));
    faces.push(new Face(color11, v11[69], v11[85], v11[117], v11[101]));
    faces.push(new Face(color11, v11[70], v11[71], v11[79], v11[78]));
    faces.push(new Face(color11, v11[70], v11[71], v11[87], v11[86]));
    faces.push(new Face(color11, v11[70], v11[71], v11[103], v11[102]));
    faces.push(new Face(color11, v11[70], v11[78], v11[94], v11[86]));
    faces.push(new Face(color11, v11[70], v11[78], v11[110], v11[102]));
    faces.push(new Face(color11, v11[70], v11[86], v11[118], v11[102]));
    faces.push(new Face(color11, v11[71], v11[79], v11[95], v11[87]));
    faces.push(new Face(color11, v11[71], v11[79], v11[111], v11[103]));
    faces.push(new Face(color11, v11[71], v11[87], v11[119], v11[103]));
    faces.push(new Face(color11, v11[72], v11[73], v11[75], v11[74]));
    faces.push(new Face(color11, v11[72], v11[73], v11[77], v11[76]));
    faces.push(new Face(color11, v11[72], v11[73], v11[89], v11[88]));
    faces.push(new Face(color11, v11[72], v11[73], v11[105], v11[104]));
    faces.push(new Face(color11, v11[72], v11[74], v11[78], v11[76]));
    faces.push(new Face(color11, v11[72], v11[74], v11[90], v11[88]));
    faces.push(new Face(color11, v11[72], v11[74], v11[106], v11[104]));
    faces.push(new Face(color11, v11[72], v11[76], v11[92], v11[88]));
    faces.push(new Face(color11, v11[72], v11[76], v11[108], v11[104]));
    faces.push(new Face(color11, v11[72], v11[88], v11[120], v11[104]));
    faces.push(new Face(color11, v11[73], v11[75], v11[79], v11[77]));
    faces.push(new Face(color11, v11[73], v11[75], v11[91], v11[89]));
    faces.push(new Face(color11, v11[73], v11[75], v11[107], v11[105]));
    faces.push(new Face(color11, v11[73], v11[77], v11[93], v11[89]));
    faces.push(new Face(color11, v11[73], v11[77], v11[109], v11[105]));
    faces.push(new Face(color11, v11[73], v11[89], v11[121], v11[105]));
    faces.push(new Face(color11, v11[74], v11[75], v11[79], v11[78]));
    faces.push(new Face(color11, v11[74], v11[75], v11[91], v11[90]));
    faces.push(new Face(color11, v11[74], v11[75], v11[107], v11[106]));
    faces.push(new Face(color11, v11[74], v11[78], v11[94], v11[90]));
    faces.push(new Face(color11, v11[74], v11[78], v11[110], v11[106]));
    faces.push(new Face(color11, v11[74], v11[90], v11[122], v11[106]));
    faces.push(new Face(color11, v11[75], v11[79], v11[95], v11[91]));
    faces.push(new Face(color11, v11[75], v11[79], v11[111], v11[107]));
    faces.push(new Face(color11, v11[75], v11[91], v11[123], v11[107]));
    faces.push(new Face(color11, v11[76], v11[77], v11[79], v11[78]));
    faces.push(new Face(color11, v11[76], v11[77], v11[93], v11[92]));
    faces.push(new Face(color11, v11[76], v11[77], v11[109], v11[108]));
    faces.push(new Face(color11, v11[76], v11[78], v11[94], v11[92]));
    faces.push(new Face(color11, v11[76], v11[78], v11[110], v11[108]));
    faces.push(new Face(color11, v11[76], v11[92], v11[124], v11[108]));
    faces.push(new Face(color11, v11[77], v11[79], v11[95], v11[93]));
    faces.push(new Face(color11, v11[77], v11[79], v11[111], v11[109]));
    faces.push(new Face(color11, v11[77], v11[93], v11[125], v11[109]));
    faces.push(new Face(color11, v11[78], v11[79], v11[95], v11[94]));
    faces.push(new Face(color11, v11[78], v11[79], v11[111], v11[110]));
    faces.push(new Face(color11, v11[78], v11[94], v11[126], v11[110]));
    faces.push(new Face(color11, v11[79], v11[95], v11[127], v11[111]));
    faces.push(new Face(color11, v11[80], v11[81], v11[83], v11[82]));
    faces.push(new Face(color11, v11[80], v11[81], v11[85], v11[84]));
    faces.push(new Face(color11, v11[80], v11[81], v11[89], v11[88]));
    faces.push(new Face(color11, v11[80], v11[81], v11[113], v11[112]));
    faces.push(new Face(color11, v11[80], v11[82], v11[86], v11[84]));
    faces.push(new Face(color11, v11[80], v11[82], v11[90], v11[88]));
    faces.push(new Face(color11, v11[80], v11[82], v11[114], v11[112]));
    faces.push(new Face(color11, v11[80], v11[84], v11[92], v11[88]));
    faces.push(new Face(color11, v11[80], v11[84], v11[116], v11[112]));
    faces.push(new Face(color11, v11[80], v11[88], v11[120], v11[112]));
    faces.push(new Face(color11, v11[81], v11[83], v11[87], v11[85]));
    faces.push(new Face(color11, v11[81], v11[83], v11[91], v11[89]));
    faces.push(new Face(color11, v11[81], v11[83], v11[115], v11[113]));
    faces.push(new Face(color11, v11[81], v11[85], v11[93], v11[89]));
    faces.push(new Face(color11, v11[81], v11[85], v11[117], v11[113]));
    faces.push(new Face(color11, v11[81], v11[89], v11[121], v11[113]));
    faces.push(new Face(color11, v11[82], v11[83], v11[87], v11[86]));
    faces.push(new Face(color11, v11[82], v11[83], v11[91], v11[90]));
    faces.push(new Face(color11, v11[82], v11[83], v11[115], v11[114]));
    faces.push(new Face(color11, v11[82], v11[86], v11[94], v11[90]));
    faces.push(new Face(color11, v11[82], v11[86], v11[118], v11[114]));
    faces.push(new Face(color11, v11[82], v11[90], v11[122], v11[114]));
    faces.push(new Face(color11, v11[83], v11[87], v11[95], v11[91]));
    faces.push(new Face(color11, v11[83], v11[87], v11[119], v11[115]));
    faces.push(new Face(color11, v11[83], v11[91], v11[123], v11[115]));
    faces.push(new Face(color11, v11[84], v11[85], v11[87], v11[86]));
    faces.push(new Face(color11, v11[84], v11[85], v11[93], v11[92]));
    faces.push(new Face(color11, v11[84], v11[85], v11[117], v11[116]));
    faces.push(new Face(color11, v11[84], v11[86], v11[94], v11[92]));
    faces.push(new Face(color11, v11[84], v11[86], v11[118], v11[116]));
    faces.push(new Face(color11, v11[84], v11[92], v11[124], v11[116]));
    faces.push(new Face(color11, v11[85], v11[87], v11[95], v11[93]));
    faces.push(new Face(color11, v11[85], v11[87], v11[119], v11[117]));
    faces.push(new Face(color11, v11[85], v11[93], v11[125], v11[117]));
    faces.push(new Face(color11, v11[86], v11[87], v11[95], v11[94]));
    faces.push(new Face(color11, v11[86], v11[87], v11[119], v11[118]));
    faces.push(new Face(color11, v11[86], v11[94], v11[126], v11[118]));
    faces.push(new Face(color11, v11[87], v11[95], v11[127], v11[119]));
    faces.push(new Face(color11, v11[88], v11[89], v11[91], v11[90]));
    faces.push(new Face(color11, v11[88], v11[89], v11[93], v11[92]));
    faces.push(new Face(color11, v11[88], v11[89], v11[121], v11[120]));
    faces.push(new Face(color11, v11[88], v11[90], v11[94], v11[92]));
    faces.push(new Face(color11, v11[88], v11[90], v11[122], v11[120]));
    faces.push(new Face(color11, v11[88], v11[92], v11[124], v11[120]));
    faces.push(new Face(color11, v11[89], v11[91], v11[95], v11[93]));
    faces.push(new Face(color11, v11[89], v11[91], v11[123], v11[121]));
    faces.push(new Face(color11, v11[89], v11[93], v11[125], v11[121]));
    faces.push(new Face(color11, v11[90], v11[91], v11[95], v11[94]));
    faces.push(new Face(color11, v11[90], v11[91], v11[123], v11[122]));
    faces.push(new Face(color11, v11[90], v11[94], v11[126], v11[122]));
    faces.push(new Face(color11, v11[91], v11[95], v11[127], v11[123]));
    faces.push(new Face(color11, v11[92], v11[93], v11[95], v11[94]));
    faces.push(new Face(color11, v11[92], v11[93], v11[125], v11[124]));
    faces.push(new Face(color11, v11[92], v11[94], v11[126], v11[124]));
    faces.push(new Face(color11, v11[93], v11[95], v11[127], v11[125]));
    faces.push(new Face(color11, v11[94], v11[95], v11[127], v11[126]));
    faces.push(new Face(color11, v11[96], v11[97], v11[99], v11[98]));
    faces.push(new Face(color11, v11[96], v11[97], v11[101], v11[100]));
    faces.push(new Face(color11, v11[96], v11[97], v11[105], v11[104]));
    faces.push(new Face(color11, v11[96], v11[97], v11[113], v11[112]));
    faces.push(new Face(color11, v11[96], v11[98], v11[102], v11[100]));
    faces.push(new Face(color11, v11[96], v11[98], v11[106], v11[104]));
    faces.push(new Face(color11, v11[96], v11[98], v11[114], v11[112]));
    faces.push(new Face(color11, v11[96], v11[100], v11[108], v11[104]));
    faces.push(new Face(color11, v11[96], v11[100], v11[116], v11[112]));
    faces.push(new Face(color11, v11[96], v11[104], v11[120], v11[112]));
    faces.push(new Face(color11, v11[97], v11[99], v11[103], v11[101]));
    faces.push(new Face(color11, v11[97], v11[99], v11[107], v11[105]));
    faces.push(new Face(color11, v11[97], v11[99], v11[115], v11[113]));
    faces.push(new Face(color11, v11[97], v11[101], v11[109], v11[105]));
    faces.push(new Face(color11, v11[97], v11[101], v11[117], v11[113]));
    faces.push(new Face(color11, v11[97], v11[105], v11[121], v11[113]));
    faces.push(new Face(color11, v11[98], v11[99], v11[103], v11[102]));
    faces.push(new Face(color11, v11[98], v11[99], v11[107], v11[106]));
    faces.push(new Face(color11, v11[98], v11[99], v11[115], v11[114]));
    faces.push(new Face(color11, v11[98], v11[102], v11[110], v11[106]));
    faces.push(new Face(color11, v11[98], v11[102], v11[118], v11[114]));
    faces.push(new Face(color11, v11[98], v11[106], v11[122], v11[114]));
    faces.push(new Face(color11, v11[99], v11[103], v11[111], v11[107]));
    faces.push(new Face(color11, v11[99], v11[103], v11[119], v11[115]));
    faces.push(new Face(color11, v11[99], v11[107], v11[123], v11[115]));
    faces.push(new Face(color11, v11[100], v11[101], v11[103], v11[102]));
    faces.push(new Face(color11, v11[100], v11[101], v11[109], v11[108]));
    faces.push(new Face(color11, v11[100], v11[101], v11[117], v11[116]));
    faces.push(new Face(color11, v11[100], v11[102], v11[110], v11[108]));
    faces.push(new Face(color11, v11[100], v11[102], v11[118], v11[116]));
    faces.push(new Face(color11, v11[100], v11[108], v11[124], v11[116]));
    faces.push(new Face(color11, v11[101], v11[103], v11[111], v11[109]));
    faces.push(new Face(color11, v11[101], v11[103], v11[119], v11[117]));
    faces.push(new Face(color11, v11[101], v11[109], v11[125], v11[117]));
    faces.push(new Face(color11, v11[102], v11[103], v11[111], v11[110]));
    faces.push(new Face(color11, v11[102], v11[103], v11[119], v11[118]));
    faces.push(new Face(color11, v11[102], v11[110], v11[126], v11[118]));
    faces.push(new Face(color11, v11[103], v11[111], v11[127], v11[119]));
    faces.push(new Face(color11, v11[104], v11[105], v11[107], v11[106]));
    faces.push(new Face(color11, v11[104], v11[105], v11[109], v11[108]));
    faces.push(new Face(color11, v11[104], v11[105], v11[121], v11[120]));
    faces.push(new Face(color11, v11[104], v11[106], v11[110], v11[108]));
    faces.push(new Face(color11, v11[104], v11[106], v11[122], v11[120]));
    faces.push(new Face(color11, v11[104], v11[108], v11[124], v11[120]));
    faces.push(new Face(color11, v11[105], v11[107], v11[111], v11[109]));
    faces.push(new Face(color11, v11[105], v11[107], v11[123], v11[121]));
    faces.push(new Face(color11, v11[105], v11[109], v11[125], v11[121]));
    faces.push(new Face(color11, v11[106], v11[107], v11[111], v11[110]));
    faces.push(new Face(color11, v11[106], v11[107], v11[123], v11[122]));
    faces.push(new Face(color11, v11[106], v11[110], v11[126], v11[122]));
    faces.push(new Face(color11, v11[107], v11[111], v11[127], v11[123]));
    faces.push(new Face(color11, v11[108], v11[109], v11[111], v11[110]));
    faces.push(new Face(color11, v11[108], v11[109], v11[125], v11[124]));
    faces.push(new Face(color11, v11[108], v11[110], v11[126], v11[124]));
    faces.push(new Face(color11, v11[109], v11[111], v11[127], v11[125]));
    faces.push(new Face(color11, v11[110], v11[111], v11[127], v11[126]));
    faces.push(new Face(color11, v11[112], v11[113], v11[115], v11[114]));
    faces.push(new Face(color11, v11[112], v11[113], v11[117], v11[116]));
    faces.push(new Face(color11, v11[112], v11[113], v11[121], v11[120]));
    faces.push(new Face(color11, v11[112], v11[114], v11[118], v11[116]));
    faces.push(new Face(color11, v11[112], v11[114], v11[122], v11[120]));
    faces.push(new Face(color11, v11[112], v11[116], v11[124], v11[120]));
    faces.push(new Face(color11, v11[113], v11[115], v11[119], v11[117]));
    faces.push(new Face(color11, v11[113], v11[115], v11[123], v11[121]));
    faces.push(new Face(color11, v11[113], v11[117], v11[125], v11[121]));
    faces.push(new Face(color11, v11[114], v11[115], v11[119], v11[118]));
    faces.push(new Face(color11, v11[114], v11[115], v11[123], v11[122]));
    faces.push(new Face(color11, v11[114], v11[118], v11[126], v11[122]));
    faces.push(new Face(color11, v11[115], v11[119], v11[127], v11[123]));
    faces.push(new Face(color11, v11[116], v11[117], v11[119], v11[118]));
    faces.push(new Face(color11, v11[116], v11[117], v11[125], v11[124]));
    faces.push(new Face(color11, v11[116], v11[118], v11[126], v11[124]));
    faces.push(new Face(color11, v11[117], v11[119], v11[127], v11[125]));
    faces.push(new Face(color11, v11[118], v11[119], v11[127], v11[126]));
    faces.push(new Face(color11, v11[120], v11[121], v11[123], v11[122]));
    faces.push(new Face(color11, v11[120], v11[121], v11[125], v11[124]));
    faces.push(new Face(color11, v11[120], v11[122], v11[126], v11[124]));
    faces.push(new Face(color11, v11[121], v11[123], v11[127], v11[125]));
    faces.push(new Face(color11, v11[122], v11[123], v11[127], v11[126]));
    faces.push(new Face(color11, v11[124], v11[125], v11[127], v11[126]));
    for (let i = 0; i < v11.length; i++) {
        v11[i].rotate(r);
        v11[i].project();
    }

    v12[0] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v12[1] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v12[2] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v12[3] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v12[4] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v12[5] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v12[6] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2);
    v12[7] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2+Math.cos(theta)*w);
    v12[8] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v12[9] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v12[10] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2);
    v12[11] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v12[12] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2);
    v12[13] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v12[14] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, w/2, w/2, -w/2);
    v12[15] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2+Math.cos(theta)*w);
    v12[16] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v12[17] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v12[18] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v12[19] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v12[20] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v12[21] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v12[22] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, w/2, w/2, -w/2);
    v12[23] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2+Math.cos(theta)*w);
    v12[24] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v12[25] = new Vertex(-w/2, -w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v12[26] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, -w/2, w/2, -w/2);
    v12[27] = new Vertex(-w/2, -w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v12[28] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, w/2, -w/2, -w/2);
    v12[29] = new Vertex(-w/2, -w/2, w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v12[30] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, w/2, w/2, -w/2);
    v12[31] = new Vertex(-w/2, -w/2, w/2, w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2+Math.cos(theta)*w);
    v12[32] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v12[33] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v12[34] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v12[35] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v12[36] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v12[37] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v12[38] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2);
    v12[39] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2+Math.cos(theta)*w);
    v12[40] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v12[41] = new Vertex(-w/2, w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v12[42] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2);
    v12[43] = new Vertex(-w/2, w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v12[44] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2);
    v12[45] = new Vertex(-w/2, w/2, -w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v12[46] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, w/2, w/2, -w/2);
    v12[47] = new Vertex(-w/2, w/2, -w/2, w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2+Math.cos(theta)*w);
    v12[48] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v12[49] = new Vertex(-w/2, w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v12[50] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v12[51] = new Vertex(-w/2, w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v12[52] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v12[53] = new Vertex(-w/2, w/2, w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v12[54] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, w/2, w/2, -w/2);
    v12[55] = new Vertex(-w/2, w/2, w/2, -w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2+Math.cos(theta)*w);
    v12[56] = new Vertex(-w/2, w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v12[57] = new Vertex(-w/2, w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v12[58] = new Vertex(-w/2, w/2, w/2, w/2, w/2, -w/2, w/2, -w/2);
    v12[59] = new Vertex(-w/2, w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v12[60] = new Vertex(-w/2, w/2, w/2, w/2, w/2, w/2, -w/2, -w/2);
    v12[61] = new Vertex(-w/2, w/2, w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v12[62] = new Vertex(-w/2, w/2, w/2, w/2, w/2, w/2, w/2, -w/2);
    v12[63] = new Vertex(-w/2, w/2, w/2, w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2+Math.cos(theta)*w);
    v12[64] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v12[65] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v12[66] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v12[67] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v12[68] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v12[69] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v12[70] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2);
    v12[71] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2+Math.cos(theta)*w);
    v12[72] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v12[73] = new Vertex(w/2, -w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v12[74] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2);
    v12[75] = new Vertex(w/2, -w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v12[76] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2);
    v12[77] = new Vertex(w/2, -w/2, -w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v12[78] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, w/2, w/2, -w/2);
    v12[79] = new Vertex(w/2, -w/2, -w/2, w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2+Math.cos(theta)*w);
    v12[80] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v12[81] = new Vertex(w/2, -w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v12[82] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v12[83] = new Vertex(w/2, -w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v12[84] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v12[85] = new Vertex(w/2, -w/2, w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v12[86] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, w/2, w/2, -w/2);
    v12[87] = new Vertex(w/2, -w/2, w/2, -w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2+Math.cos(theta)*w);
    v12[88] = new Vertex(w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v12[89] = new Vertex(w/2, -w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v12[90] = new Vertex(w/2, -w/2, w/2, w/2, w/2, -w/2, w/2, -w/2);
    v12[91] = new Vertex(w/2, -w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v12[92] = new Vertex(w/2, -w/2, w/2, w/2, w/2, w/2, -w/2, -w/2);
    v12[93] = new Vertex(w/2, -w/2, w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v12[94] = new Vertex(w/2, -w/2, w/2, w/2, w/2, w/2, w/2, -w/2);
    v12[95] = new Vertex(w/2, -w/2, w/2, w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2+Math.cos(theta)*w);
    v12[96] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v12[97] = new Vertex(w/2, w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v12[98] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v12[99] = new Vertex(w/2, w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v12[100] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v12[101] = new Vertex(w/2, w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v12[102] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2);
    v12[103] = new Vertex(w/2, w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2+Math.cos(theta)*w);
    v12[104] = new Vertex(w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v12[105] = new Vertex(w/2, w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v12[106] = new Vertex(w/2, w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2);
    v12[107] = new Vertex(w/2, w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v12[108] = new Vertex(w/2, w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2);
    v12[109] = new Vertex(w/2, w/2, -w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v12[110] = new Vertex(w/2, w/2, -w/2, w/2, w/2, w/2, w/2, -w/2);
    v12[111] = new Vertex(w/2, w/2, -w/2, w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2+Math.cos(theta)*w);
    v12[112] = new Vertex(w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v12[113] = new Vertex(w/2, w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v12[114] = new Vertex(w/2, w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v12[115] = new Vertex(w/2, w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v12[116] = new Vertex(w/2, w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v12[117] = new Vertex(w/2, w/2, w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v12[118] = new Vertex(w/2, w/2, w/2, -w/2, w/2, w/2, w/2, -w/2);
    v12[119] = new Vertex(w/2, w/2, w/2, -w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2+Math.cos(theta)*w);
    v12[120] = new Vertex(w/2, w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v12[121] = new Vertex(w/2, w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v12[122] = new Vertex(w/2, w/2, w/2, w/2, w/2, -w/2, w/2, -w/2);
    v12[123] = new Vertex(w/2, w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v12[124] = new Vertex(w/2, w/2, w/2, w/2, w/2, w/2, -w/2, -w/2);
    v12[125] = new Vertex(w/2, w/2, w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v12[126] = new Vertex(w/2, w/2, w/2, w/2, w/2, w/2, w/2, -w/2);
    v12[127] = new Vertex(w/2, w/2, w/2, w/2, w/2+Math.sin(theta)*w, w/2, w/2, -w/2+Math.cos(theta)*w);
    faces.push(new Face(color12, v12[0], v12[1], v12[3], v12[2]));
    faces.push(new Face(color12, v12[0], v12[1], v12[5], v12[4]));
    faces.push(new Face(color12, v12[0], v12[1], v12[9], v12[8]));
    faces.push(new Face(color12, v12[0], v12[1], v12[17], v12[16]));
    faces.push(new Face(color12, v12[0], v12[1], v12[33], v12[32]));
    faces.push(new Face(color12, v12[0], v12[1], v12[65], v12[64]));
    faces.push(new Face(color12, v12[0], v12[2], v12[6], v12[4]));
    faces.push(new Face(color12, v12[0], v12[2], v12[10], v12[8]));
    faces.push(new Face(color12, v12[0], v12[2], v12[18], v12[16]));
    faces.push(new Face(color12, v12[0], v12[2], v12[34], v12[32]));
    faces.push(new Face(color12, v12[0], v12[2], v12[66], v12[64]));
    faces.push(new Face(color12, v12[0], v12[4], v12[12], v12[8]));
    faces.push(new Face(color12, v12[0], v12[4], v12[20], v12[16]));
    faces.push(new Face(color12, v12[0], v12[4], v12[36], v12[32]));
    faces.push(new Face(color12, v12[0], v12[4], v12[68], v12[64]));
    faces.push(new Face(color12, v12[0], v12[8], v12[24], v12[16]));
    faces.push(new Face(color12, v12[0], v12[8], v12[40], v12[32]));
    faces.push(new Face(color12, v12[0], v12[8], v12[72], v12[64]));
    faces.push(new Face(color12, v12[0], v12[16], v12[48], v12[32]));
    faces.push(new Face(color12, v12[0], v12[16], v12[80], v12[64]));
    faces.push(new Face(color12, v12[0], v12[32], v12[96], v12[64]));
    faces.push(new Face(color12, v12[1], v12[3], v12[7], v12[5]));
    faces.push(new Face(color12, v12[1], v12[3], v12[11], v12[9]));
    faces.push(new Face(color12, v12[1], v12[3], v12[19], v12[17]));
    faces.push(new Face(color12, v12[1], v12[3], v12[35], v12[33]));
    faces.push(new Face(color12, v12[1], v12[3], v12[67], v12[65]));
    faces.push(new Face(color12, v12[1], v12[5], v12[13], v12[9]));
    faces.push(new Face(color12, v12[1], v12[5], v12[21], v12[17]));
    faces.push(new Face(color12, v12[1], v12[5], v12[37], v12[33]));
    faces.push(new Face(color12, v12[1], v12[5], v12[69], v12[65]));
    faces.push(new Face(color12, v12[1], v12[9], v12[25], v12[17]));
    faces.push(new Face(color12, v12[1], v12[9], v12[41], v12[33]));
    faces.push(new Face(color12, v12[1], v12[9], v12[73], v12[65]));
    faces.push(new Face(color12, v12[1], v12[17], v12[49], v12[33]));
    faces.push(new Face(color12, v12[1], v12[17], v12[81], v12[65]));
    faces.push(new Face(color12, v12[1], v12[33], v12[97], v12[65]));
    faces.push(new Face(color12, v12[2], v12[3], v12[7], v12[6]));
    faces.push(new Face(color12, v12[2], v12[3], v12[11], v12[10]));
    faces.push(new Face(color12, v12[2], v12[3], v12[19], v12[18]));
    faces.push(new Face(color12, v12[2], v12[3], v12[35], v12[34]));
    faces.push(new Face(color12, v12[2], v12[3], v12[67], v12[66]));
    faces.push(new Face(color12, v12[2], v12[6], v12[14], v12[10]));
    faces.push(new Face(color12, v12[2], v12[6], v12[22], v12[18]));
    faces.push(new Face(color12, v12[2], v12[6], v12[38], v12[34]));
    faces.push(new Face(color12, v12[2], v12[6], v12[70], v12[66]));
    faces.push(new Face(color12, v12[2], v12[10], v12[26], v12[18]));
    faces.push(new Face(color12, v12[2], v12[10], v12[42], v12[34]));
    faces.push(new Face(color12, v12[2], v12[10], v12[74], v12[66]));
    faces.push(new Face(color12, v12[2], v12[18], v12[50], v12[34]));
    faces.push(new Face(color12, v12[2], v12[18], v12[82], v12[66]));
    faces.push(new Face(color12, v12[2], v12[34], v12[98], v12[66]));
    faces.push(new Face(color12, v12[3], v12[7], v12[15], v12[11]));
    faces.push(new Face(color12, v12[3], v12[7], v12[23], v12[19]));
    faces.push(new Face(color12, v12[3], v12[7], v12[39], v12[35]));
    faces.push(new Face(color12, v12[3], v12[7], v12[71], v12[67]));
    faces.push(new Face(color12, v12[3], v12[11], v12[27], v12[19]));
    faces.push(new Face(color12, v12[3], v12[11], v12[43], v12[35]));
    faces.push(new Face(color12, v12[3], v12[11], v12[75], v12[67]));
    faces.push(new Face(color12, v12[3], v12[19], v12[51], v12[35]));
    faces.push(new Face(color12, v12[3], v12[19], v12[83], v12[67]));
    faces.push(new Face(color12, v12[3], v12[35], v12[99], v12[67]));
    faces.push(new Face(color12, v12[4], v12[5], v12[7], v12[6]));
    faces.push(new Face(color12, v12[4], v12[5], v12[13], v12[12]));
    faces.push(new Face(color12, v12[4], v12[5], v12[21], v12[20]));
    faces.push(new Face(color12, v12[4], v12[5], v12[37], v12[36]));
    faces.push(new Face(color12, v12[4], v12[5], v12[69], v12[68]));
    faces.push(new Face(color12, v12[4], v12[6], v12[14], v12[12]));
    faces.push(new Face(color12, v12[4], v12[6], v12[22], v12[20]));
    faces.push(new Face(color12, v12[4], v12[6], v12[38], v12[36]));
    faces.push(new Face(color12, v12[4], v12[6], v12[70], v12[68]));
    faces.push(new Face(color12, v12[4], v12[12], v12[28], v12[20]));
    faces.push(new Face(color12, v12[4], v12[12], v12[44], v12[36]));
    faces.push(new Face(color12, v12[4], v12[12], v12[76], v12[68]));
    faces.push(new Face(color12, v12[4], v12[20], v12[52], v12[36]));
    faces.push(new Face(color12, v12[4], v12[20], v12[84], v12[68]));
    faces.push(new Face(color12, v12[4], v12[36], v12[100], v12[68]));
    faces.push(new Face(color12, v12[5], v12[7], v12[15], v12[13]));
    faces.push(new Face(color12, v12[5], v12[7], v12[23], v12[21]));
    faces.push(new Face(color12, v12[5], v12[7], v12[39], v12[37]));
    faces.push(new Face(color12, v12[5], v12[7], v12[71], v12[69]));
    faces.push(new Face(color12, v12[5], v12[13], v12[29], v12[21]));
    faces.push(new Face(color12, v12[5], v12[13], v12[45], v12[37]));
    faces.push(new Face(color12, v12[5], v12[13], v12[77], v12[69]));
    faces.push(new Face(color12, v12[5], v12[21], v12[53], v12[37]));
    faces.push(new Face(color12, v12[5], v12[21], v12[85], v12[69]));
    faces.push(new Face(color12, v12[5], v12[37], v12[101], v12[69]));
    faces.push(new Face(color12, v12[6], v12[7], v12[15], v12[14]));
    faces.push(new Face(color12, v12[6], v12[7], v12[23], v12[22]));
    faces.push(new Face(color12, v12[6], v12[7], v12[39], v12[38]));
    faces.push(new Face(color12, v12[6], v12[7], v12[71], v12[70]));
    faces.push(new Face(color12, v12[6], v12[14], v12[30], v12[22]));
    faces.push(new Face(color12, v12[6], v12[14], v12[46], v12[38]));
    faces.push(new Face(color12, v12[6], v12[14], v12[78], v12[70]));
    faces.push(new Face(color12, v12[6], v12[22], v12[54], v12[38]));
    faces.push(new Face(color12, v12[6], v12[22], v12[86], v12[70]));
    faces.push(new Face(color12, v12[6], v12[38], v12[102], v12[70]));
    faces.push(new Face(color12, v12[7], v12[15], v12[31], v12[23]));
    faces.push(new Face(color12, v12[7], v12[15], v12[47], v12[39]));
    faces.push(new Face(color12, v12[7], v12[15], v12[79], v12[71]));
    faces.push(new Face(color12, v12[7], v12[23], v12[55], v12[39]));
    faces.push(new Face(color12, v12[7], v12[23], v12[87], v12[71]));
    faces.push(new Face(color12, v12[7], v12[39], v12[103], v12[71]));
    faces.push(new Face(color12, v12[8], v12[9], v12[11], v12[10]));
    faces.push(new Face(color12, v12[8], v12[9], v12[13], v12[12]));
    faces.push(new Face(color12, v12[8], v12[9], v12[25], v12[24]));
    faces.push(new Face(color12, v12[8], v12[9], v12[41], v12[40]));
    faces.push(new Face(color12, v12[8], v12[9], v12[73], v12[72]));
    faces.push(new Face(color12, v12[8], v12[10], v12[14], v12[12]));
    faces.push(new Face(color12, v12[8], v12[10], v12[26], v12[24]));
    faces.push(new Face(color12, v12[8], v12[10], v12[42], v12[40]));
    faces.push(new Face(color12, v12[8], v12[10], v12[74], v12[72]));
    faces.push(new Face(color12, v12[8], v12[12], v12[28], v12[24]));
    faces.push(new Face(color12, v12[8], v12[12], v12[44], v12[40]));
    faces.push(new Face(color12, v12[8], v12[12], v12[76], v12[72]));
    faces.push(new Face(color12, v12[8], v12[24], v12[56], v12[40]));
    faces.push(new Face(color12, v12[8], v12[24], v12[88], v12[72]));
    faces.push(new Face(color12, v12[8], v12[40], v12[104], v12[72]));
    faces.push(new Face(color12, v12[9], v12[11], v12[15], v12[13]));
    faces.push(new Face(color12, v12[9], v12[11], v12[27], v12[25]));
    faces.push(new Face(color12, v12[9], v12[11], v12[43], v12[41]));
    faces.push(new Face(color12, v12[9], v12[11], v12[75], v12[73]));
    faces.push(new Face(color12, v12[9], v12[13], v12[29], v12[25]));
    faces.push(new Face(color12, v12[9], v12[13], v12[45], v12[41]));
    faces.push(new Face(color12, v12[9], v12[13], v12[77], v12[73]));
    faces.push(new Face(color12, v12[9], v12[25], v12[57], v12[41]));
    faces.push(new Face(color12, v12[9], v12[25], v12[89], v12[73]));
    faces.push(new Face(color12, v12[9], v12[41], v12[105], v12[73]));
    faces.push(new Face(color12, v12[10], v12[11], v12[15], v12[14]));
    faces.push(new Face(color12, v12[10], v12[11], v12[27], v12[26]));
    faces.push(new Face(color12, v12[10], v12[11], v12[43], v12[42]));
    faces.push(new Face(color12, v12[10], v12[11], v12[75], v12[74]));
    faces.push(new Face(color12, v12[10], v12[14], v12[30], v12[26]));
    faces.push(new Face(color12, v12[10], v12[14], v12[46], v12[42]));
    faces.push(new Face(color12, v12[10], v12[14], v12[78], v12[74]));
    faces.push(new Face(color12, v12[10], v12[26], v12[58], v12[42]));
    faces.push(new Face(color12, v12[10], v12[26], v12[90], v12[74]));
    faces.push(new Face(color12, v12[10], v12[42], v12[106], v12[74]));
    faces.push(new Face(color12, v12[11], v12[15], v12[31], v12[27]));
    faces.push(new Face(color12, v12[11], v12[15], v12[47], v12[43]));
    faces.push(new Face(color12, v12[11], v12[15], v12[79], v12[75]));
    faces.push(new Face(color12, v12[11], v12[27], v12[59], v12[43]));
    faces.push(new Face(color12, v12[11], v12[27], v12[91], v12[75]));
    faces.push(new Face(color12, v12[11], v12[43], v12[107], v12[75]));
    faces.push(new Face(color12, v12[12], v12[13], v12[15], v12[14]));
    faces.push(new Face(color12, v12[12], v12[13], v12[29], v12[28]));
    faces.push(new Face(color12, v12[12], v12[13], v12[45], v12[44]));
    faces.push(new Face(color12, v12[12], v12[13], v12[77], v12[76]));
    faces.push(new Face(color12, v12[12], v12[14], v12[30], v12[28]));
    faces.push(new Face(color12, v12[12], v12[14], v12[46], v12[44]));
    faces.push(new Face(color12, v12[12], v12[14], v12[78], v12[76]));
    faces.push(new Face(color12, v12[12], v12[28], v12[60], v12[44]));
    faces.push(new Face(color12, v12[12], v12[28], v12[92], v12[76]));
    faces.push(new Face(color12, v12[12], v12[44], v12[108], v12[76]));
    faces.push(new Face(color12, v12[13], v12[15], v12[31], v12[29]));
    faces.push(new Face(color12, v12[13], v12[15], v12[47], v12[45]));
    faces.push(new Face(color12, v12[13], v12[15], v12[79], v12[77]));
    faces.push(new Face(color12, v12[13], v12[29], v12[61], v12[45]));
    faces.push(new Face(color12, v12[13], v12[29], v12[93], v12[77]));
    faces.push(new Face(color12, v12[13], v12[45], v12[109], v12[77]));
    faces.push(new Face(color12, v12[14], v12[15], v12[31], v12[30]));
    faces.push(new Face(color12, v12[14], v12[15], v12[47], v12[46]));
    faces.push(new Face(color12, v12[14], v12[15], v12[79], v12[78]));
    faces.push(new Face(color12, v12[14], v12[30], v12[62], v12[46]));
    faces.push(new Face(color12, v12[14], v12[30], v12[94], v12[78]));
    faces.push(new Face(color12, v12[14], v12[46], v12[110], v12[78]));
    faces.push(new Face(color12, v12[15], v12[31], v12[63], v12[47]));
    faces.push(new Face(color12, v12[15], v12[31], v12[95], v12[79]));
    faces.push(new Face(color12, v12[15], v12[47], v12[111], v12[79]));
    faces.push(new Face(color12, v12[16], v12[17], v12[19], v12[18]));
    faces.push(new Face(color12, v12[16], v12[17], v12[21], v12[20]));
    faces.push(new Face(color12, v12[16], v12[17], v12[25], v12[24]));
    faces.push(new Face(color12, v12[16], v12[17], v12[49], v12[48]));
    faces.push(new Face(color12, v12[16], v12[17], v12[81], v12[80]));
    faces.push(new Face(color12, v12[16], v12[18], v12[22], v12[20]));
    faces.push(new Face(color12, v12[16], v12[18], v12[26], v12[24]));
    faces.push(new Face(color12, v12[16], v12[18], v12[50], v12[48]));
    faces.push(new Face(color12, v12[16], v12[18], v12[82], v12[80]));
    faces.push(new Face(color12, v12[16], v12[20], v12[28], v12[24]));
    faces.push(new Face(color12, v12[16], v12[20], v12[52], v12[48]));
    faces.push(new Face(color12, v12[16], v12[20], v12[84], v12[80]));
    faces.push(new Face(color12, v12[16], v12[24], v12[56], v12[48]));
    faces.push(new Face(color12, v12[16], v12[24], v12[88], v12[80]));
    faces.push(new Face(color12, v12[16], v12[48], v12[112], v12[80]));
    faces.push(new Face(color12, v12[17], v12[19], v12[23], v12[21]));
    faces.push(new Face(color12, v12[17], v12[19], v12[27], v12[25]));
    faces.push(new Face(color12, v12[17], v12[19], v12[51], v12[49]));
    faces.push(new Face(color12, v12[17], v12[19], v12[83], v12[81]));
    faces.push(new Face(color12, v12[17], v12[21], v12[29], v12[25]));
    faces.push(new Face(color12, v12[17], v12[21], v12[53], v12[49]));
    faces.push(new Face(color12, v12[17], v12[21], v12[85], v12[81]));
    faces.push(new Face(color12, v12[17], v12[25], v12[57], v12[49]));
    faces.push(new Face(color12, v12[17], v12[25], v12[89], v12[81]));
    faces.push(new Face(color12, v12[17], v12[49], v12[113], v12[81]));
    faces.push(new Face(color12, v12[18], v12[19], v12[23], v12[22]));
    faces.push(new Face(color12, v12[18], v12[19], v12[27], v12[26]));
    faces.push(new Face(color12, v12[18], v12[19], v12[51], v12[50]));
    faces.push(new Face(color12, v12[18], v12[19], v12[83], v12[82]));
    faces.push(new Face(color12, v12[18], v12[22], v12[30], v12[26]));
    faces.push(new Face(color12, v12[18], v12[22], v12[54], v12[50]));
    faces.push(new Face(color12, v12[18], v12[22], v12[86], v12[82]));
    faces.push(new Face(color12, v12[18], v12[26], v12[58], v12[50]));
    faces.push(new Face(color12, v12[18], v12[26], v12[90], v12[82]));
    faces.push(new Face(color12, v12[18], v12[50], v12[114], v12[82]));
    faces.push(new Face(color12, v12[19], v12[23], v12[31], v12[27]));
    faces.push(new Face(color12, v12[19], v12[23], v12[55], v12[51]));
    faces.push(new Face(color12, v12[19], v12[23], v12[87], v12[83]));
    faces.push(new Face(color12, v12[19], v12[27], v12[59], v12[51]));
    faces.push(new Face(color12, v12[19], v12[27], v12[91], v12[83]));
    faces.push(new Face(color12, v12[19], v12[51], v12[115], v12[83]));
    faces.push(new Face(color12, v12[20], v12[21], v12[23], v12[22]));
    faces.push(new Face(color12, v12[20], v12[21], v12[29], v12[28]));
    faces.push(new Face(color12, v12[20], v12[21], v12[53], v12[52]));
    faces.push(new Face(color12, v12[20], v12[21], v12[85], v12[84]));
    faces.push(new Face(color12, v12[20], v12[22], v12[30], v12[28]));
    faces.push(new Face(color12, v12[20], v12[22], v12[54], v12[52]));
    faces.push(new Face(color12, v12[20], v12[22], v12[86], v12[84]));
    faces.push(new Face(color12, v12[20], v12[28], v12[60], v12[52]));
    faces.push(new Face(color12, v12[20], v12[28], v12[92], v12[84]));
    faces.push(new Face(color12, v12[20], v12[52], v12[116], v12[84]));
    faces.push(new Face(color12, v12[21], v12[23], v12[31], v12[29]));
    faces.push(new Face(color12, v12[21], v12[23], v12[55], v12[53]));
    faces.push(new Face(color12, v12[21], v12[23], v12[87], v12[85]));
    faces.push(new Face(color12, v12[21], v12[29], v12[61], v12[53]));
    faces.push(new Face(color12, v12[21], v12[29], v12[93], v12[85]));
    faces.push(new Face(color12, v12[21], v12[53], v12[117], v12[85]));
    faces.push(new Face(color12, v12[22], v12[23], v12[31], v12[30]));
    faces.push(new Face(color12, v12[22], v12[23], v12[55], v12[54]));
    faces.push(new Face(color12, v12[22], v12[23], v12[87], v12[86]));
    faces.push(new Face(color12, v12[22], v12[30], v12[62], v12[54]));
    faces.push(new Face(color12, v12[22], v12[30], v12[94], v12[86]));
    faces.push(new Face(color12, v12[22], v12[54], v12[118], v12[86]));
    faces.push(new Face(color12, v12[23], v12[31], v12[63], v12[55]));
    faces.push(new Face(color12, v12[23], v12[31], v12[95], v12[87]));
    faces.push(new Face(color12, v12[23], v12[55], v12[119], v12[87]));
    faces.push(new Face(color12, v12[24], v12[25], v12[27], v12[26]));
    faces.push(new Face(color12, v12[24], v12[25], v12[29], v12[28]));
    faces.push(new Face(color12, v12[24], v12[25], v12[57], v12[56]));
    faces.push(new Face(color12, v12[24], v12[25], v12[89], v12[88]));
    faces.push(new Face(color12, v12[24], v12[26], v12[30], v12[28]));
    faces.push(new Face(color12, v12[24], v12[26], v12[58], v12[56]));
    faces.push(new Face(color12, v12[24], v12[26], v12[90], v12[88]));
    faces.push(new Face(color12, v12[24], v12[28], v12[60], v12[56]));
    faces.push(new Face(color12, v12[24], v12[28], v12[92], v12[88]));
    faces.push(new Face(color12, v12[24], v12[56], v12[120], v12[88]));
    faces.push(new Face(color12, v12[25], v12[27], v12[31], v12[29]));
    faces.push(new Face(color12, v12[25], v12[27], v12[59], v12[57]));
    faces.push(new Face(color12, v12[25], v12[27], v12[91], v12[89]));
    faces.push(new Face(color12, v12[25], v12[29], v12[61], v12[57]));
    faces.push(new Face(color12, v12[25], v12[29], v12[93], v12[89]));
    faces.push(new Face(color12, v12[25], v12[57], v12[121], v12[89]));
    faces.push(new Face(color12, v12[26], v12[27], v12[31], v12[30]));
    faces.push(new Face(color12, v12[26], v12[27], v12[59], v12[58]));
    faces.push(new Face(color12, v12[26], v12[27], v12[91], v12[90]));
    faces.push(new Face(color12, v12[26], v12[30], v12[62], v12[58]));
    faces.push(new Face(color12, v12[26], v12[30], v12[94], v12[90]));
    faces.push(new Face(color12, v12[26], v12[58], v12[122], v12[90]));
    faces.push(new Face(color12, v12[27], v12[31], v12[63], v12[59]));
    faces.push(new Face(color12, v12[27], v12[31], v12[95], v12[91]));
    faces.push(new Face(color12, v12[27], v12[59], v12[123], v12[91]));
    faces.push(new Face(color12, v12[28], v12[29], v12[31], v12[30]));
    faces.push(new Face(color12, v12[28], v12[29], v12[61], v12[60]));
    faces.push(new Face(color12, v12[28], v12[29], v12[93], v12[92]));
    faces.push(new Face(color12, v12[28], v12[30], v12[62], v12[60]));
    faces.push(new Face(color12, v12[28], v12[30], v12[94], v12[92]));
    faces.push(new Face(color12, v12[28], v12[60], v12[124], v12[92]));
    faces.push(new Face(color12, v12[29], v12[31], v12[63], v12[61]));
    faces.push(new Face(color12, v12[29], v12[31], v12[95], v12[93]));
    faces.push(new Face(color12, v12[29], v12[61], v12[125], v12[93]));
    faces.push(new Face(color12, v12[30], v12[31], v12[63], v12[62]));
    faces.push(new Face(color12, v12[30], v12[31], v12[95], v12[94]));
    faces.push(new Face(color12, v12[30], v12[62], v12[126], v12[94]));
    faces.push(new Face(color12, v12[31], v12[63], v12[127], v12[95]));
    faces.push(new Face(color12, v12[32], v12[33], v12[35], v12[34]));
    faces.push(new Face(color12, v12[32], v12[33], v12[37], v12[36]));
    faces.push(new Face(color12, v12[32], v12[33], v12[41], v12[40]));
    faces.push(new Face(color12, v12[32], v12[33], v12[49], v12[48]));
    faces.push(new Face(color12, v12[32], v12[33], v12[97], v12[96]));
    faces.push(new Face(color12, v12[32], v12[34], v12[38], v12[36]));
    faces.push(new Face(color12, v12[32], v12[34], v12[42], v12[40]));
    faces.push(new Face(color12, v12[32], v12[34], v12[50], v12[48]));
    faces.push(new Face(color12, v12[32], v12[34], v12[98], v12[96]));
    faces.push(new Face(color12, v12[32], v12[36], v12[44], v12[40]));
    faces.push(new Face(color12, v12[32], v12[36], v12[52], v12[48]));
    faces.push(new Face(color12, v12[32], v12[36], v12[100], v12[96]));
    faces.push(new Face(color12, v12[32], v12[40], v12[56], v12[48]));
    faces.push(new Face(color12, v12[32], v12[40], v12[104], v12[96]));
    faces.push(new Face(color12, v12[32], v12[48], v12[112], v12[96]));
    faces.push(new Face(color12, v12[33], v12[35], v12[39], v12[37]));
    faces.push(new Face(color12, v12[33], v12[35], v12[43], v12[41]));
    faces.push(new Face(color12, v12[33], v12[35], v12[51], v12[49]));
    faces.push(new Face(color12, v12[33], v12[35], v12[99], v12[97]));
    faces.push(new Face(color12, v12[33], v12[37], v12[45], v12[41]));
    faces.push(new Face(color12, v12[33], v12[37], v12[53], v12[49]));
    faces.push(new Face(color12, v12[33], v12[37], v12[101], v12[97]));
    faces.push(new Face(color12, v12[33], v12[41], v12[57], v12[49]));
    faces.push(new Face(color12, v12[33], v12[41], v12[105], v12[97]));
    faces.push(new Face(color12, v12[33], v12[49], v12[113], v12[97]));
    faces.push(new Face(color12, v12[34], v12[35], v12[39], v12[38]));
    faces.push(new Face(color12, v12[34], v12[35], v12[43], v12[42]));
    faces.push(new Face(color12, v12[34], v12[35], v12[51], v12[50]));
    faces.push(new Face(color12, v12[34], v12[35], v12[99], v12[98]));
    faces.push(new Face(color12, v12[34], v12[38], v12[46], v12[42]));
    faces.push(new Face(color12, v12[34], v12[38], v12[54], v12[50]));
    faces.push(new Face(color12, v12[34], v12[38], v12[102], v12[98]));
    faces.push(new Face(color12, v12[34], v12[42], v12[58], v12[50]));
    faces.push(new Face(color12, v12[34], v12[42], v12[106], v12[98]));
    faces.push(new Face(color12, v12[34], v12[50], v12[114], v12[98]));
    faces.push(new Face(color12, v12[35], v12[39], v12[47], v12[43]));
    faces.push(new Face(color12, v12[35], v12[39], v12[55], v12[51]));
    faces.push(new Face(color12, v12[35], v12[39], v12[103], v12[99]));
    faces.push(new Face(color12, v12[35], v12[43], v12[59], v12[51]));
    faces.push(new Face(color12, v12[35], v12[43], v12[107], v12[99]));
    faces.push(new Face(color12, v12[35], v12[51], v12[115], v12[99]));
    faces.push(new Face(color12, v12[36], v12[37], v12[39], v12[38]));
    faces.push(new Face(color12, v12[36], v12[37], v12[45], v12[44]));
    faces.push(new Face(color12, v12[36], v12[37], v12[53], v12[52]));
    faces.push(new Face(color12, v12[36], v12[37], v12[101], v12[100]));
    faces.push(new Face(color12, v12[36], v12[38], v12[46], v12[44]));
    faces.push(new Face(color12, v12[36], v12[38], v12[54], v12[52]));
    faces.push(new Face(color12, v12[36], v12[38], v12[102], v12[100]));
    faces.push(new Face(color12, v12[36], v12[44], v12[60], v12[52]));
    faces.push(new Face(color12, v12[36], v12[44], v12[108], v12[100]));
    faces.push(new Face(color12, v12[36], v12[52], v12[116], v12[100]));
    faces.push(new Face(color12, v12[37], v12[39], v12[47], v12[45]));
    faces.push(new Face(color12, v12[37], v12[39], v12[55], v12[53]));
    faces.push(new Face(color12, v12[37], v12[39], v12[103], v12[101]));
    faces.push(new Face(color12, v12[37], v12[45], v12[61], v12[53]));
    faces.push(new Face(color12, v12[37], v12[45], v12[109], v12[101]));
    faces.push(new Face(color12, v12[37], v12[53], v12[117], v12[101]));
    faces.push(new Face(color12, v12[38], v12[39], v12[47], v12[46]));
    faces.push(new Face(color12, v12[38], v12[39], v12[55], v12[54]));
    faces.push(new Face(color12, v12[38], v12[39], v12[103], v12[102]));
    faces.push(new Face(color12, v12[38], v12[46], v12[62], v12[54]));
    faces.push(new Face(color12, v12[38], v12[46], v12[110], v12[102]));
    faces.push(new Face(color12, v12[38], v12[54], v12[118], v12[102]));
    faces.push(new Face(color12, v12[39], v12[47], v12[63], v12[55]));
    faces.push(new Face(color12, v12[39], v12[47], v12[111], v12[103]));
    faces.push(new Face(color12, v12[39], v12[55], v12[119], v12[103]));
    faces.push(new Face(color12, v12[40], v12[41], v12[43], v12[42]));
    faces.push(new Face(color12, v12[40], v12[41], v12[45], v12[44]));
    faces.push(new Face(color12, v12[40], v12[41], v12[57], v12[56]));
    faces.push(new Face(color12, v12[40], v12[41], v12[105], v12[104]));
    faces.push(new Face(color12, v12[40], v12[42], v12[46], v12[44]));
    faces.push(new Face(color12, v12[40], v12[42], v12[58], v12[56]));
    faces.push(new Face(color12, v12[40], v12[42], v12[106], v12[104]));
    faces.push(new Face(color12, v12[40], v12[44], v12[60], v12[56]));
    faces.push(new Face(color12, v12[40], v12[44], v12[108], v12[104]));
    faces.push(new Face(color12, v12[40], v12[56], v12[120], v12[104]));
    faces.push(new Face(color12, v12[41], v12[43], v12[47], v12[45]));
    faces.push(new Face(color12, v12[41], v12[43], v12[59], v12[57]));
    faces.push(new Face(color12, v12[41], v12[43], v12[107], v12[105]));
    faces.push(new Face(color12, v12[41], v12[45], v12[61], v12[57]));
    faces.push(new Face(color12, v12[41], v12[45], v12[109], v12[105]));
    faces.push(new Face(color12, v12[41], v12[57], v12[121], v12[105]));
    faces.push(new Face(color12, v12[42], v12[43], v12[47], v12[46]));
    faces.push(new Face(color12, v12[42], v12[43], v12[59], v12[58]));
    faces.push(new Face(color12, v12[42], v12[43], v12[107], v12[106]));
    faces.push(new Face(color12, v12[42], v12[46], v12[62], v12[58]));
    faces.push(new Face(color12, v12[42], v12[46], v12[110], v12[106]));
    faces.push(new Face(color12, v12[42], v12[58], v12[122], v12[106]));
    faces.push(new Face(color12, v12[43], v12[47], v12[63], v12[59]));
    faces.push(new Face(color12, v12[43], v12[47], v12[111], v12[107]));
    faces.push(new Face(color12, v12[43], v12[59], v12[123], v12[107]));
    faces.push(new Face(color12, v12[44], v12[45], v12[47], v12[46]));
    faces.push(new Face(color12, v12[44], v12[45], v12[61], v12[60]));
    faces.push(new Face(color12, v12[44], v12[45], v12[109], v12[108]));
    faces.push(new Face(color12, v12[44], v12[46], v12[62], v12[60]));
    faces.push(new Face(color12, v12[44], v12[46], v12[110], v12[108]));
    faces.push(new Face(color12, v12[44], v12[60], v12[124], v12[108]));
    faces.push(new Face(color12, v12[45], v12[47], v12[63], v12[61]));
    faces.push(new Face(color12, v12[45], v12[47], v12[111], v12[109]));
    faces.push(new Face(color12, v12[45], v12[61], v12[125], v12[109]));
    faces.push(new Face(color12, v12[46], v12[47], v12[63], v12[62]));
    faces.push(new Face(color12, v12[46], v12[47], v12[111], v12[110]));
    faces.push(new Face(color12, v12[46], v12[62], v12[126], v12[110]));
    faces.push(new Face(color12, v12[47], v12[63], v12[127], v12[111]));
    faces.push(new Face(color12, v12[48], v12[49], v12[51], v12[50]));
    faces.push(new Face(color12, v12[48], v12[49], v12[53], v12[52]));
    faces.push(new Face(color12, v12[48], v12[49], v12[57], v12[56]));
    faces.push(new Face(color12, v12[48], v12[49], v12[113], v12[112]));
    faces.push(new Face(color12, v12[48], v12[50], v12[54], v12[52]));
    faces.push(new Face(color12, v12[48], v12[50], v12[58], v12[56]));
    faces.push(new Face(color12, v12[48], v12[50], v12[114], v12[112]));
    faces.push(new Face(color12, v12[48], v12[52], v12[60], v12[56]));
    faces.push(new Face(color12, v12[48], v12[52], v12[116], v12[112]));
    faces.push(new Face(color12, v12[48], v12[56], v12[120], v12[112]));
    faces.push(new Face(color12, v12[49], v12[51], v12[55], v12[53]));
    faces.push(new Face(color12, v12[49], v12[51], v12[59], v12[57]));
    faces.push(new Face(color12, v12[49], v12[51], v12[115], v12[113]));
    faces.push(new Face(color12, v12[49], v12[53], v12[61], v12[57]));
    faces.push(new Face(color12, v12[49], v12[53], v12[117], v12[113]));
    faces.push(new Face(color12, v12[49], v12[57], v12[121], v12[113]));
    faces.push(new Face(color12, v12[50], v12[51], v12[55], v12[54]));
    faces.push(new Face(color12, v12[50], v12[51], v12[59], v12[58]));
    faces.push(new Face(color12, v12[50], v12[51], v12[115], v12[114]));
    faces.push(new Face(color12, v12[50], v12[54], v12[62], v12[58]));
    faces.push(new Face(color12, v12[50], v12[54], v12[118], v12[114]));
    faces.push(new Face(color12, v12[50], v12[58], v12[122], v12[114]));
    faces.push(new Face(color12, v12[51], v12[55], v12[63], v12[59]));
    faces.push(new Face(color12, v12[51], v12[55], v12[119], v12[115]));
    faces.push(new Face(color12, v12[51], v12[59], v12[123], v12[115]));
    faces.push(new Face(color12, v12[52], v12[53], v12[55], v12[54]));
    faces.push(new Face(color12, v12[52], v12[53], v12[61], v12[60]));
    faces.push(new Face(color12, v12[52], v12[53], v12[117], v12[116]));
    faces.push(new Face(color12, v12[52], v12[54], v12[62], v12[60]));
    faces.push(new Face(color12, v12[52], v12[54], v12[118], v12[116]));
    faces.push(new Face(color12, v12[52], v12[60], v12[124], v12[116]));
    faces.push(new Face(color12, v12[53], v12[55], v12[63], v12[61]));
    faces.push(new Face(color12, v12[53], v12[55], v12[119], v12[117]));
    faces.push(new Face(color12, v12[53], v12[61], v12[125], v12[117]));
    faces.push(new Face(color12, v12[54], v12[55], v12[63], v12[62]));
    faces.push(new Face(color12, v12[54], v12[55], v12[119], v12[118]));
    faces.push(new Face(color12, v12[54], v12[62], v12[126], v12[118]));
    faces.push(new Face(color12, v12[55], v12[63], v12[127], v12[119]));
    faces.push(new Face(color12, v12[56], v12[57], v12[59], v12[58]));
    faces.push(new Face(color12, v12[56], v12[57], v12[61], v12[60]));
    faces.push(new Face(color12, v12[56], v12[57], v12[121], v12[120]));
    faces.push(new Face(color12, v12[56], v12[58], v12[62], v12[60]));
    faces.push(new Face(color12, v12[56], v12[58], v12[122], v12[120]));
    faces.push(new Face(color12, v12[56], v12[60], v12[124], v12[120]));
    faces.push(new Face(color12, v12[57], v12[59], v12[63], v12[61]));
    faces.push(new Face(color12, v12[57], v12[59], v12[123], v12[121]));
    faces.push(new Face(color12, v12[57], v12[61], v12[125], v12[121]));
    faces.push(new Face(color12, v12[58], v12[59], v12[63], v12[62]));
    faces.push(new Face(color12, v12[58], v12[59], v12[123], v12[122]));
    faces.push(new Face(color12, v12[58], v12[62], v12[126], v12[122]));
    faces.push(new Face(color12, v12[59], v12[63], v12[127], v12[123]));
    faces.push(new Face(color12, v12[60], v12[61], v12[63], v12[62]));
    faces.push(new Face(color12, v12[60], v12[61], v12[125], v12[124]));
    faces.push(new Face(color12, v12[60], v12[62], v12[126], v12[124]));
    faces.push(new Face(color12, v12[61], v12[63], v12[127], v12[125]));
    faces.push(new Face(color12, v12[62], v12[63], v12[127], v12[126]));
    faces.push(new Face(color12, v12[64], v12[65], v12[67], v12[66]));
    faces.push(new Face(color12, v12[64], v12[65], v12[69], v12[68]));
    faces.push(new Face(color12, v12[64], v12[65], v12[73], v12[72]));
    faces.push(new Face(color12, v12[64], v12[65], v12[81], v12[80]));
    faces.push(new Face(color12, v12[64], v12[65], v12[97], v12[96]));
    faces.push(new Face(color12, v12[64], v12[66], v12[70], v12[68]));
    faces.push(new Face(color12, v12[64], v12[66], v12[74], v12[72]));
    faces.push(new Face(color12, v12[64], v12[66], v12[82], v12[80]));
    faces.push(new Face(color12, v12[64], v12[66], v12[98], v12[96]));
    faces.push(new Face(color12, v12[64], v12[68], v12[76], v12[72]));
    faces.push(new Face(color12, v12[64], v12[68], v12[84], v12[80]));
    faces.push(new Face(color12, v12[64], v12[68], v12[100], v12[96]));
    faces.push(new Face(color12, v12[64], v12[72], v12[88], v12[80]));
    faces.push(new Face(color12, v12[64], v12[72], v12[104], v12[96]));
    faces.push(new Face(color12, v12[64], v12[80], v12[112], v12[96]));
    faces.push(new Face(color12, v12[65], v12[67], v12[71], v12[69]));
    faces.push(new Face(color12, v12[65], v12[67], v12[75], v12[73]));
    faces.push(new Face(color12, v12[65], v12[67], v12[83], v12[81]));
    faces.push(new Face(color12, v12[65], v12[67], v12[99], v12[97]));
    faces.push(new Face(color12, v12[65], v12[69], v12[77], v12[73]));
    faces.push(new Face(color12, v12[65], v12[69], v12[85], v12[81]));
    faces.push(new Face(color12, v12[65], v12[69], v12[101], v12[97]));
    faces.push(new Face(color12, v12[65], v12[73], v12[89], v12[81]));
    faces.push(new Face(color12, v12[65], v12[73], v12[105], v12[97]));
    faces.push(new Face(color12, v12[65], v12[81], v12[113], v12[97]));
    faces.push(new Face(color12, v12[66], v12[67], v12[71], v12[70]));
    faces.push(new Face(color12, v12[66], v12[67], v12[75], v12[74]));
    faces.push(new Face(color12, v12[66], v12[67], v12[83], v12[82]));
    faces.push(new Face(color12, v12[66], v12[67], v12[99], v12[98]));
    faces.push(new Face(color12, v12[66], v12[70], v12[78], v12[74]));
    faces.push(new Face(color12, v12[66], v12[70], v12[86], v12[82]));
    faces.push(new Face(color12, v12[66], v12[70], v12[102], v12[98]));
    faces.push(new Face(color12, v12[66], v12[74], v12[90], v12[82]));
    faces.push(new Face(color12, v12[66], v12[74], v12[106], v12[98]));
    faces.push(new Face(color12, v12[66], v12[82], v12[114], v12[98]));
    faces.push(new Face(color12, v12[67], v12[71], v12[79], v12[75]));
    faces.push(new Face(color12, v12[67], v12[71], v12[87], v12[83]));
    faces.push(new Face(color12, v12[67], v12[71], v12[103], v12[99]));
    faces.push(new Face(color12, v12[67], v12[75], v12[91], v12[83]));
    faces.push(new Face(color12, v12[67], v12[75], v12[107], v12[99]));
    faces.push(new Face(color12, v12[67], v12[83], v12[115], v12[99]));
    faces.push(new Face(color12, v12[68], v12[69], v12[71], v12[70]));
    faces.push(new Face(color12, v12[68], v12[69], v12[77], v12[76]));
    faces.push(new Face(color12, v12[68], v12[69], v12[85], v12[84]));
    faces.push(new Face(color12, v12[68], v12[69], v12[101], v12[100]));
    faces.push(new Face(color12, v12[68], v12[70], v12[78], v12[76]));
    faces.push(new Face(color12, v12[68], v12[70], v12[86], v12[84]));
    faces.push(new Face(color12, v12[68], v12[70], v12[102], v12[100]));
    faces.push(new Face(color12, v12[68], v12[76], v12[92], v12[84]));
    faces.push(new Face(color12, v12[68], v12[76], v12[108], v12[100]));
    faces.push(new Face(color12, v12[68], v12[84], v12[116], v12[100]));
    faces.push(new Face(color12, v12[69], v12[71], v12[79], v12[77]));
    faces.push(new Face(color12, v12[69], v12[71], v12[87], v12[85]));
    faces.push(new Face(color12, v12[69], v12[71], v12[103], v12[101]));
    faces.push(new Face(color12, v12[69], v12[77], v12[93], v12[85]));
    faces.push(new Face(color12, v12[69], v12[77], v12[109], v12[101]));
    faces.push(new Face(color12, v12[69], v12[85], v12[117], v12[101]));
    faces.push(new Face(color12, v12[70], v12[71], v12[79], v12[78]));
    faces.push(new Face(color12, v12[70], v12[71], v12[87], v12[86]));
    faces.push(new Face(color12, v12[70], v12[71], v12[103], v12[102]));
    faces.push(new Face(color12, v12[70], v12[78], v12[94], v12[86]));
    faces.push(new Face(color12, v12[70], v12[78], v12[110], v12[102]));
    faces.push(new Face(color12, v12[70], v12[86], v12[118], v12[102]));
    faces.push(new Face(color12, v12[71], v12[79], v12[95], v12[87]));
    faces.push(new Face(color12, v12[71], v12[79], v12[111], v12[103]));
    faces.push(new Face(color12, v12[71], v12[87], v12[119], v12[103]));
    faces.push(new Face(color12, v12[72], v12[73], v12[75], v12[74]));
    faces.push(new Face(color12, v12[72], v12[73], v12[77], v12[76]));
    faces.push(new Face(color12, v12[72], v12[73], v12[89], v12[88]));
    faces.push(new Face(color12, v12[72], v12[73], v12[105], v12[104]));
    faces.push(new Face(color12, v12[72], v12[74], v12[78], v12[76]));
    faces.push(new Face(color12, v12[72], v12[74], v12[90], v12[88]));
    faces.push(new Face(color12, v12[72], v12[74], v12[106], v12[104]));
    faces.push(new Face(color12, v12[72], v12[76], v12[92], v12[88]));
    faces.push(new Face(color12, v12[72], v12[76], v12[108], v12[104]));
    faces.push(new Face(color12, v12[72], v12[88], v12[120], v12[104]));
    faces.push(new Face(color12, v12[73], v12[75], v12[79], v12[77]));
    faces.push(new Face(color12, v12[73], v12[75], v12[91], v12[89]));
    faces.push(new Face(color12, v12[73], v12[75], v12[107], v12[105]));
    faces.push(new Face(color12, v12[73], v12[77], v12[93], v12[89]));
    faces.push(new Face(color12, v12[73], v12[77], v12[109], v12[105]));
    faces.push(new Face(color12, v12[73], v12[89], v12[121], v12[105]));
    faces.push(new Face(color12, v12[74], v12[75], v12[79], v12[78]));
    faces.push(new Face(color12, v12[74], v12[75], v12[91], v12[90]));
    faces.push(new Face(color12, v12[74], v12[75], v12[107], v12[106]));
    faces.push(new Face(color12, v12[74], v12[78], v12[94], v12[90]));
    faces.push(new Face(color12, v12[74], v12[78], v12[110], v12[106]));
    faces.push(new Face(color12, v12[74], v12[90], v12[122], v12[106]));
    faces.push(new Face(color12, v12[75], v12[79], v12[95], v12[91]));
    faces.push(new Face(color12, v12[75], v12[79], v12[111], v12[107]));
    faces.push(new Face(color12, v12[75], v12[91], v12[123], v12[107]));
    faces.push(new Face(color12, v12[76], v12[77], v12[79], v12[78]));
    faces.push(new Face(color12, v12[76], v12[77], v12[93], v12[92]));
    faces.push(new Face(color12, v12[76], v12[77], v12[109], v12[108]));
    faces.push(new Face(color12, v12[76], v12[78], v12[94], v12[92]));
    faces.push(new Face(color12, v12[76], v12[78], v12[110], v12[108]));
    faces.push(new Face(color12, v12[76], v12[92], v12[124], v12[108]));
    faces.push(new Face(color12, v12[77], v12[79], v12[95], v12[93]));
    faces.push(new Face(color12, v12[77], v12[79], v12[111], v12[109]));
    faces.push(new Face(color12, v12[77], v12[93], v12[125], v12[109]));
    faces.push(new Face(color12, v12[78], v12[79], v12[95], v12[94]));
    faces.push(new Face(color12, v12[78], v12[79], v12[111], v12[110]));
    faces.push(new Face(color12, v12[78], v12[94], v12[126], v12[110]));
    faces.push(new Face(color12, v12[79], v12[95], v12[127], v12[111]));
    faces.push(new Face(color12, v12[80], v12[81], v12[83], v12[82]));
    faces.push(new Face(color12, v12[80], v12[81], v12[85], v12[84]));
    faces.push(new Face(color12, v12[80], v12[81], v12[89], v12[88]));
    faces.push(new Face(color12, v12[80], v12[81], v12[113], v12[112]));
    faces.push(new Face(color12, v12[80], v12[82], v12[86], v12[84]));
    faces.push(new Face(color12, v12[80], v12[82], v12[90], v12[88]));
    faces.push(new Face(color12, v12[80], v12[82], v12[114], v12[112]));
    faces.push(new Face(color12, v12[80], v12[84], v12[92], v12[88]));
    faces.push(new Face(color12, v12[80], v12[84], v12[116], v12[112]));
    faces.push(new Face(color12, v12[80], v12[88], v12[120], v12[112]));
    faces.push(new Face(color12, v12[81], v12[83], v12[87], v12[85]));
    faces.push(new Face(color12, v12[81], v12[83], v12[91], v12[89]));
    faces.push(new Face(color12, v12[81], v12[83], v12[115], v12[113]));
    faces.push(new Face(color12, v12[81], v12[85], v12[93], v12[89]));
    faces.push(new Face(color12, v12[81], v12[85], v12[117], v12[113]));
    faces.push(new Face(color12, v12[81], v12[89], v12[121], v12[113]));
    faces.push(new Face(color12, v12[82], v12[83], v12[87], v12[86]));
    faces.push(new Face(color12, v12[82], v12[83], v12[91], v12[90]));
    faces.push(new Face(color12, v12[82], v12[83], v12[115], v12[114]));
    faces.push(new Face(color12, v12[82], v12[86], v12[94], v12[90]));
    faces.push(new Face(color12, v12[82], v12[86], v12[118], v12[114]));
    faces.push(new Face(color12, v12[82], v12[90], v12[122], v12[114]));
    faces.push(new Face(color12, v12[83], v12[87], v12[95], v12[91]));
    faces.push(new Face(color12, v12[83], v12[87], v12[119], v12[115]));
    faces.push(new Face(color12, v12[83], v12[91], v12[123], v12[115]));
    faces.push(new Face(color12, v12[84], v12[85], v12[87], v12[86]));
    faces.push(new Face(color12, v12[84], v12[85], v12[93], v12[92]));
    faces.push(new Face(color12, v12[84], v12[85], v12[117], v12[116]));
    faces.push(new Face(color12, v12[84], v12[86], v12[94], v12[92]));
    faces.push(new Face(color12, v12[84], v12[86], v12[118], v12[116]));
    faces.push(new Face(color12, v12[84], v12[92], v12[124], v12[116]));
    faces.push(new Face(color12, v12[85], v12[87], v12[95], v12[93]));
    faces.push(new Face(color12, v12[85], v12[87], v12[119], v12[117]));
    faces.push(new Face(color12, v12[85], v12[93], v12[125], v12[117]));
    faces.push(new Face(color12, v12[86], v12[87], v12[95], v12[94]));
    faces.push(new Face(color12, v12[86], v12[87], v12[119], v12[118]));
    faces.push(new Face(color12, v12[86], v12[94], v12[126], v12[118]));
    faces.push(new Face(color12, v12[87], v12[95], v12[127], v12[119]));
    faces.push(new Face(color12, v12[88], v12[89], v12[91], v12[90]));
    faces.push(new Face(color12, v12[88], v12[89], v12[93], v12[92]));
    faces.push(new Face(color12, v12[88], v12[89], v12[121], v12[120]));
    faces.push(new Face(color12, v12[88], v12[90], v12[94], v12[92]));
    faces.push(new Face(color12, v12[88], v12[90], v12[122], v12[120]));
    faces.push(new Face(color12, v12[88], v12[92], v12[124], v12[120]));
    faces.push(new Face(color12, v12[89], v12[91], v12[95], v12[93]));
    faces.push(new Face(color12, v12[89], v12[91], v12[123], v12[121]));
    faces.push(new Face(color12, v12[89], v12[93], v12[125], v12[121]));
    faces.push(new Face(color12, v12[90], v12[91], v12[95], v12[94]));
    faces.push(new Face(color12, v12[90], v12[91], v12[123], v12[122]));
    faces.push(new Face(color12, v12[90], v12[94], v12[126], v12[122]));
    faces.push(new Face(color12, v12[91], v12[95], v12[127], v12[123]));
    faces.push(new Face(color12, v12[92], v12[93], v12[95], v12[94]));
    faces.push(new Face(color12, v12[92], v12[93], v12[125], v12[124]));
    faces.push(new Face(color12, v12[92], v12[94], v12[126], v12[124]));
    faces.push(new Face(color12, v12[93], v12[95], v12[127], v12[125]));
    faces.push(new Face(color12, v12[94], v12[95], v12[127], v12[126]));
    faces.push(new Face(color12, v12[96], v12[97], v12[99], v12[98]));
    faces.push(new Face(color12, v12[96], v12[97], v12[101], v12[100]));
    faces.push(new Face(color12, v12[96], v12[97], v12[105], v12[104]));
    faces.push(new Face(color12, v12[96], v12[97], v12[113], v12[112]));
    faces.push(new Face(color12, v12[96], v12[98], v12[102], v12[100]));
    faces.push(new Face(color12, v12[96], v12[98], v12[106], v12[104]));
    faces.push(new Face(color12, v12[96], v12[98], v12[114], v12[112]));
    faces.push(new Face(color12, v12[96], v12[100], v12[108], v12[104]));
    faces.push(new Face(color12, v12[96], v12[100], v12[116], v12[112]));
    faces.push(new Face(color12, v12[96], v12[104], v12[120], v12[112]));
    faces.push(new Face(color12, v12[97], v12[99], v12[103], v12[101]));
    faces.push(new Face(color12, v12[97], v12[99], v12[107], v12[105]));
    faces.push(new Face(color12, v12[97], v12[99], v12[115], v12[113]));
    faces.push(new Face(color12, v12[97], v12[101], v12[109], v12[105]));
    faces.push(new Face(color12, v12[97], v12[101], v12[117], v12[113]));
    faces.push(new Face(color12, v12[97], v12[105], v12[121], v12[113]));
    faces.push(new Face(color12, v12[98], v12[99], v12[103], v12[102]));
    faces.push(new Face(color12, v12[98], v12[99], v12[107], v12[106]));
    faces.push(new Face(color12, v12[98], v12[99], v12[115], v12[114]));
    faces.push(new Face(color12, v12[98], v12[102], v12[110], v12[106]));
    faces.push(new Face(color12, v12[98], v12[102], v12[118], v12[114]));
    faces.push(new Face(color12, v12[98], v12[106], v12[122], v12[114]));
    faces.push(new Face(color12, v12[99], v12[103], v12[111], v12[107]));
    faces.push(new Face(color12, v12[99], v12[103], v12[119], v12[115]));
    faces.push(new Face(color12, v12[99], v12[107], v12[123], v12[115]));
    faces.push(new Face(color12, v12[100], v12[101], v12[103], v12[102]));
    faces.push(new Face(color12, v12[100], v12[101], v12[109], v12[108]));
    faces.push(new Face(color12, v12[100], v12[101], v12[117], v12[116]));
    faces.push(new Face(color12, v12[100], v12[102], v12[110], v12[108]));
    faces.push(new Face(color12, v12[100], v12[102], v12[118], v12[116]));
    faces.push(new Face(color12, v12[100], v12[108], v12[124], v12[116]));
    faces.push(new Face(color12, v12[101], v12[103], v12[111], v12[109]));
    faces.push(new Face(color12, v12[101], v12[103], v12[119], v12[117]));
    faces.push(new Face(color12, v12[101], v12[109], v12[125], v12[117]));
    faces.push(new Face(color12, v12[102], v12[103], v12[111], v12[110]));
    faces.push(new Face(color12, v12[102], v12[103], v12[119], v12[118]));
    faces.push(new Face(color12, v12[102], v12[110], v12[126], v12[118]));
    faces.push(new Face(color12, v12[103], v12[111], v12[127], v12[119]));
    faces.push(new Face(color12, v12[104], v12[105], v12[107], v12[106]));
    faces.push(new Face(color12, v12[104], v12[105], v12[109], v12[108]));
    faces.push(new Face(color12, v12[104], v12[105], v12[121], v12[120]));
    faces.push(new Face(color12, v12[104], v12[106], v12[110], v12[108]));
    faces.push(new Face(color12, v12[104], v12[106], v12[122], v12[120]));
    faces.push(new Face(color12, v12[104], v12[108], v12[124], v12[120]));
    faces.push(new Face(color12, v12[105], v12[107], v12[111], v12[109]));
    faces.push(new Face(color12, v12[105], v12[107], v12[123], v12[121]));
    faces.push(new Face(color12, v12[105], v12[109], v12[125], v12[121]));
    faces.push(new Face(color12, v12[106], v12[107], v12[111], v12[110]));
    faces.push(new Face(color12, v12[106], v12[107], v12[123], v12[122]));
    faces.push(new Face(color12, v12[106], v12[110], v12[126], v12[122]));
    faces.push(new Face(color12, v12[107], v12[111], v12[127], v12[123]));
    faces.push(new Face(color12, v12[108], v12[109], v12[111], v12[110]));
    faces.push(new Face(color12, v12[108], v12[109], v12[125], v12[124]));
    faces.push(new Face(color12, v12[108], v12[110], v12[126], v12[124]));
    faces.push(new Face(color12, v12[109], v12[111], v12[127], v12[125]));
    faces.push(new Face(color12, v12[110], v12[111], v12[127], v12[126]));
    faces.push(new Face(color12, v12[112], v12[113], v12[115], v12[114]));
    faces.push(new Face(color12, v12[112], v12[113], v12[117], v12[116]));
    faces.push(new Face(color12, v12[112], v12[113], v12[121], v12[120]));
    faces.push(new Face(color12, v12[112], v12[114], v12[118], v12[116]));
    faces.push(new Face(color12, v12[112], v12[114], v12[122], v12[120]));
    faces.push(new Face(color12, v12[112], v12[116], v12[124], v12[120]));
    faces.push(new Face(color12, v12[113], v12[115], v12[119], v12[117]));
    faces.push(new Face(color12, v12[113], v12[115], v12[123], v12[121]));
    faces.push(new Face(color12, v12[113], v12[117], v12[125], v12[121]));
    faces.push(new Face(color12, v12[114], v12[115], v12[119], v12[118]));
    faces.push(new Face(color12, v12[114], v12[115], v12[123], v12[122]));
    faces.push(new Face(color12, v12[114], v12[118], v12[126], v12[122]));
    faces.push(new Face(color12, v12[115], v12[119], v12[127], v12[123]));
    faces.push(new Face(color12, v12[116], v12[117], v12[119], v12[118]));
    faces.push(new Face(color12, v12[116], v12[117], v12[125], v12[124]));
    faces.push(new Face(color12, v12[116], v12[118], v12[126], v12[124]));
    faces.push(new Face(color12, v12[117], v12[119], v12[127], v12[125]));
    faces.push(new Face(color12, v12[118], v12[119], v12[127], v12[126]));
    faces.push(new Face(color12, v12[120], v12[121], v12[123], v12[122]));
    faces.push(new Face(color12, v12[120], v12[121], v12[125], v12[124]));
    faces.push(new Face(color12, v12[120], v12[122], v12[126], v12[124]));
    faces.push(new Face(color12, v12[121], v12[123], v12[127], v12[125]));
    faces.push(new Face(color12, v12[122], v12[123], v12[127], v12[126]));
    faces.push(new Face(color12, v12[124], v12[125], v12[127], v12[126]));
    for (let i = 0; i < v12.length; i++) {
        v12[i].rotate(r);
        v12[i].project();
    }

    v13[0] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v13[1] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v13[2] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v13[3] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v13[4] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v13[5] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v13[6] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2);
    v13[7] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v13[8] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v13[9] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v13[10] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2);
    v13[11] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v13[12] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2);
    v13[13] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v13[14] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, w/2, w/2, -w/2);
    v13[15] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v13[16] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v13[17] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v13[18] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v13[19] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v13[20] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v13[21] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v13[22] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, w/2, w/2, -w/2);
    v13[23] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v13[24] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v13[25] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v13[26] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, w/2, w/2, -w/2);
    v13[27] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v13[28] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, w/2, -w/2, -w/2);
    v13[29] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v13[30] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, w/2, w/2, -w/2);
    v13[31] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v13[32] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v13[33] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v13[34] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v13[35] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v13[36] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v13[37] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v13[38] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2);
    v13[39] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v13[40] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v13[41] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v13[42] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2);
    v13[43] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v13[44] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2);
    v13[45] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v13[46] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, w/2, w/2, -w/2);
    v13[47] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v13[48] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v13[49] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v13[50] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v13[51] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v13[52] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v13[53] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v13[54] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, w/2, w/2, -w/2);
    v13[55] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v13[56] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v13[57] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v13[58] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, w/2, w/2, -w/2);
    v13[59] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v13[60] = new Vertex(-w/2, w/2, w/2, w/2, w/2, w/2, -w/2, -w/2);
    v13[61] = new Vertex(-w/2, w/2, w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v13[62] = new Vertex(-w/2, w/2, w/2, w/2, w/2, w/2, w/2, -w/2);
    v13[63] = new Vertex(-w/2, w/2, w/2, w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v13[64] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v13[65] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v13[66] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v13[67] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v13[68] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v13[69] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v13[70] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2);
    v13[71] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v13[72] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v13[73] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v13[74] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2);
    v13[75] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v13[76] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2);
    v13[77] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v13[78] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, w/2, w/2, -w/2);
    v13[79] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v13[80] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v13[81] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v13[82] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v13[83] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v13[84] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v13[85] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v13[86] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, w/2, w/2, -w/2);
    v13[87] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v13[88] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v13[89] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v13[90] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, w/2, w/2, -w/2);
    v13[91] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v13[92] = new Vertex(w/2, -w/2, w/2, w/2, w/2, w/2, -w/2, -w/2);
    v13[93] = new Vertex(w/2, -w/2, w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v13[94] = new Vertex(w/2, -w/2, w/2, w/2, w/2, w/2, w/2, -w/2);
    v13[95] = new Vertex(w/2, -w/2, w/2, w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v13[96] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v13[97] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v13[98] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v13[99] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v13[100] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v13[101] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v13[102] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2);
    v13[103] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v13[104] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v13[105] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v13[106] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2);
    v13[107] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v13[108] = new Vertex(w/2, w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2);
    v13[109] = new Vertex(w/2, w/2, -w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v13[110] = new Vertex(w/2, w/2, -w/2, w/2, w/2, w/2, w/2, -w/2);
    v13[111] = new Vertex(w/2, w/2, -w/2, w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v13[112] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v13[113] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v13[114] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v13[115] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v13[116] = new Vertex(w/2, w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v13[117] = new Vertex(w/2, w/2, w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v13[118] = new Vertex(w/2, w/2, w/2, -w/2, w/2, w/2, w/2, -w/2);
    v13[119] = new Vertex(w/2, w/2, w/2, -w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v13[120] = new Vertex(w/2, w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v13[121] = new Vertex(w/2, w/2, w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v13[122] = new Vertex(w/2, w/2, w/2, w/2, -w/2, w/2, w/2, -w/2);
    v13[123] = new Vertex(w/2, w/2, w/2, w/2, -w/2, w/2+Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    v13[124] = new Vertex(w/2, w/2, w/2, w/2, w/2, w/2, -w/2, -w/2);
    v13[125] = new Vertex(w/2, w/2, w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2, -w/2+Math.cos(theta)*w);
    v13[126] = new Vertex(w/2, w/2, w/2, w/2, w/2, w/2, w/2, -w/2);
    v13[127] = new Vertex(w/2, w/2, w/2, w/2, w/2, w/2+Math.sin(theta)*w, w/2, -w/2+Math.cos(theta)*w);
    faces.push(new Face(color13, v13[0], v13[1], v13[3], v13[2]));
    faces.push(new Face(color13, v13[0], v13[1], v13[5], v13[4]));
    faces.push(new Face(color13, v13[0], v13[1], v13[9], v13[8]));
    faces.push(new Face(color13, v13[0], v13[1], v13[17], v13[16]));
    faces.push(new Face(color13, v13[0], v13[1], v13[33], v13[32]));
    faces.push(new Face(color13, v13[0], v13[1], v13[65], v13[64]));
    faces.push(new Face(color13, v13[0], v13[2], v13[6], v13[4]));
    faces.push(new Face(color13, v13[0], v13[2], v13[10], v13[8]));
    faces.push(new Face(color13, v13[0], v13[2], v13[18], v13[16]));
    faces.push(new Face(color13, v13[0], v13[2], v13[34], v13[32]));
    faces.push(new Face(color13, v13[0], v13[2], v13[66], v13[64]));
    faces.push(new Face(color13, v13[0], v13[4], v13[12], v13[8]));
    faces.push(new Face(color13, v13[0], v13[4], v13[20], v13[16]));
    faces.push(new Face(color13, v13[0], v13[4], v13[36], v13[32]));
    faces.push(new Face(color13, v13[0], v13[4], v13[68], v13[64]));
    faces.push(new Face(color13, v13[0], v13[8], v13[24], v13[16]));
    faces.push(new Face(color13, v13[0], v13[8], v13[40], v13[32]));
    faces.push(new Face(color13, v13[0], v13[8], v13[72], v13[64]));
    faces.push(new Face(color13, v13[0], v13[16], v13[48], v13[32]));
    faces.push(new Face(color13, v13[0], v13[16], v13[80], v13[64]));
    faces.push(new Face(color13, v13[0], v13[32], v13[96], v13[64]));
    faces.push(new Face(color13, v13[1], v13[3], v13[7], v13[5]));
    faces.push(new Face(color13, v13[1], v13[3], v13[11], v13[9]));
    faces.push(new Face(color13, v13[1], v13[3], v13[19], v13[17]));
    faces.push(new Face(color13, v13[1], v13[3], v13[35], v13[33]));
    faces.push(new Face(color13, v13[1], v13[3], v13[67], v13[65]));
    faces.push(new Face(color13, v13[1], v13[5], v13[13], v13[9]));
    faces.push(new Face(color13, v13[1], v13[5], v13[21], v13[17]));
    faces.push(new Face(color13, v13[1], v13[5], v13[37], v13[33]));
    faces.push(new Face(color13, v13[1], v13[5], v13[69], v13[65]));
    faces.push(new Face(color13, v13[1], v13[9], v13[25], v13[17]));
    faces.push(new Face(color13, v13[1], v13[9], v13[41], v13[33]));
    faces.push(new Face(color13, v13[1], v13[9], v13[73], v13[65]));
    faces.push(new Face(color13, v13[1], v13[17], v13[49], v13[33]));
    faces.push(new Face(color13, v13[1], v13[17], v13[81], v13[65]));
    faces.push(new Face(color13, v13[1], v13[33], v13[97], v13[65]));
    faces.push(new Face(color13, v13[2], v13[3], v13[7], v13[6]));
    faces.push(new Face(color13, v13[2], v13[3], v13[11], v13[10]));
    faces.push(new Face(color13, v13[2], v13[3], v13[19], v13[18]));
    faces.push(new Face(color13, v13[2], v13[3], v13[35], v13[34]));
    faces.push(new Face(color13, v13[2], v13[3], v13[67], v13[66]));
    faces.push(new Face(color13, v13[2], v13[6], v13[14], v13[10]));
    faces.push(new Face(color13, v13[2], v13[6], v13[22], v13[18]));
    faces.push(new Face(color13, v13[2], v13[6], v13[38], v13[34]));
    faces.push(new Face(color13, v13[2], v13[6], v13[70], v13[66]));
    faces.push(new Face(color13, v13[2], v13[10], v13[26], v13[18]));
    faces.push(new Face(color13, v13[2], v13[10], v13[42], v13[34]));
    faces.push(new Face(color13, v13[2], v13[10], v13[74], v13[66]));
    faces.push(new Face(color13, v13[2], v13[18], v13[50], v13[34]));
    faces.push(new Face(color13, v13[2], v13[18], v13[82], v13[66]));
    faces.push(new Face(color13, v13[2], v13[34], v13[98], v13[66]));
    faces.push(new Face(color13, v13[3], v13[7], v13[15], v13[11]));
    faces.push(new Face(color13, v13[3], v13[7], v13[23], v13[19]));
    faces.push(new Face(color13, v13[3], v13[7], v13[39], v13[35]));
    faces.push(new Face(color13, v13[3], v13[7], v13[71], v13[67]));
    faces.push(new Face(color13, v13[3], v13[11], v13[27], v13[19]));
    faces.push(new Face(color13, v13[3], v13[11], v13[43], v13[35]));
    faces.push(new Face(color13, v13[3], v13[11], v13[75], v13[67]));
    faces.push(new Face(color13, v13[3], v13[19], v13[51], v13[35]));
    faces.push(new Face(color13, v13[3], v13[19], v13[83], v13[67]));
    faces.push(new Face(color13, v13[3], v13[35], v13[99], v13[67]));
    faces.push(new Face(color13, v13[4], v13[5], v13[7], v13[6]));
    faces.push(new Face(color13, v13[4], v13[5], v13[13], v13[12]));
    faces.push(new Face(color13, v13[4], v13[5], v13[21], v13[20]));
    faces.push(new Face(color13, v13[4], v13[5], v13[37], v13[36]));
    faces.push(new Face(color13, v13[4], v13[5], v13[69], v13[68]));
    faces.push(new Face(color13, v13[4], v13[6], v13[14], v13[12]));
    faces.push(new Face(color13, v13[4], v13[6], v13[22], v13[20]));
    faces.push(new Face(color13, v13[4], v13[6], v13[38], v13[36]));
    faces.push(new Face(color13, v13[4], v13[6], v13[70], v13[68]));
    faces.push(new Face(color13, v13[4], v13[12], v13[28], v13[20]));
    faces.push(new Face(color13, v13[4], v13[12], v13[44], v13[36]));
    faces.push(new Face(color13, v13[4], v13[12], v13[76], v13[68]));
    faces.push(new Face(color13, v13[4], v13[20], v13[52], v13[36]));
    faces.push(new Face(color13, v13[4], v13[20], v13[84], v13[68]));
    faces.push(new Face(color13, v13[4], v13[36], v13[100], v13[68]));
    faces.push(new Face(color13, v13[5], v13[7], v13[15], v13[13]));
    faces.push(new Face(color13, v13[5], v13[7], v13[23], v13[21]));
    faces.push(new Face(color13, v13[5], v13[7], v13[39], v13[37]));
    faces.push(new Face(color13, v13[5], v13[7], v13[71], v13[69]));
    faces.push(new Face(color13, v13[5], v13[13], v13[29], v13[21]));
    faces.push(new Face(color13, v13[5], v13[13], v13[45], v13[37]));
    faces.push(new Face(color13, v13[5], v13[13], v13[77], v13[69]));
    faces.push(new Face(color13, v13[5], v13[21], v13[53], v13[37]));
    faces.push(new Face(color13, v13[5], v13[21], v13[85], v13[69]));
    faces.push(new Face(color13, v13[5], v13[37], v13[101], v13[69]));
    faces.push(new Face(color13, v13[6], v13[7], v13[15], v13[14]));
    faces.push(new Face(color13, v13[6], v13[7], v13[23], v13[22]));
    faces.push(new Face(color13, v13[6], v13[7], v13[39], v13[38]));
    faces.push(new Face(color13, v13[6], v13[7], v13[71], v13[70]));
    faces.push(new Face(color13, v13[6], v13[14], v13[30], v13[22]));
    faces.push(new Face(color13, v13[6], v13[14], v13[46], v13[38]));
    faces.push(new Face(color13, v13[6], v13[14], v13[78], v13[70]));
    faces.push(new Face(color13, v13[6], v13[22], v13[54], v13[38]));
    faces.push(new Face(color13, v13[6], v13[22], v13[86], v13[70]));
    faces.push(new Face(color13, v13[6], v13[38], v13[102], v13[70]));
    faces.push(new Face(color13, v13[7], v13[15], v13[31], v13[23]));
    faces.push(new Face(color13, v13[7], v13[15], v13[47], v13[39]));
    faces.push(new Face(color13, v13[7], v13[15], v13[79], v13[71]));
    faces.push(new Face(color13, v13[7], v13[23], v13[55], v13[39]));
    faces.push(new Face(color13, v13[7], v13[23], v13[87], v13[71]));
    faces.push(new Face(color13, v13[7], v13[39], v13[103], v13[71]));
    faces.push(new Face(color13, v13[8], v13[9], v13[11], v13[10]));
    faces.push(new Face(color13, v13[8], v13[9], v13[13], v13[12]));
    faces.push(new Face(color13, v13[8], v13[9], v13[25], v13[24]));
    faces.push(new Face(color13, v13[8], v13[9], v13[41], v13[40]));
    faces.push(new Face(color13, v13[8], v13[9], v13[73], v13[72]));
    faces.push(new Face(color13, v13[8], v13[10], v13[14], v13[12]));
    faces.push(new Face(color13, v13[8], v13[10], v13[26], v13[24]));
    faces.push(new Face(color13, v13[8], v13[10], v13[42], v13[40]));
    faces.push(new Face(color13, v13[8], v13[10], v13[74], v13[72]));
    faces.push(new Face(color13, v13[8], v13[12], v13[28], v13[24]));
    faces.push(new Face(color13, v13[8], v13[12], v13[44], v13[40]));
    faces.push(new Face(color13, v13[8], v13[12], v13[76], v13[72]));
    faces.push(new Face(color13, v13[8], v13[24], v13[56], v13[40]));
    faces.push(new Face(color13, v13[8], v13[24], v13[88], v13[72]));
    faces.push(new Face(color13, v13[8], v13[40], v13[104], v13[72]));
    faces.push(new Face(color13, v13[9], v13[11], v13[15], v13[13]));
    faces.push(new Face(color13, v13[9], v13[11], v13[27], v13[25]));
    faces.push(new Face(color13, v13[9], v13[11], v13[43], v13[41]));
    faces.push(new Face(color13, v13[9], v13[11], v13[75], v13[73]));
    faces.push(new Face(color13, v13[9], v13[13], v13[29], v13[25]));
    faces.push(new Face(color13, v13[9], v13[13], v13[45], v13[41]));
    faces.push(new Face(color13, v13[9], v13[13], v13[77], v13[73]));
    faces.push(new Face(color13, v13[9], v13[25], v13[57], v13[41]));
    faces.push(new Face(color13, v13[9], v13[25], v13[89], v13[73]));
    faces.push(new Face(color13, v13[9], v13[41], v13[105], v13[73]));
    faces.push(new Face(color13, v13[10], v13[11], v13[15], v13[14]));
    faces.push(new Face(color13, v13[10], v13[11], v13[27], v13[26]));
    faces.push(new Face(color13, v13[10], v13[11], v13[43], v13[42]));
    faces.push(new Face(color13, v13[10], v13[11], v13[75], v13[74]));
    faces.push(new Face(color13, v13[10], v13[14], v13[30], v13[26]));
    faces.push(new Face(color13, v13[10], v13[14], v13[46], v13[42]));
    faces.push(new Face(color13, v13[10], v13[14], v13[78], v13[74]));
    faces.push(new Face(color13, v13[10], v13[26], v13[58], v13[42]));
    faces.push(new Face(color13, v13[10], v13[26], v13[90], v13[74]));
    faces.push(new Face(color13, v13[10], v13[42], v13[106], v13[74]));
    faces.push(new Face(color13, v13[11], v13[15], v13[31], v13[27]));
    faces.push(new Face(color13, v13[11], v13[15], v13[47], v13[43]));
    faces.push(new Face(color13, v13[11], v13[15], v13[79], v13[75]));
    faces.push(new Face(color13, v13[11], v13[27], v13[59], v13[43]));
    faces.push(new Face(color13, v13[11], v13[27], v13[91], v13[75]));
    faces.push(new Face(color13, v13[11], v13[43], v13[107], v13[75]));
    faces.push(new Face(color13, v13[12], v13[13], v13[15], v13[14]));
    faces.push(new Face(color13, v13[12], v13[13], v13[29], v13[28]));
    faces.push(new Face(color13, v13[12], v13[13], v13[45], v13[44]));
    faces.push(new Face(color13, v13[12], v13[13], v13[77], v13[76]));
    faces.push(new Face(color13, v13[12], v13[14], v13[30], v13[28]));
    faces.push(new Face(color13, v13[12], v13[14], v13[46], v13[44]));
    faces.push(new Face(color13, v13[12], v13[14], v13[78], v13[76]));
    faces.push(new Face(color13, v13[12], v13[28], v13[60], v13[44]));
    faces.push(new Face(color13, v13[12], v13[28], v13[92], v13[76]));
    faces.push(new Face(color13, v13[12], v13[44], v13[108], v13[76]));
    faces.push(new Face(color13, v13[13], v13[15], v13[31], v13[29]));
    faces.push(new Face(color13, v13[13], v13[15], v13[47], v13[45]));
    faces.push(new Face(color13, v13[13], v13[15], v13[79], v13[77]));
    faces.push(new Face(color13, v13[13], v13[29], v13[61], v13[45]));
    faces.push(new Face(color13, v13[13], v13[29], v13[93], v13[77]));
    faces.push(new Face(color13, v13[13], v13[45], v13[109], v13[77]));
    faces.push(new Face(color13, v13[14], v13[15], v13[31], v13[30]));
    faces.push(new Face(color13, v13[14], v13[15], v13[47], v13[46]));
    faces.push(new Face(color13, v13[14], v13[15], v13[79], v13[78]));
    faces.push(new Face(color13, v13[14], v13[30], v13[62], v13[46]));
    faces.push(new Face(color13, v13[14], v13[30], v13[94], v13[78]));
    faces.push(new Face(color13, v13[14], v13[46], v13[110], v13[78]));
    faces.push(new Face(color13, v13[15], v13[31], v13[63], v13[47]));
    faces.push(new Face(color13, v13[15], v13[31], v13[95], v13[79]));
    faces.push(new Face(color13, v13[15], v13[47], v13[111], v13[79]));
    faces.push(new Face(color13, v13[16], v13[17], v13[19], v13[18]));
    faces.push(new Face(color13, v13[16], v13[17], v13[21], v13[20]));
    faces.push(new Face(color13, v13[16], v13[17], v13[25], v13[24]));
    faces.push(new Face(color13, v13[16], v13[17], v13[49], v13[48]));
    faces.push(new Face(color13, v13[16], v13[17], v13[81], v13[80]));
    faces.push(new Face(color13, v13[16], v13[18], v13[22], v13[20]));
    faces.push(new Face(color13, v13[16], v13[18], v13[26], v13[24]));
    faces.push(new Face(color13, v13[16], v13[18], v13[50], v13[48]));
    faces.push(new Face(color13, v13[16], v13[18], v13[82], v13[80]));
    faces.push(new Face(color13, v13[16], v13[20], v13[28], v13[24]));
    faces.push(new Face(color13, v13[16], v13[20], v13[52], v13[48]));
    faces.push(new Face(color13, v13[16], v13[20], v13[84], v13[80]));
    faces.push(new Face(color13, v13[16], v13[24], v13[56], v13[48]));
    faces.push(new Face(color13, v13[16], v13[24], v13[88], v13[80]));
    faces.push(new Face(color13, v13[16], v13[48], v13[112], v13[80]));
    faces.push(new Face(color13, v13[17], v13[19], v13[23], v13[21]));
    faces.push(new Face(color13, v13[17], v13[19], v13[27], v13[25]));
    faces.push(new Face(color13, v13[17], v13[19], v13[51], v13[49]));
    faces.push(new Face(color13, v13[17], v13[19], v13[83], v13[81]));
    faces.push(new Face(color13, v13[17], v13[21], v13[29], v13[25]));
    faces.push(new Face(color13, v13[17], v13[21], v13[53], v13[49]));
    faces.push(new Face(color13, v13[17], v13[21], v13[85], v13[81]));
    faces.push(new Face(color13, v13[17], v13[25], v13[57], v13[49]));
    faces.push(new Face(color13, v13[17], v13[25], v13[89], v13[81]));
    faces.push(new Face(color13, v13[17], v13[49], v13[113], v13[81]));
    faces.push(new Face(color13, v13[18], v13[19], v13[23], v13[22]));
    faces.push(new Face(color13, v13[18], v13[19], v13[27], v13[26]));
    faces.push(new Face(color13, v13[18], v13[19], v13[51], v13[50]));
    faces.push(new Face(color13, v13[18], v13[19], v13[83], v13[82]));
    faces.push(new Face(color13, v13[18], v13[22], v13[30], v13[26]));
    faces.push(new Face(color13, v13[18], v13[22], v13[54], v13[50]));
    faces.push(new Face(color13, v13[18], v13[22], v13[86], v13[82]));
    faces.push(new Face(color13, v13[18], v13[26], v13[58], v13[50]));
    faces.push(new Face(color13, v13[18], v13[26], v13[90], v13[82]));
    faces.push(new Face(color13, v13[18], v13[50], v13[114], v13[82]));
    faces.push(new Face(color13, v13[19], v13[23], v13[31], v13[27]));
    faces.push(new Face(color13, v13[19], v13[23], v13[55], v13[51]));
    faces.push(new Face(color13, v13[19], v13[23], v13[87], v13[83]));
    faces.push(new Face(color13, v13[19], v13[27], v13[59], v13[51]));
    faces.push(new Face(color13, v13[19], v13[27], v13[91], v13[83]));
    faces.push(new Face(color13, v13[19], v13[51], v13[115], v13[83]));
    faces.push(new Face(color13, v13[20], v13[21], v13[23], v13[22]));
    faces.push(new Face(color13, v13[20], v13[21], v13[29], v13[28]));
    faces.push(new Face(color13, v13[20], v13[21], v13[53], v13[52]));
    faces.push(new Face(color13, v13[20], v13[21], v13[85], v13[84]));
    faces.push(new Face(color13, v13[20], v13[22], v13[30], v13[28]));
    faces.push(new Face(color13, v13[20], v13[22], v13[54], v13[52]));
    faces.push(new Face(color13, v13[20], v13[22], v13[86], v13[84]));
    faces.push(new Face(color13, v13[20], v13[28], v13[60], v13[52]));
    faces.push(new Face(color13, v13[20], v13[28], v13[92], v13[84]));
    faces.push(new Face(color13, v13[20], v13[52], v13[116], v13[84]));
    faces.push(new Face(color13, v13[21], v13[23], v13[31], v13[29]));
    faces.push(new Face(color13, v13[21], v13[23], v13[55], v13[53]));
    faces.push(new Face(color13, v13[21], v13[23], v13[87], v13[85]));
    faces.push(new Face(color13, v13[21], v13[29], v13[61], v13[53]));
    faces.push(new Face(color13, v13[21], v13[29], v13[93], v13[85]));
    faces.push(new Face(color13, v13[21], v13[53], v13[117], v13[85]));
    faces.push(new Face(color13, v13[22], v13[23], v13[31], v13[30]));
    faces.push(new Face(color13, v13[22], v13[23], v13[55], v13[54]));
    faces.push(new Face(color13, v13[22], v13[23], v13[87], v13[86]));
    faces.push(new Face(color13, v13[22], v13[30], v13[62], v13[54]));
    faces.push(new Face(color13, v13[22], v13[30], v13[94], v13[86]));
    faces.push(new Face(color13, v13[22], v13[54], v13[118], v13[86]));
    faces.push(new Face(color13, v13[23], v13[31], v13[63], v13[55]));
    faces.push(new Face(color13, v13[23], v13[31], v13[95], v13[87]));
    faces.push(new Face(color13, v13[23], v13[55], v13[119], v13[87]));
    faces.push(new Face(color13, v13[24], v13[25], v13[27], v13[26]));
    faces.push(new Face(color13, v13[24], v13[25], v13[29], v13[28]));
    faces.push(new Face(color13, v13[24], v13[25], v13[57], v13[56]));
    faces.push(new Face(color13, v13[24], v13[25], v13[89], v13[88]));
    faces.push(new Face(color13, v13[24], v13[26], v13[30], v13[28]));
    faces.push(new Face(color13, v13[24], v13[26], v13[58], v13[56]));
    faces.push(new Face(color13, v13[24], v13[26], v13[90], v13[88]));
    faces.push(new Face(color13, v13[24], v13[28], v13[60], v13[56]));
    faces.push(new Face(color13, v13[24], v13[28], v13[92], v13[88]));
    faces.push(new Face(color13, v13[24], v13[56], v13[120], v13[88]));
    faces.push(new Face(color13, v13[25], v13[27], v13[31], v13[29]));
    faces.push(new Face(color13, v13[25], v13[27], v13[59], v13[57]));
    faces.push(new Face(color13, v13[25], v13[27], v13[91], v13[89]));
    faces.push(new Face(color13, v13[25], v13[29], v13[61], v13[57]));
    faces.push(new Face(color13, v13[25], v13[29], v13[93], v13[89]));
    faces.push(new Face(color13, v13[25], v13[57], v13[121], v13[89]));
    faces.push(new Face(color13, v13[26], v13[27], v13[31], v13[30]));
    faces.push(new Face(color13, v13[26], v13[27], v13[59], v13[58]));
    faces.push(new Face(color13, v13[26], v13[27], v13[91], v13[90]));
    faces.push(new Face(color13, v13[26], v13[30], v13[62], v13[58]));
    faces.push(new Face(color13, v13[26], v13[30], v13[94], v13[90]));
    faces.push(new Face(color13, v13[26], v13[58], v13[122], v13[90]));
    faces.push(new Face(color13, v13[27], v13[31], v13[63], v13[59]));
    faces.push(new Face(color13, v13[27], v13[31], v13[95], v13[91]));
    faces.push(new Face(color13, v13[27], v13[59], v13[123], v13[91]));
    faces.push(new Face(color13, v13[28], v13[29], v13[31], v13[30]));
    faces.push(new Face(color13, v13[28], v13[29], v13[61], v13[60]));
    faces.push(new Face(color13, v13[28], v13[29], v13[93], v13[92]));
    faces.push(new Face(color13, v13[28], v13[30], v13[62], v13[60]));
    faces.push(new Face(color13, v13[28], v13[30], v13[94], v13[92]));
    faces.push(new Face(color13, v13[28], v13[60], v13[124], v13[92]));
    faces.push(new Face(color13, v13[29], v13[31], v13[63], v13[61]));
    faces.push(new Face(color13, v13[29], v13[31], v13[95], v13[93]));
    faces.push(new Face(color13, v13[29], v13[61], v13[125], v13[93]));
    faces.push(new Face(color13, v13[30], v13[31], v13[63], v13[62]));
    faces.push(new Face(color13, v13[30], v13[31], v13[95], v13[94]));
    faces.push(new Face(color13, v13[30], v13[62], v13[126], v13[94]));
    faces.push(new Face(color13, v13[31], v13[63], v13[127], v13[95]));
    faces.push(new Face(color13, v13[32], v13[33], v13[35], v13[34]));
    faces.push(new Face(color13, v13[32], v13[33], v13[37], v13[36]));
    faces.push(new Face(color13, v13[32], v13[33], v13[41], v13[40]));
    faces.push(new Face(color13, v13[32], v13[33], v13[49], v13[48]));
    faces.push(new Face(color13, v13[32], v13[33], v13[97], v13[96]));
    faces.push(new Face(color13, v13[32], v13[34], v13[38], v13[36]));
    faces.push(new Face(color13, v13[32], v13[34], v13[42], v13[40]));
    faces.push(new Face(color13, v13[32], v13[34], v13[50], v13[48]));
    faces.push(new Face(color13, v13[32], v13[34], v13[98], v13[96]));
    faces.push(new Face(color13, v13[32], v13[36], v13[44], v13[40]));
    faces.push(new Face(color13, v13[32], v13[36], v13[52], v13[48]));
    faces.push(new Face(color13, v13[32], v13[36], v13[100], v13[96]));
    faces.push(new Face(color13, v13[32], v13[40], v13[56], v13[48]));
    faces.push(new Face(color13, v13[32], v13[40], v13[104], v13[96]));
    faces.push(new Face(color13, v13[32], v13[48], v13[112], v13[96]));
    faces.push(new Face(color13, v13[33], v13[35], v13[39], v13[37]));
    faces.push(new Face(color13, v13[33], v13[35], v13[43], v13[41]));
    faces.push(new Face(color13, v13[33], v13[35], v13[51], v13[49]));
    faces.push(new Face(color13, v13[33], v13[35], v13[99], v13[97]));
    faces.push(new Face(color13, v13[33], v13[37], v13[45], v13[41]));
    faces.push(new Face(color13, v13[33], v13[37], v13[53], v13[49]));
    faces.push(new Face(color13, v13[33], v13[37], v13[101], v13[97]));
    faces.push(new Face(color13, v13[33], v13[41], v13[57], v13[49]));
    faces.push(new Face(color13, v13[33], v13[41], v13[105], v13[97]));
    faces.push(new Face(color13, v13[33], v13[49], v13[113], v13[97]));
    faces.push(new Face(color13, v13[34], v13[35], v13[39], v13[38]));
    faces.push(new Face(color13, v13[34], v13[35], v13[43], v13[42]));
    faces.push(new Face(color13, v13[34], v13[35], v13[51], v13[50]));
    faces.push(new Face(color13, v13[34], v13[35], v13[99], v13[98]));
    faces.push(new Face(color13, v13[34], v13[38], v13[46], v13[42]));
    faces.push(new Face(color13, v13[34], v13[38], v13[54], v13[50]));
    faces.push(new Face(color13, v13[34], v13[38], v13[102], v13[98]));
    faces.push(new Face(color13, v13[34], v13[42], v13[58], v13[50]));
    faces.push(new Face(color13, v13[34], v13[42], v13[106], v13[98]));
    faces.push(new Face(color13, v13[34], v13[50], v13[114], v13[98]));
    faces.push(new Face(color13, v13[35], v13[39], v13[47], v13[43]));
    faces.push(new Face(color13, v13[35], v13[39], v13[55], v13[51]));
    faces.push(new Face(color13, v13[35], v13[39], v13[103], v13[99]));
    faces.push(new Face(color13, v13[35], v13[43], v13[59], v13[51]));
    faces.push(new Face(color13, v13[35], v13[43], v13[107], v13[99]));
    faces.push(new Face(color13, v13[35], v13[51], v13[115], v13[99]));
    faces.push(new Face(color13, v13[36], v13[37], v13[39], v13[38]));
    faces.push(new Face(color13, v13[36], v13[37], v13[45], v13[44]));
    faces.push(new Face(color13, v13[36], v13[37], v13[53], v13[52]));
    faces.push(new Face(color13, v13[36], v13[37], v13[101], v13[100]));
    faces.push(new Face(color13, v13[36], v13[38], v13[46], v13[44]));
    faces.push(new Face(color13, v13[36], v13[38], v13[54], v13[52]));
    faces.push(new Face(color13, v13[36], v13[38], v13[102], v13[100]));
    faces.push(new Face(color13, v13[36], v13[44], v13[60], v13[52]));
    faces.push(new Face(color13, v13[36], v13[44], v13[108], v13[100]));
    faces.push(new Face(color13, v13[36], v13[52], v13[116], v13[100]));
    faces.push(new Face(color13, v13[37], v13[39], v13[47], v13[45]));
    faces.push(new Face(color13, v13[37], v13[39], v13[55], v13[53]));
    faces.push(new Face(color13, v13[37], v13[39], v13[103], v13[101]));
    faces.push(new Face(color13, v13[37], v13[45], v13[61], v13[53]));
    faces.push(new Face(color13, v13[37], v13[45], v13[109], v13[101]));
    faces.push(new Face(color13, v13[37], v13[53], v13[117], v13[101]));
    faces.push(new Face(color13, v13[38], v13[39], v13[47], v13[46]));
    faces.push(new Face(color13, v13[38], v13[39], v13[55], v13[54]));
    faces.push(new Face(color13, v13[38], v13[39], v13[103], v13[102]));
    faces.push(new Face(color13, v13[38], v13[46], v13[62], v13[54]));
    faces.push(new Face(color13, v13[38], v13[46], v13[110], v13[102]));
    faces.push(new Face(color13, v13[38], v13[54], v13[118], v13[102]));
    faces.push(new Face(color13, v13[39], v13[47], v13[63], v13[55]));
    faces.push(new Face(color13, v13[39], v13[47], v13[111], v13[103]));
    faces.push(new Face(color13, v13[39], v13[55], v13[119], v13[103]));
    faces.push(new Face(color13, v13[40], v13[41], v13[43], v13[42]));
    faces.push(new Face(color13, v13[40], v13[41], v13[45], v13[44]));
    faces.push(new Face(color13, v13[40], v13[41], v13[57], v13[56]));
    faces.push(new Face(color13, v13[40], v13[41], v13[105], v13[104]));
    faces.push(new Face(color13, v13[40], v13[42], v13[46], v13[44]));
    faces.push(new Face(color13, v13[40], v13[42], v13[58], v13[56]));
    faces.push(new Face(color13, v13[40], v13[42], v13[106], v13[104]));
    faces.push(new Face(color13, v13[40], v13[44], v13[60], v13[56]));
    faces.push(new Face(color13, v13[40], v13[44], v13[108], v13[104]));
    faces.push(new Face(color13, v13[40], v13[56], v13[120], v13[104]));
    faces.push(new Face(color13, v13[41], v13[43], v13[47], v13[45]));
    faces.push(new Face(color13, v13[41], v13[43], v13[59], v13[57]));
    faces.push(new Face(color13, v13[41], v13[43], v13[107], v13[105]));
    faces.push(new Face(color13, v13[41], v13[45], v13[61], v13[57]));
    faces.push(new Face(color13, v13[41], v13[45], v13[109], v13[105]));
    faces.push(new Face(color13, v13[41], v13[57], v13[121], v13[105]));
    faces.push(new Face(color13, v13[42], v13[43], v13[47], v13[46]));
    faces.push(new Face(color13, v13[42], v13[43], v13[59], v13[58]));
    faces.push(new Face(color13, v13[42], v13[43], v13[107], v13[106]));
    faces.push(new Face(color13, v13[42], v13[46], v13[62], v13[58]));
    faces.push(new Face(color13, v13[42], v13[46], v13[110], v13[106]));
    faces.push(new Face(color13, v13[42], v13[58], v13[122], v13[106]));
    faces.push(new Face(color13, v13[43], v13[47], v13[63], v13[59]));
    faces.push(new Face(color13, v13[43], v13[47], v13[111], v13[107]));
    faces.push(new Face(color13, v13[43], v13[59], v13[123], v13[107]));
    faces.push(new Face(color13, v13[44], v13[45], v13[47], v13[46]));
    faces.push(new Face(color13, v13[44], v13[45], v13[61], v13[60]));
    faces.push(new Face(color13, v13[44], v13[45], v13[109], v13[108]));
    faces.push(new Face(color13, v13[44], v13[46], v13[62], v13[60]));
    faces.push(new Face(color13, v13[44], v13[46], v13[110], v13[108]));
    faces.push(new Face(color13, v13[44], v13[60], v13[124], v13[108]));
    faces.push(new Face(color13, v13[45], v13[47], v13[63], v13[61]));
    faces.push(new Face(color13, v13[45], v13[47], v13[111], v13[109]));
    faces.push(new Face(color13, v13[45], v13[61], v13[125], v13[109]));
    faces.push(new Face(color13, v13[46], v13[47], v13[63], v13[62]));
    faces.push(new Face(color13, v13[46], v13[47], v13[111], v13[110]));
    faces.push(new Face(color13, v13[46], v13[62], v13[126], v13[110]));
    faces.push(new Face(color13, v13[47], v13[63], v13[127], v13[111]));
    faces.push(new Face(color13, v13[48], v13[49], v13[51], v13[50]));
    faces.push(new Face(color13, v13[48], v13[49], v13[53], v13[52]));
    faces.push(new Face(color13, v13[48], v13[49], v13[57], v13[56]));
    faces.push(new Face(color13, v13[48], v13[49], v13[113], v13[112]));
    faces.push(new Face(color13, v13[48], v13[50], v13[54], v13[52]));
    faces.push(new Face(color13, v13[48], v13[50], v13[58], v13[56]));
    faces.push(new Face(color13, v13[48], v13[50], v13[114], v13[112]));
    faces.push(new Face(color13, v13[48], v13[52], v13[60], v13[56]));
    faces.push(new Face(color13, v13[48], v13[52], v13[116], v13[112]));
    faces.push(new Face(color13, v13[48], v13[56], v13[120], v13[112]));
    faces.push(new Face(color13, v13[49], v13[51], v13[55], v13[53]));
    faces.push(new Face(color13, v13[49], v13[51], v13[59], v13[57]));
    faces.push(new Face(color13, v13[49], v13[51], v13[115], v13[113]));
    faces.push(new Face(color13, v13[49], v13[53], v13[61], v13[57]));
    faces.push(new Face(color13, v13[49], v13[53], v13[117], v13[113]));
    faces.push(new Face(color13, v13[49], v13[57], v13[121], v13[113]));
    faces.push(new Face(color13, v13[50], v13[51], v13[55], v13[54]));
    faces.push(new Face(color13, v13[50], v13[51], v13[59], v13[58]));
    faces.push(new Face(color13, v13[50], v13[51], v13[115], v13[114]));
    faces.push(new Face(color13, v13[50], v13[54], v13[62], v13[58]));
    faces.push(new Face(color13, v13[50], v13[54], v13[118], v13[114]));
    faces.push(new Face(color13, v13[50], v13[58], v13[122], v13[114]));
    faces.push(new Face(color13, v13[51], v13[55], v13[63], v13[59]));
    faces.push(new Face(color13, v13[51], v13[55], v13[119], v13[115]));
    faces.push(new Face(color13, v13[51], v13[59], v13[123], v13[115]));
    faces.push(new Face(color13, v13[52], v13[53], v13[55], v13[54]));
    faces.push(new Face(color13, v13[52], v13[53], v13[61], v13[60]));
    faces.push(new Face(color13, v13[52], v13[53], v13[117], v13[116]));
    faces.push(new Face(color13, v13[52], v13[54], v13[62], v13[60]));
    faces.push(new Face(color13, v13[52], v13[54], v13[118], v13[116]));
    faces.push(new Face(color13, v13[52], v13[60], v13[124], v13[116]));
    faces.push(new Face(color13, v13[53], v13[55], v13[63], v13[61]));
    faces.push(new Face(color13, v13[53], v13[55], v13[119], v13[117]));
    faces.push(new Face(color13, v13[53], v13[61], v13[125], v13[117]));
    faces.push(new Face(color13, v13[54], v13[55], v13[63], v13[62]));
    faces.push(new Face(color13, v13[54], v13[55], v13[119], v13[118]));
    faces.push(new Face(color13, v13[54], v13[62], v13[126], v13[118]));
    faces.push(new Face(color13, v13[55], v13[63], v13[127], v13[119]));
    faces.push(new Face(color13, v13[56], v13[57], v13[59], v13[58]));
    faces.push(new Face(color13, v13[56], v13[57], v13[61], v13[60]));
    faces.push(new Face(color13, v13[56], v13[57], v13[121], v13[120]));
    faces.push(new Face(color13, v13[56], v13[58], v13[62], v13[60]));
    faces.push(new Face(color13, v13[56], v13[58], v13[122], v13[120]));
    faces.push(new Face(color13, v13[56], v13[60], v13[124], v13[120]));
    faces.push(new Face(color13, v13[57], v13[59], v13[63], v13[61]));
    faces.push(new Face(color13, v13[57], v13[59], v13[123], v13[121]));
    faces.push(new Face(color13, v13[57], v13[61], v13[125], v13[121]));
    faces.push(new Face(color13, v13[58], v13[59], v13[63], v13[62]));
    faces.push(new Face(color13, v13[58], v13[59], v13[123], v13[122]));
    faces.push(new Face(color13, v13[58], v13[62], v13[126], v13[122]));
    faces.push(new Face(color13, v13[59], v13[63], v13[127], v13[123]));
    faces.push(new Face(color13, v13[60], v13[61], v13[63], v13[62]));
    faces.push(new Face(color13, v13[60], v13[61], v13[125], v13[124]));
    faces.push(new Face(color13, v13[60], v13[62], v13[126], v13[124]));
    faces.push(new Face(color13, v13[61], v13[63], v13[127], v13[125]));
    faces.push(new Face(color13, v13[62], v13[63], v13[127], v13[126]));
    faces.push(new Face(color13, v13[64], v13[65], v13[67], v13[66]));
    faces.push(new Face(color13, v13[64], v13[65], v13[69], v13[68]));
    faces.push(new Face(color13, v13[64], v13[65], v13[73], v13[72]));
    faces.push(new Face(color13, v13[64], v13[65], v13[81], v13[80]));
    faces.push(new Face(color13, v13[64], v13[65], v13[97], v13[96]));
    faces.push(new Face(color13, v13[64], v13[66], v13[70], v13[68]));
    faces.push(new Face(color13, v13[64], v13[66], v13[74], v13[72]));
    faces.push(new Face(color13, v13[64], v13[66], v13[82], v13[80]));
    faces.push(new Face(color13, v13[64], v13[66], v13[98], v13[96]));
    faces.push(new Face(color13, v13[64], v13[68], v13[76], v13[72]));
    faces.push(new Face(color13, v13[64], v13[68], v13[84], v13[80]));
    faces.push(new Face(color13, v13[64], v13[68], v13[100], v13[96]));
    faces.push(new Face(color13, v13[64], v13[72], v13[88], v13[80]));
    faces.push(new Face(color13, v13[64], v13[72], v13[104], v13[96]));
    faces.push(new Face(color13, v13[64], v13[80], v13[112], v13[96]));
    faces.push(new Face(color13, v13[65], v13[67], v13[71], v13[69]));
    faces.push(new Face(color13, v13[65], v13[67], v13[75], v13[73]));
    faces.push(new Face(color13, v13[65], v13[67], v13[83], v13[81]));
    faces.push(new Face(color13, v13[65], v13[67], v13[99], v13[97]));
    faces.push(new Face(color13, v13[65], v13[69], v13[77], v13[73]));
    faces.push(new Face(color13, v13[65], v13[69], v13[85], v13[81]));
    faces.push(new Face(color13, v13[65], v13[69], v13[101], v13[97]));
    faces.push(new Face(color13, v13[65], v13[73], v13[89], v13[81]));
    faces.push(new Face(color13, v13[65], v13[73], v13[105], v13[97]));
    faces.push(new Face(color13, v13[65], v13[81], v13[113], v13[97]));
    faces.push(new Face(color13, v13[66], v13[67], v13[71], v13[70]));
    faces.push(new Face(color13, v13[66], v13[67], v13[75], v13[74]));
    faces.push(new Face(color13, v13[66], v13[67], v13[83], v13[82]));
    faces.push(new Face(color13, v13[66], v13[67], v13[99], v13[98]));
    faces.push(new Face(color13, v13[66], v13[70], v13[78], v13[74]));
    faces.push(new Face(color13, v13[66], v13[70], v13[86], v13[82]));
    faces.push(new Face(color13, v13[66], v13[70], v13[102], v13[98]));
    faces.push(new Face(color13, v13[66], v13[74], v13[90], v13[82]));
    faces.push(new Face(color13, v13[66], v13[74], v13[106], v13[98]));
    faces.push(new Face(color13, v13[66], v13[82], v13[114], v13[98]));
    faces.push(new Face(color13, v13[67], v13[71], v13[79], v13[75]));
    faces.push(new Face(color13, v13[67], v13[71], v13[87], v13[83]));
    faces.push(new Face(color13, v13[67], v13[71], v13[103], v13[99]));
    faces.push(new Face(color13, v13[67], v13[75], v13[91], v13[83]));
    faces.push(new Face(color13, v13[67], v13[75], v13[107], v13[99]));
    faces.push(new Face(color13, v13[67], v13[83], v13[115], v13[99]));
    faces.push(new Face(color13, v13[68], v13[69], v13[71], v13[70]));
    faces.push(new Face(color13, v13[68], v13[69], v13[77], v13[76]));
    faces.push(new Face(color13, v13[68], v13[69], v13[85], v13[84]));
    faces.push(new Face(color13, v13[68], v13[69], v13[101], v13[100]));
    faces.push(new Face(color13, v13[68], v13[70], v13[78], v13[76]));
    faces.push(new Face(color13, v13[68], v13[70], v13[86], v13[84]));
    faces.push(new Face(color13, v13[68], v13[70], v13[102], v13[100]));
    faces.push(new Face(color13, v13[68], v13[76], v13[92], v13[84]));
    faces.push(new Face(color13, v13[68], v13[76], v13[108], v13[100]));
    faces.push(new Face(color13, v13[68], v13[84], v13[116], v13[100]));
    faces.push(new Face(color13, v13[69], v13[71], v13[79], v13[77]));
    faces.push(new Face(color13, v13[69], v13[71], v13[87], v13[85]));
    faces.push(new Face(color13, v13[69], v13[71], v13[103], v13[101]));
    faces.push(new Face(color13, v13[69], v13[77], v13[93], v13[85]));
    faces.push(new Face(color13, v13[69], v13[77], v13[109], v13[101]));
    faces.push(new Face(color13, v13[69], v13[85], v13[117], v13[101]));
    faces.push(new Face(color13, v13[70], v13[71], v13[79], v13[78]));
    faces.push(new Face(color13, v13[70], v13[71], v13[87], v13[86]));
    faces.push(new Face(color13, v13[70], v13[71], v13[103], v13[102]));
    faces.push(new Face(color13, v13[70], v13[78], v13[94], v13[86]));
    faces.push(new Face(color13, v13[70], v13[78], v13[110], v13[102]));
    faces.push(new Face(color13, v13[70], v13[86], v13[118], v13[102]));
    faces.push(new Face(color13, v13[71], v13[79], v13[95], v13[87]));
    faces.push(new Face(color13, v13[71], v13[79], v13[111], v13[103]));
    faces.push(new Face(color13, v13[71], v13[87], v13[119], v13[103]));
    faces.push(new Face(color13, v13[72], v13[73], v13[75], v13[74]));
    faces.push(new Face(color13, v13[72], v13[73], v13[77], v13[76]));
    faces.push(new Face(color13, v13[72], v13[73], v13[89], v13[88]));
    faces.push(new Face(color13, v13[72], v13[73], v13[105], v13[104]));
    faces.push(new Face(color13, v13[72], v13[74], v13[78], v13[76]));
    faces.push(new Face(color13, v13[72], v13[74], v13[90], v13[88]));
    faces.push(new Face(color13, v13[72], v13[74], v13[106], v13[104]));
    faces.push(new Face(color13, v13[72], v13[76], v13[92], v13[88]));
    faces.push(new Face(color13, v13[72], v13[76], v13[108], v13[104]));
    faces.push(new Face(color13, v13[72], v13[88], v13[120], v13[104]));
    faces.push(new Face(color13, v13[73], v13[75], v13[79], v13[77]));
    faces.push(new Face(color13, v13[73], v13[75], v13[91], v13[89]));
    faces.push(new Face(color13, v13[73], v13[75], v13[107], v13[105]));
    faces.push(new Face(color13, v13[73], v13[77], v13[93], v13[89]));
    faces.push(new Face(color13, v13[73], v13[77], v13[109], v13[105]));
    faces.push(new Face(color13, v13[73], v13[89], v13[121], v13[105]));
    faces.push(new Face(color13, v13[74], v13[75], v13[79], v13[78]));
    faces.push(new Face(color13, v13[74], v13[75], v13[91], v13[90]));
    faces.push(new Face(color13, v13[74], v13[75], v13[107], v13[106]));
    faces.push(new Face(color13, v13[74], v13[78], v13[94], v13[90]));
    faces.push(new Face(color13, v13[74], v13[78], v13[110], v13[106]));
    faces.push(new Face(color13, v13[74], v13[90], v13[122], v13[106]));
    faces.push(new Face(color13, v13[75], v13[79], v13[95], v13[91]));
    faces.push(new Face(color13, v13[75], v13[79], v13[111], v13[107]));
    faces.push(new Face(color13, v13[75], v13[91], v13[123], v13[107]));
    faces.push(new Face(color13, v13[76], v13[77], v13[79], v13[78]));
    faces.push(new Face(color13, v13[76], v13[77], v13[93], v13[92]));
    faces.push(new Face(color13, v13[76], v13[77], v13[109], v13[108]));
    faces.push(new Face(color13, v13[76], v13[78], v13[94], v13[92]));
    faces.push(new Face(color13, v13[76], v13[78], v13[110], v13[108]));
    faces.push(new Face(color13, v13[76], v13[92], v13[124], v13[108]));
    faces.push(new Face(color13, v13[77], v13[79], v13[95], v13[93]));
    faces.push(new Face(color13, v13[77], v13[79], v13[111], v13[109]));
    faces.push(new Face(color13, v13[77], v13[93], v13[125], v13[109]));
    faces.push(new Face(color13, v13[78], v13[79], v13[95], v13[94]));
    faces.push(new Face(color13, v13[78], v13[79], v13[111], v13[110]));
    faces.push(new Face(color13, v13[78], v13[94], v13[126], v13[110]));
    faces.push(new Face(color13, v13[79], v13[95], v13[127], v13[111]));
    faces.push(new Face(color13, v13[80], v13[81], v13[83], v13[82]));
    faces.push(new Face(color13, v13[80], v13[81], v13[85], v13[84]));
    faces.push(new Face(color13, v13[80], v13[81], v13[89], v13[88]));
    faces.push(new Face(color13, v13[80], v13[81], v13[113], v13[112]));
    faces.push(new Face(color13, v13[80], v13[82], v13[86], v13[84]));
    faces.push(new Face(color13, v13[80], v13[82], v13[90], v13[88]));
    faces.push(new Face(color13, v13[80], v13[82], v13[114], v13[112]));
    faces.push(new Face(color13, v13[80], v13[84], v13[92], v13[88]));
    faces.push(new Face(color13, v13[80], v13[84], v13[116], v13[112]));
    faces.push(new Face(color13, v13[80], v13[88], v13[120], v13[112]));
    faces.push(new Face(color13, v13[81], v13[83], v13[87], v13[85]));
    faces.push(new Face(color13, v13[81], v13[83], v13[91], v13[89]));
    faces.push(new Face(color13, v13[81], v13[83], v13[115], v13[113]));
    faces.push(new Face(color13, v13[81], v13[85], v13[93], v13[89]));
    faces.push(new Face(color13, v13[81], v13[85], v13[117], v13[113]));
    faces.push(new Face(color13, v13[81], v13[89], v13[121], v13[113]));
    faces.push(new Face(color13, v13[82], v13[83], v13[87], v13[86]));
    faces.push(new Face(color13, v13[82], v13[83], v13[91], v13[90]));
    faces.push(new Face(color13, v13[82], v13[83], v13[115], v13[114]));
    faces.push(new Face(color13, v13[82], v13[86], v13[94], v13[90]));
    faces.push(new Face(color13, v13[82], v13[86], v13[118], v13[114]));
    faces.push(new Face(color13, v13[82], v13[90], v13[122], v13[114]));
    faces.push(new Face(color13, v13[83], v13[87], v13[95], v13[91]));
    faces.push(new Face(color13, v13[83], v13[87], v13[119], v13[115]));
    faces.push(new Face(color13, v13[83], v13[91], v13[123], v13[115]));
    faces.push(new Face(color13, v13[84], v13[85], v13[87], v13[86]));
    faces.push(new Face(color13, v13[84], v13[85], v13[93], v13[92]));
    faces.push(new Face(color13, v13[84], v13[85], v13[117], v13[116]));
    faces.push(new Face(color13, v13[84], v13[86], v13[94], v13[92]));
    faces.push(new Face(color13, v13[84], v13[86], v13[118], v13[116]));
    faces.push(new Face(color13, v13[84], v13[92], v13[124], v13[116]));
    faces.push(new Face(color13, v13[85], v13[87], v13[95], v13[93]));
    faces.push(new Face(color13, v13[85], v13[87], v13[119], v13[117]));
    faces.push(new Face(color13, v13[85], v13[93], v13[125], v13[117]));
    faces.push(new Face(color13, v13[86], v13[87], v13[95], v13[94]));
    faces.push(new Face(color13, v13[86], v13[87], v13[119], v13[118]));
    faces.push(new Face(color13, v13[86], v13[94], v13[126], v13[118]));
    faces.push(new Face(color13, v13[87], v13[95], v13[127], v13[119]));
    faces.push(new Face(color13, v13[88], v13[89], v13[91], v13[90]));
    faces.push(new Face(color13, v13[88], v13[89], v13[93], v13[92]));
    faces.push(new Face(color13, v13[88], v13[89], v13[121], v13[120]));
    faces.push(new Face(color13, v13[88], v13[90], v13[94], v13[92]));
    faces.push(new Face(color13, v13[88], v13[90], v13[122], v13[120]));
    faces.push(new Face(color13, v13[88], v13[92], v13[124], v13[120]));
    faces.push(new Face(color13, v13[89], v13[91], v13[95], v13[93]));
    faces.push(new Face(color13, v13[89], v13[91], v13[123], v13[121]));
    faces.push(new Face(color13, v13[89], v13[93], v13[125], v13[121]));
    faces.push(new Face(color13, v13[90], v13[91], v13[95], v13[94]));
    faces.push(new Face(color13, v13[90], v13[91], v13[123], v13[122]));
    faces.push(new Face(color13, v13[90], v13[94], v13[126], v13[122]));
    faces.push(new Face(color13, v13[91], v13[95], v13[127], v13[123]));
    faces.push(new Face(color13, v13[92], v13[93], v13[95], v13[94]));
    faces.push(new Face(color13, v13[92], v13[93], v13[125], v13[124]));
    faces.push(new Face(color13, v13[92], v13[94], v13[126], v13[124]));
    faces.push(new Face(color13, v13[93], v13[95], v13[127], v13[125]));
    faces.push(new Face(color13, v13[94], v13[95], v13[127], v13[126]));
    faces.push(new Face(color13, v13[96], v13[97], v13[99], v13[98]));
    faces.push(new Face(color13, v13[96], v13[97], v13[101], v13[100]));
    faces.push(new Face(color13, v13[96], v13[97], v13[105], v13[104]));
    faces.push(new Face(color13, v13[96], v13[97], v13[113], v13[112]));
    faces.push(new Face(color13, v13[96], v13[98], v13[102], v13[100]));
    faces.push(new Face(color13, v13[96], v13[98], v13[106], v13[104]));
    faces.push(new Face(color13, v13[96], v13[98], v13[114], v13[112]));
    faces.push(new Face(color13, v13[96], v13[100], v13[108], v13[104]));
    faces.push(new Face(color13, v13[96], v13[100], v13[116], v13[112]));
    faces.push(new Face(color13, v13[96], v13[104], v13[120], v13[112]));
    faces.push(new Face(color13, v13[97], v13[99], v13[103], v13[101]));
    faces.push(new Face(color13, v13[97], v13[99], v13[107], v13[105]));
    faces.push(new Face(color13, v13[97], v13[99], v13[115], v13[113]));
    faces.push(new Face(color13, v13[97], v13[101], v13[109], v13[105]));
    faces.push(new Face(color13, v13[97], v13[101], v13[117], v13[113]));
    faces.push(new Face(color13, v13[97], v13[105], v13[121], v13[113]));
    faces.push(new Face(color13, v13[98], v13[99], v13[103], v13[102]));
    faces.push(new Face(color13, v13[98], v13[99], v13[107], v13[106]));
    faces.push(new Face(color13, v13[98], v13[99], v13[115], v13[114]));
    faces.push(new Face(color13, v13[98], v13[102], v13[110], v13[106]));
    faces.push(new Face(color13, v13[98], v13[102], v13[118], v13[114]));
    faces.push(new Face(color13, v13[98], v13[106], v13[122], v13[114]));
    faces.push(new Face(color13, v13[99], v13[103], v13[111], v13[107]));
    faces.push(new Face(color13, v13[99], v13[103], v13[119], v13[115]));
    faces.push(new Face(color13, v13[99], v13[107], v13[123], v13[115]));
    faces.push(new Face(color13, v13[100], v13[101], v13[103], v13[102]));
    faces.push(new Face(color13, v13[100], v13[101], v13[109], v13[108]));
    faces.push(new Face(color13, v13[100], v13[101], v13[117], v13[116]));
    faces.push(new Face(color13, v13[100], v13[102], v13[110], v13[108]));
    faces.push(new Face(color13, v13[100], v13[102], v13[118], v13[116]));
    faces.push(new Face(color13, v13[100], v13[108], v13[124], v13[116]));
    faces.push(new Face(color13, v13[101], v13[103], v13[111], v13[109]));
    faces.push(new Face(color13, v13[101], v13[103], v13[119], v13[117]));
    faces.push(new Face(color13, v13[101], v13[109], v13[125], v13[117]));
    faces.push(new Face(color13, v13[102], v13[103], v13[111], v13[110]));
    faces.push(new Face(color13, v13[102], v13[103], v13[119], v13[118]));
    faces.push(new Face(color13, v13[102], v13[110], v13[126], v13[118]));
    faces.push(new Face(color13, v13[103], v13[111], v13[127], v13[119]));
    faces.push(new Face(color13, v13[104], v13[105], v13[107], v13[106]));
    faces.push(new Face(color13, v13[104], v13[105], v13[109], v13[108]));
    faces.push(new Face(color13, v13[104], v13[105], v13[121], v13[120]));
    faces.push(new Face(color13, v13[104], v13[106], v13[110], v13[108]));
    faces.push(new Face(color13, v13[104], v13[106], v13[122], v13[120]));
    faces.push(new Face(color13, v13[104], v13[108], v13[124], v13[120]));
    faces.push(new Face(color13, v13[105], v13[107], v13[111], v13[109]));
    faces.push(new Face(color13, v13[105], v13[107], v13[123], v13[121]));
    faces.push(new Face(color13, v13[105], v13[109], v13[125], v13[121]));
    faces.push(new Face(color13, v13[106], v13[107], v13[111], v13[110]));
    faces.push(new Face(color13, v13[106], v13[107], v13[123], v13[122]));
    faces.push(new Face(color13, v13[106], v13[110], v13[126], v13[122]));
    faces.push(new Face(color13, v13[107], v13[111], v13[127], v13[123]));
    faces.push(new Face(color13, v13[108], v13[109], v13[111], v13[110]));
    faces.push(new Face(color13, v13[108], v13[109], v13[125], v13[124]));
    faces.push(new Face(color13, v13[108], v13[110], v13[126], v13[124]));
    faces.push(new Face(color13, v13[109], v13[111], v13[127], v13[125]));
    faces.push(new Face(color13, v13[110], v13[111], v13[127], v13[126]));
    faces.push(new Face(color13, v13[112], v13[113], v13[115], v13[114]));
    faces.push(new Face(color13, v13[112], v13[113], v13[117], v13[116]));
    faces.push(new Face(color13, v13[112], v13[113], v13[121], v13[120]));
    faces.push(new Face(color13, v13[112], v13[114], v13[118], v13[116]));
    faces.push(new Face(color13, v13[112], v13[114], v13[122], v13[120]));
    faces.push(new Face(color13, v13[112], v13[116], v13[124], v13[120]));
    faces.push(new Face(color13, v13[113], v13[115], v13[119], v13[117]));
    faces.push(new Face(color13, v13[113], v13[115], v13[123], v13[121]));
    faces.push(new Face(color13, v13[113], v13[117], v13[125], v13[121]));
    faces.push(new Face(color13, v13[114], v13[115], v13[119], v13[118]));
    faces.push(new Face(color13, v13[114], v13[115], v13[123], v13[122]));
    faces.push(new Face(color13, v13[114], v13[118], v13[126], v13[122]));
    faces.push(new Face(color13, v13[115], v13[119], v13[127], v13[123]));
    faces.push(new Face(color13, v13[116], v13[117], v13[119], v13[118]));
    faces.push(new Face(color13, v13[116], v13[117], v13[125], v13[124]));
    faces.push(new Face(color13, v13[116], v13[118], v13[126], v13[124]));
    faces.push(new Face(color13, v13[117], v13[119], v13[127], v13[125]));
    faces.push(new Face(color13, v13[118], v13[119], v13[127], v13[126]));
    faces.push(new Face(color13, v13[120], v13[121], v13[123], v13[122]));
    faces.push(new Face(color13, v13[120], v13[121], v13[125], v13[124]));
    faces.push(new Face(color13, v13[120], v13[122], v13[126], v13[124]));
    faces.push(new Face(color13, v13[121], v13[123], v13[127], v13[125]));
    faces.push(new Face(color13, v13[122], v13[123], v13[127], v13[126]));
    faces.push(new Face(color13, v13[124], v13[125], v13[127], v13[126]));
    for (let i = 0; i < v13.length; i++) {
        v13[i].rotate(r);
        v13[i].project();
    }

    v14[0] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v14[1] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[2] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v14[3] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[4] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v14[5] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[6] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2);
    v14[7] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[8] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v14[9] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[10] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2);
    v14[11] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[12] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2);
    v14[13] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[14] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, w/2, w/2, -w/2);
    v14[15] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[16] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v14[17] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[18] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v14[19] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[20] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v14[21] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[22] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, w/2, w/2, -w/2);
    v14[23] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[24] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v14[25] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[26] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, w/2, w/2, -w/2);
    v14[27] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[28] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, -w/2, w/2, -w/2);
    v14[29] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[30] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, w/2, w/2, -w/2);
    v14[31] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[32] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v14[33] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[34] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v14[35] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[36] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v14[37] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[38] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2);
    v14[39] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[40] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v14[41] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[42] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2);
    v14[43] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[44] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2);
    v14[45] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[46] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, w/2, w/2, -w/2);
    v14[47] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[48] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v14[49] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[50] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v14[51] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[52] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v14[53] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[54] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, w/2, w/2, -w/2);
    v14[55] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[56] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v14[57] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[58] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, w/2, w/2, -w/2);
    v14[59] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[60] = new Vertex(-w/2, w/2, w/2, w/2, w/2, -w/2, w/2, -w/2);
    v14[61] = new Vertex(-w/2, w/2, w/2, w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[62] = new Vertex(-w/2, w/2, w/2, w/2, w/2, w/2, w/2, -w/2);
    v14[63] = new Vertex(-w/2, w/2, w/2, w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[64] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v14[65] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[66] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v14[67] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[68] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v14[69] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[70] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2);
    v14[71] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[72] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v14[73] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[74] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2);
    v14[75] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[76] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2);
    v14[77] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[78] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, w/2, w/2, -w/2);
    v14[79] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[80] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v14[81] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[82] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v14[83] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[84] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v14[85] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[86] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, w/2, w/2, -w/2);
    v14[87] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[88] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v14[89] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[90] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, w/2, w/2, -w/2);
    v14[91] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[92] = new Vertex(w/2, -w/2, w/2, w/2, w/2, -w/2, w/2, -w/2);
    v14[93] = new Vertex(w/2, -w/2, w/2, w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[94] = new Vertex(w/2, -w/2, w/2, w/2, w/2, w/2, w/2, -w/2);
    v14[95] = new Vertex(w/2, -w/2, w/2, w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[96] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v14[97] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[98] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v14[99] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[100] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v14[101] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[102] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2);
    v14[103] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[104] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v14[105] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[106] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2);
    v14[107] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[108] = new Vertex(w/2, w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2);
    v14[109] = new Vertex(w/2, w/2, -w/2, w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[110] = new Vertex(w/2, w/2, -w/2, w/2, w/2, w/2, w/2, -w/2);
    v14[111] = new Vertex(w/2, w/2, -w/2, w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[112] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v14[113] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[114] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v14[115] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[116] = new Vertex(w/2, w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v14[117] = new Vertex(w/2, w/2, w/2, -w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[118] = new Vertex(w/2, w/2, w/2, -w/2, w/2, w/2, w/2, -w/2);
    v14[119] = new Vertex(w/2, w/2, w/2, -w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[120] = new Vertex(w/2, w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v14[121] = new Vertex(w/2, w/2, w/2, w/2, -w/2, -w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[122] = new Vertex(w/2, w/2, w/2, w/2, -w/2, w/2, w/2, -w/2);
    v14[123] = new Vertex(w/2, w/2, w/2, w/2, -w/2, w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[124] = new Vertex(w/2, w/2, w/2, w/2, w/2, -w/2, w/2, -w/2);
    v14[125] = new Vertex(w/2, w/2, w/2, w/2, w/2, -w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    v14[126] = new Vertex(w/2, w/2, w/2, w/2, w/2, w/2, w/2, -w/2);
    v14[127] = new Vertex(w/2, w/2, w/2, w/2, w/2, w/2, w/2+Math.sin(theta)*w, -w/2+Math.cos(theta)*w);
    faces.push(new Face(color14, v14[0], v14[1], v14[3], v14[2]));
    faces.push(new Face(color14, v14[0], v14[1], v14[5], v14[4]));
    faces.push(new Face(color14, v14[0], v14[1], v14[9], v14[8]));
    faces.push(new Face(color14, v14[0], v14[1], v14[17], v14[16]));
    faces.push(new Face(color14, v14[0], v14[1], v14[33], v14[32]));
    faces.push(new Face(color14, v14[0], v14[1], v14[65], v14[64]));
    faces.push(new Face(color14, v14[0], v14[2], v14[6], v14[4]));
    faces.push(new Face(color14, v14[0], v14[2], v14[10], v14[8]));
    faces.push(new Face(color14, v14[0], v14[2], v14[18], v14[16]));
    faces.push(new Face(color14, v14[0], v14[2], v14[34], v14[32]));
    faces.push(new Face(color14, v14[0], v14[2], v14[66], v14[64]));
    faces.push(new Face(color14, v14[0], v14[4], v14[12], v14[8]));
    faces.push(new Face(color14, v14[0], v14[4], v14[20], v14[16]));
    faces.push(new Face(color14, v14[0], v14[4], v14[36], v14[32]));
    faces.push(new Face(color14, v14[0], v14[4], v14[68], v14[64]));
    faces.push(new Face(color14, v14[0], v14[8], v14[24], v14[16]));
    faces.push(new Face(color14, v14[0], v14[8], v14[40], v14[32]));
    faces.push(new Face(color14, v14[0], v14[8], v14[72], v14[64]));
    faces.push(new Face(color14, v14[0], v14[16], v14[48], v14[32]));
    faces.push(new Face(color14, v14[0], v14[16], v14[80], v14[64]));
    faces.push(new Face(color14, v14[0], v14[32], v14[96], v14[64]));
    faces.push(new Face(color14, v14[1], v14[3], v14[7], v14[5]));
    faces.push(new Face(color14, v14[1], v14[3], v14[11], v14[9]));
    faces.push(new Face(color14, v14[1], v14[3], v14[19], v14[17]));
    faces.push(new Face(color14, v14[1], v14[3], v14[35], v14[33]));
    faces.push(new Face(color14, v14[1], v14[3], v14[67], v14[65]));
    faces.push(new Face(color14, v14[1], v14[5], v14[13], v14[9]));
    faces.push(new Face(color14, v14[1], v14[5], v14[21], v14[17]));
    faces.push(new Face(color14, v14[1], v14[5], v14[37], v14[33]));
    faces.push(new Face(color14, v14[1], v14[5], v14[69], v14[65]));
    faces.push(new Face(color14, v14[1], v14[9], v14[25], v14[17]));
    faces.push(new Face(color14, v14[1], v14[9], v14[41], v14[33]));
    faces.push(new Face(color14, v14[1], v14[9], v14[73], v14[65]));
    faces.push(new Face(color14, v14[1], v14[17], v14[49], v14[33]));
    faces.push(new Face(color14, v14[1], v14[17], v14[81], v14[65]));
    faces.push(new Face(color14, v14[1], v14[33], v14[97], v14[65]));
    faces.push(new Face(color14, v14[2], v14[3], v14[7], v14[6]));
    faces.push(new Face(color14, v14[2], v14[3], v14[11], v14[10]));
    faces.push(new Face(color14, v14[2], v14[3], v14[19], v14[18]));
    faces.push(new Face(color14, v14[2], v14[3], v14[35], v14[34]));
    faces.push(new Face(color14, v14[2], v14[3], v14[67], v14[66]));
    faces.push(new Face(color14, v14[2], v14[6], v14[14], v14[10]));
    faces.push(new Face(color14, v14[2], v14[6], v14[22], v14[18]));
    faces.push(new Face(color14, v14[2], v14[6], v14[38], v14[34]));
    faces.push(new Face(color14, v14[2], v14[6], v14[70], v14[66]));
    faces.push(new Face(color14, v14[2], v14[10], v14[26], v14[18]));
    faces.push(new Face(color14, v14[2], v14[10], v14[42], v14[34]));
    faces.push(new Face(color14, v14[2], v14[10], v14[74], v14[66]));
    faces.push(new Face(color14, v14[2], v14[18], v14[50], v14[34]));
    faces.push(new Face(color14, v14[2], v14[18], v14[82], v14[66]));
    faces.push(new Face(color14, v14[2], v14[34], v14[98], v14[66]));
    faces.push(new Face(color14, v14[3], v14[7], v14[15], v14[11]));
    faces.push(new Face(color14, v14[3], v14[7], v14[23], v14[19]));
    faces.push(new Face(color14, v14[3], v14[7], v14[39], v14[35]));
    faces.push(new Face(color14, v14[3], v14[7], v14[71], v14[67]));
    faces.push(new Face(color14, v14[3], v14[11], v14[27], v14[19]));
    faces.push(new Face(color14, v14[3], v14[11], v14[43], v14[35]));
    faces.push(new Face(color14, v14[3], v14[11], v14[75], v14[67]));
    faces.push(new Face(color14, v14[3], v14[19], v14[51], v14[35]));
    faces.push(new Face(color14, v14[3], v14[19], v14[83], v14[67]));
    faces.push(new Face(color14, v14[3], v14[35], v14[99], v14[67]));
    faces.push(new Face(color14, v14[4], v14[5], v14[7], v14[6]));
    faces.push(new Face(color14, v14[4], v14[5], v14[13], v14[12]));
    faces.push(new Face(color14, v14[4], v14[5], v14[21], v14[20]));
    faces.push(new Face(color14, v14[4], v14[5], v14[37], v14[36]));
    faces.push(new Face(color14, v14[4], v14[5], v14[69], v14[68]));
    faces.push(new Face(color14, v14[4], v14[6], v14[14], v14[12]));
    faces.push(new Face(color14, v14[4], v14[6], v14[22], v14[20]));
    faces.push(new Face(color14, v14[4], v14[6], v14[38], v14[36]));
    faces.push(new Face(color14, v14[4], v14[6], v14[70], v14[68]));
    faces.push(new Face(color14, v14[4], v14[12], v14[28], v14[20]));
    faces.push(new Face(color14, v14[4], v14[12], v14[44], v14[36]));
    faces.push(new Face(color14, v14[4], v14[12], v14[76], v14[68]));
    faces.push(new Face(color14, v14[4], v14[20], v14[52], v14[36]));
    faces.push(new Face(color14, v14[4], v14[20], v14[84], v14[68]));
    faces.push(new Face(color14, v14[4], v14[36], v14[100], v14[68]));
    faces.push(new Face(color14, v14[5], v14[7], v14[15], v14[13]));
    faces.push(new Face(color14, v14[5], v14[7], v14[23], v14[21]));
    faces.push(new Face(color14, v14[5], v14[7], v14[39], v14[37]));
    faces.push(new Face(color14, v14[5], v14[7], v14[71], v14[69]));
    faces.push(new Face(color14, v14[5], v14[13], v14[29], v14[21]));
    faces.push(new Face(color14, v14[5], v14[13], v14[45], v14[37]));
    faces.push(new Face(color14, v14[5], v14[13], v14[77], v14[69]));
    faces.push(new Face(color14, v14[5], v14[21], v14[53], v14[37]));
    faces.push(new Face(color14, v14[5], v14[21], v14[85], v14[69]));
    faces.push(new Face(color14, v14[5], v14[37], v14[101], v14[69]));
    faces.push(new Face(color14, v14[6], v14[7], v14[15], v14[14]));
    faces.push(new Face(color14, v14[6], v14[7], v14[23], v14[22]));
    faces.push(new Face(color14, v14[6], v14[7], v14[39], v14[38]));
    faces.push(new Face(color14, v14[6], v14[7], v14[71], v14[70]));
    faces.push(new Face(color14, v14[6], v14[14], v14[30], v14[22]));
    faces.push(new Face(color14, v14[6], v14[14], v14[46], v14[38]));
    faces.push(new Face(color14, v14[6], v14[14], v14[78], v14[70]));
    faces.push(new Face(color14, v14[6], v14[22], v14[54], v14[38]));
    faces.push(new Face(color14, v14[6], v14[22], v14[86], v14[70]));
    faces.push(new Face(color14, v14[6], v14[38], v14[102], v14[70]));
    faces.push(new Face(color14, v14[7], v14[15], v14[31], v14[23]));
    faces.push(new Face(color14, v14[7], v14[15], v14[47], v14[39]));
    faces.push(new Face(color14, v14[7], v14[15], v14[79], v14[71]));
    faces.push(new Face(color14, v14[7], v14[23], v14[55], v14[39]));
    faces.push(new Face(color14, v14[7], v14[23], v14[87], v14[71]));
    faces.push(new Face(color14, v14[7], v14[39], v14[103], v14[71]));
    faces.push(new Face(color14, v14[8], v14[9], v14[11], v14[10]));
    faces.push(new Face(color14, v14[8], v14[9], v14[13], v14[12]));
    faces.push(new Face(color14, v14[8], v14[9], v14[25], v14[24]));
    faces.push(new Face(color14, v14[8], v14[9], v14[41], v14[40]));
    faces.push(new Face(color14, v14[8], v14[9], v14[73], v14[72]));
    faces.push(new Face(color14, v14[8], v14[10], v14[14], v14[12]));
    faces.push(new Face(color14, v14[8], v14[10], v14[26], v14[24]));
    faces.push(new Face(color14, v14[8], v14[10], v14[42], v14[40]));
    faces.push(new Face(color14, v14[8], v14[10], v14[74], v14[72]));
    faces.push(new Face(color14, v14[8], v14[12], v14[28], v14[24]));
    faces.push(new Face(color14, v14[8], v14[12], v14[44], v14[40]));
    faces.push(new Face(color14, v14[8], v14[12], v14[76], v14[72]));
    faces.push(new Face(color14, v14[8], v14[24], v14[56], v14[40]));
    faces.push(new Face(color14, v14[8], v14[24], v14[88], v14[72]));
    faces.push(new Face(color14, v14[8], v14[40], v14[104], v14[72]));
    faces.push(new Face(color14, v14[9], v14[11], v14[15], v14[13]));
    faces.push(new Face(color14, v14[9], v14[11], v14[27], v14[25]));
    faces.push(new Face(color14, v14[9], v14[11], v14[43], v14[41]));
    faces.push(new Face(color14, v14[9], v14[11], v14[75], v14[73]));
    faces.push(new Face(color14, v14[9], v14[13], v14[29], v14[25]));
    faces.push(new Face(color14, v14[9], v14[13], v14[45], v14[41]));
    faces.push(new Face(color14, v14[9], v14[13], v14[77], v14[73]));
    faces.push(new Face(color14, v14[9], v14[25], v14[57], v14[41]));
    faces.push(new Face(color14, v14[9], v14[25], v14[89], v14[73]));
    faces.push(new Face(color14, v14[9], v14[41], v14[105], v14[73]));
    faces.push(new Face(color14, v14[10], v14[11], v14[15], v14[14]));
    faces.push(new Face(color14, v14[10], v14[11], v14[27], v14[26]));
    faces.push(new Face(color14, v14[10], v14[11], v14[43], v14[42]));
    faces.push(new Face(color14, v14[10], v14[11], v14[75], v14[74]));
    faces.push(new Face(color14, v14[10], v14[14], v14[30], v14[26]));
    faces.push(new Face(color14, v14[10], v14[14], v14[46], v14[42]));
    faces.push(new Face(color14, v14[10], v14[14], v14[78], v14[74]));
    faces.push(new Face(color14, v14[10], v14[26], v14[58], v14[42]));
    faces.push(new Face(color14, v14[10], v14[26], v14[90], v14[74]));
    faces.push(new Face(color14, v14[10], v14[42], v14[106], v14[74]));
    faces.push(new Face(color14, v14[11], v14[15], v14[31], v14[27]));
    faces.push(new Face(color14, v14[11], v14[15], v14[47], v14[43]));
    faces.push(new Face(color14, v14[11], v14[15], v14[79], v14[75]));
    faces.push(new Face(color14, v14[11], v14[27], v14[59], v14[43]));
    faces.push(new Face(color14, v14[11], v14[27], v14[91], v14[75]));
    faces.push(new Face(color14, v14[11], v14[43], v14[107], v14[75]));
    faces.push(new Face(color14, v14[12], v14[13], v14[15], v14[14]));
    faces.push(new Face(color14, v14[12], v14[13], v14[29], v14[28]));
    faces.push(new Face(color14, v14[12], v14[13], v14[45], v14[44]));
    faces.push(new Face(color14, v14[12], v14[13], v14[77], v14[76]));
    faces.push(new Face(color14, v14[12], v14[14], v14[30], v14[28]));
    faces.push(new Face(color14, v14[12], v14[14], v14[46], v14[44]));
    faces.push(new Face(color14, v14[12], v14[14], v14[78], v14[76]));
    faces.push(new Face(color14, v14[12], v14[28], v14[60], v14[44]));
    faces.push(new Face(color14, v14[12], v14[28], v14[92], v14[76]));
    faces.push(new Face(color14, v14[12], v14[44], v14[108], v14[76]));
    faces.push(new Face(color14, v14[13], v14[15], v14[31], v14[29]));
    faces.push(new Face(color14, v14[13], v14[15], v14[47], v14[45]));
    faces.push(new Face(color14, v14[13], v14[15], v14[79], v14[77]));
    faces.push(new Face(color14, v14[13], v14[29], v14[61], v14[45]));
    faces.push(new Face(color14, v14[13], v14[29], v14[93], v14[77]));
    faces.push(new Face(color14, v14[13], v14[45], v14[109], v14[77]));
    faces.push(new Face(color14, v14[14], v14[15], v14[31], v14[30]));
    faces.push(new Face(color14, v14[14], v14[15], v14[47], v14[46]));
    faces.push(new Face(color14, v14[14], v14[15], v14[79], v14[78]));
    faces.push(new Face(color14, v14[14], v14[30], v14[62], v14[46]));
    faces.push(new Face(color14, v14[14], v14[30], v14[94], v14[78]));
    faces.push(new Face(color14, v14[14], v14[46], v14[110], v14[78]));
    faces.push(new Face(color14, v14[15], v14[31], v14[63], v14[47]));
    faces.push(new Face(color14, v14[15], v14[31], v14[95], v14[79]));
    faces.push(new Face(color14, v14[15], v14[47], v14[111], v14[79]));
    faces.push(new Face(color14, v14[16], v14[17], v14[19], v14[18]));
    faces.push(new Face(color14, v14[16], v14[17], v14[21], v14[20]));
    faces.push(new Face(color14, v14[16], v14[17], v14[25], v14[24]));
    faces.push(new Face(color14, v14[16], v14[17], v14[49], v14[48]));
    faces.push(new Face(color14, v14[16], v14[17], v14[81], v14[80]));
    faces.push(new Face(color14, v14[16], v14[18], v14[22], v14[20]));
    faces.push(new Face(color14, v14[16], v14[18], v14[26], v14[24]));
    faces.push(new Face(color14, v14[16], v14[18], v14[50], v14[48]));
    faces.push(new Face(color14, v14[16], v14[18], v14[82], v14[80]));
    faces.push(new Face(color14, v14[16], v14[20], v14[28], v14[24]));
    faces.push(new Face(color14, v14[16], v14[20], v14[52], v14[48]));
    faces.push(new Face(color14, v14[16], v14[20], v14[84], v14[80]));
    faces.push(new Face(color14, v14[16], v14[24], v14[56], v14[48]));
    faces.push(new Face(color14, v14[16], v14[24], v14[88], v14[80]));
    faces.push(new Face(color14, v14[16], v14[48], v14[112], v14[80]));
    faces.push(new Face(color14, v14[17], v14[19], v14[23], v14[21]));
    faces.push(new Face(color14, v14[17], v14[19], v14[27], v14[25]));
    faces.push(new Face(color14, v14[17], v14[19], v14[51], v14[49]));
    faces.push(new Face(color14, v14[17], v14[19], v14[83], v14[81]));
    faces.push(new Face(color14, v14[17], v14[21], v14[29], v14[25]));
    faces.push(new Face(color14, v14[17], v14[21], v14[53], v14[49]));
    faces.push(new Face(color14, v14[17], v14[21], v14[85], v14[81]));
    faces.push(new Face(color14, v14[17], v14[25], v14[57], v14[49]));
    faces.push(new Face(color14, v14[17], v14[25], v14[89], v14[81]));
    faces.push(new Face(color14, v14[17], v14[49], v14[113], v14[81]));
    faces.push(new Face(color14, v14[18], v14[19], v14[23], v14[22]));
    faces.push(new Face(color14, v14[18], v14[19], v14[27], v14[26]));
    faces.push(new Face(color14, v14[18], v14[19], v14[51], v14[50]));
    faces.push(new Face(color14, v14[18], v14[19], v14[83], v14[82]));
    faces.push(new Face(color14, v14[18], v14[22], v14[30], v14[26]));
    faces.push(new Face(color14, v14[18], v14[22], v14[54], v14[50]));
    faces.push(new Face(color14, v14[18], v14[22], v14[86], v14[82]));
    faces.push(new Face(color14, v14[18], v14[26], v14[58], v14[50]));
    faces.push(new Face(color14, v14[18], v14[26], v14[90], v14[82]));
    faces.push(new Face(color14, v14[18], v14[50], v14[114], v14[82]));
    faces.push(new Face(color14, v14[19], v14[23], v14[31], v14[27]));
    faces.push(new Face(color14, v14[19], v14[23], v14[55], v14[51]));
    faces.push(new Face(color14, v14[19], v14[23], v14[87], v14[83]));
    faces.push(new Face(color14, v14[19], v14[27], v14[59], v14[51]));
    faces.push(new Face(color14, v14[19], v14[27], v14[91], v14[83]));
    faces.push(new Face(color14, v14[19], v14[51], v14[115], v14[83]));
    faces.push(new Face(color14, v14[20], v14[21], v14[23], v14[22]));
    faces.push(new Face(color14, v14[20], v14[21], v14[29], v14[28]));
    faces.push(new Face(color14, v14[20], v14[21], v14[53], v14[52]));
    faces.push(new Face(color14, v14[20], v14[21], v14[85], v14[84]));
    faces.push(new Face(color14, v14[20], v14[22], v14[30], v14[28]));
    faces.push(new Face(color14, v14[20], v14[22], v14[54], v14[52]));
    faces.push(new Face(color14, v14[20], v14[22], v14[86], v14[84]));
    faces.push(new Face(color14, v14[20], v14[28], v14[60], v14[52]));
    faces.push(new Face(color14, v14[20], v14[28], v14[92], v14[84]));
    faces.push(new Face(color14, v14[20], v14[52], v14[116], v14[84]));
    faces.push(new Face(color14, v14[21], v14[23], v14[31], v14[29]));
    faces.push(new Face(color14, v14[21], v14[23], v14[55], v14[53]));
    faces.push(new Face(color14, v14[21], v14[23], v14[87], v14[85]));
    faces.push(new Face(color14, v14[21], v14[29], v14[61], v14[53]));
    faces.push(new Face(color14, v14[21], v14[29], v14[93], v14[85]));
    faces.push(new Face(color14, v14[21], v14[53], v14[117], v14[85]));
    faces.push(new Face(color14, v14[22], v14[23], v14[31], v14[30]));
    faces.push(new Face(color14, v14[22], v14[23], v14[55], v14[54]));
    faces.push(new Face(color14, v14[22], v14[23], v14[87], v14[86]));
    faces.push(new Face(color14, v14[22], v14[30], v14[62], v14[54]));
    faces.push(new Face(color14, v14[22], v14[30], v14[94], v14[86]));
    faces.push(new Face(color14, v14[22], v14[54], v14[118], v14[86]));
    faces.push(new Face(color14, v14[23], v14[31], v14[63], v14[55]));
    faces.push(new Face(color14, v14[23], v14[31], v14[95], v14[87]));
    faces.push(new Face(color14, v14[23], v14[55], v14[119], v14[87]));
    faces.push(new Face(color14, v14[24], v14[25], v14[27], v14[26]));
    faces.push(new Face(color14, v14[24], v14[25], v14[29], v14[28]));
    faces.push(new Face(color14, v14[24], v14[25], v14[57], v14[56]));
    faces.push(new Face(color14, v14[24], v14[25], v14[89], v14[88]));
    faces.push(new Face(color14, v14[24], v14[26], v14[30], v14[28]));
    faces.push(new Face(color14, v14[24], v14[26], v14[58], v14[56]));
    faces.push(new Face(color14, v14[24], v14[26], v14[90], v14[88]));
    faces.push(new Face(color14, v14[24], v14[28], v14[60], v14[56]));
    faces.push(new Face(color14, v14[24], v14[28], v14[92], v14[88]));
    faces.push(new Face(color14, v14[24], v14[56], v14[120], v14[88]));
    faces.push(new Face(color14, v14[25], v14[27], v14[31], v14[29]));
    faces.push(new Face(color14, v14[25], v14[27], v14[59], v14[57]));
    faces.push(new Face(color14, v14[25], v14[27], v14[91], v14[89]));
    faces.push(new Face(color14, v14[25], v14[29], v14[61], v14[57]));
    faces.push(new Face(color14, v14[25], v14[29], v14[93], v14[89]));
    faces.push(new Face(color14, v14[25], v14[57], v14[121], v14[89]));
    faces.push(new Face(color14, v14[26], v14[27], v14[31], v14[30]));
    faces.push(new Face(color14, v14[26], v14[27], v14[59], v14[58]));
    faces.push(new Face(color14, v14[26], v14[27], v14[91], v14[90]));
    faces.push(new Face(color14, v14[26], v14[30], v14[62], v14[58]));
    faces.push(new Face(color14, v14[26], v14[30], v14[94], v14[90]));
    faces.push(new Face(color14, v14[26], v14[58], v14[122], v14[90]));
    faces.push(new Face(color14, v14[27], v14[31], v14[63], v14[59]));
    faces.push(new Face(color14, v14[27], v14[31], v14[95], v14[91]));
    faces.push(new Face(color14, v14[27], v14[59], v14[123], v14[91]));
    faces.push(new Face(color14, v14[28], v14[29], v14[31], v14[30]));
    faces.push(new Face(color14, v14[28], v14[29], v14[61], v14[60]));
    faces.push(new Face(color14, v14[28], v14[29], v14[93], v14[92]));
    faces.push(new Face(color14, v14[28], v14[30], v14[62], v14[60]));
    faces.push(new Face(color14, v14[28], v14[30], v14[94], v14[92]));
    faces.push(new Face(color14, v14[28], v14[60], v14[124], v14[92]));
    faces.push(new Face(color14, v14[29], v14[31], v14[63], v14[61]));
    faces.push(new Face(color14, v14[29], v14[31], v14[95], v14[93]));
    faces.push(new Face(color14, v14[29], v14[61], v14[125], v14[93]));
    faces.push(new Face(color14, v14[30], v14[31], v14[63], v14[62]));
    faces.push(new Face(color14, v14[30], v14[31], v14[95], v14[94]));
    faces.push(new Face(color14, v14[30], v14[62], v14[126], v14[94]));
    faces.push(new Face(color14, v14[31], v14[63], v14[127], v14[95]));
    faces.push(new Face(color14, v14[32], v14[33], v14[35], v14[34]));
    faces.push(new Face(color14, v14[32], v14[33], v14[37], v14[36]));
    faces.push(new Face(color14, v14[32], v14[33], v14[41], v14[40]));
    faces.push(new Face(color14, v14[32], v14[33], v14[49], v14[48]));
    faces.push(new Face(color14, v14[32], v14[33], v14[97], v14[96]));
    faces.push(new Face(color14, v14[32], v14[34], v14[38], v14[36]));
    faces.push(new Face(color14, v14[32], v14[34], v14[42], v14[40]));
    faces.push(new Face(color14, v14[32], v14[34], v14[50], v14[48]));
    faces.push(new Face(color14, v14[32], v14[34], v14[98], v14[96]));
    faces.push(new Face(color14, v14[32], v14[36], v14[44], v14[40]));
    faces.push(new Face(color14, v14[32], v14[36], v14[52], v14[48]));
    faces.push(new Face(color14, v14[32], v14[36], v14[100], v14[96]));
    faces.push(new Face(color14, v14[32], v14[40], v14[56], v14[48]));
    faces.push(new Face(color14, v14[32], v14[40], v14[104], v14[96]));
    faces.push(new Face(color14, v14[32], v14[48], v14[112], v14[96]));
    faces.push(new Face(color14, v14[33], v14[35], v14[39], v14[37]));
    faces.push(new Face(color14, v14[33], v14[35], v14[43], v14[41]));
    faces.push(new Face(color14, v14[33], v14[35], v14[51], v14[49]));
    faces.push(new Face(color14, v14[33], v14[35], v14[99], v14[97]));
    faces.push(new Face(color14, v14[33], v14[37], v14[45], v14[41]));
    faces.push(new Face(color14, v14[33], v14[37], v14[53], v14[49]));
    faces.push(new Face(color14, v14[33], v14[37], v14[101], v14[97]));
    faces.push(new Face(color14, v14[33], v14[41], v14[57], v14[49]));
    faces.push(new Face(color14, v14[33], v14[41], v14[105], v14[97]));
    faces.push(new Face(color14, v14[33], v14[49], v14[113], v14[97]));
    faces.push(new Face(color14, v14[34], v14[35], v14[39], v14[38]));
    faces.push(new Face(color14, v14[34], v14[35], v14[43], v14[42]));
    faces.push(new Face(color14, v14[34], v14[35], v14[51], v14[50]));
    faces.push(new Face(color14, v14[34], v14[35], v14[99], v14[98]));
    faces.push(new Face(color14, v14[34], v14[38], v14[46], v14[42]));
    faces.push(new Face(color14, v14[34], v14[38], v14[54], v14[50]));
    faces.push(new Face(color14, v14[34], v14[38], v14[102], v14[98]));
    faces.push(new Face(color14, v14[34], v14[42], v14[58], v14[50]));
    faces.push(new Face(color14, v14[34], v14[42], v14[106], v14[98]));
    faces.push(new Face(color14, v14[34], v14[50], v14[114], v14[98]));
    faces.push(new Face(color14, v14[35], v14[39], v14[47], v14[43]));
    faces.push(new Face(color14, v14[35], v14[39], v14[55], v14[51]));
    faces.push(new Face(color14, v14[35], v14[39], v14[103], v14[99]));
    faces.push(new Face(color14, v14[35], v14[43], v14[59], v14[51]));
    faces.push(new Face(color14, v14[35], v14[43], v14[107], v14[99]));
    faces.push(new Face(color14, v14[35], v14[51], v14[115], v14[99]));
    faces.push(new Face(color14, v14[36], v14[37], v14[39], v14[38]));
    faces.push(new Face(color14, v14[36], v14[37], v14[45], v14[44]));
    faces.push(new Face(color14, v14[36], v14[37], v14[53], v14[52]));
    faces.push(new Face(color14, v14[36], v14[37], v14[101], v14[100]));
    faces.push(new Face(color14, v14[36], v14[38], v14[46], v14[44]));
    faces.push(new Face(color14, v14[36], v14[38], v14[54], v14[52]));
    faces.push(new Face(color14, v14[36], v14[38], v14[102], v14[100]));
    faces.push(new Face(color14, v14[36], v14[44], v14[60], v14[52]));
    faces.push(new Face(color14, v14[36], v14[44], v14[108], v14[100]));
    faces.push(new Face(color14, v14[36], v14[52], v14[116], v14[100]));
    faces.push(new Face(color14, v14[37], v14[39], v14[47], v14[45]));
    faces.push(new Face(color14, v14[37], v14[39], v14[55], v14[53]));
    faces.push(new Face(color14, v14[37], v14[39], v14[103], v14[101]));
    faces.push(new Face(color14, v14[37], v14[45], v14[61], v14[53]));
    faces.push(new Face(color14, v14[37], v14[45], v14[109], v14[101]));
    faces.push(new Face(color14, v14[37], v14[53], v14[117], v14[101]));
    faces.push(new Face(color14, v14[38], v14[39], v14[47], v14[46]));
    faces.push(new Face(color14, v14[38], v14[39], v14[55], v14[54]));
    faces.push(new Face(color14, v14[38], v14[39], v14[103], v14[102]));
    faces.push(new Face(color14, v14[38], v14[46], v14[62], v14[54]));
    faces.push(new Face(color14, v14[38], v14[46], v14[110], v14[102]));
    faces.push(new Face(color14, v14[38], v14[54], v14[118], v14[102]));
    faces.push(new Face(color14, v14[39], v14[47], v14[63], v14[55]));
    faces.push(new Face(color14, v14[39], v14[47], v14[111], v14[103]));
    faces.push(new Face(color14, v14[39], v14[55], v14[119], v14[103]));
    faces.push(new Face(color14, v14[40], v14[41], v14[43], v14[42]));
    faces.push(new Face(color14, v14[40], v14[41], v14[45], v14[44]));
    faces.push(new Face(color14, v14[40], v14[41], v14[57], v14[56]));
    faces.push(new Face(color14, v14[40], v14[41], v14[105], v14[104]));
    faces.push(new Face(color14, v14[40], v14[42], v14[46], v14[44]));
    faces.push(new Face(color14, v14[40], v14[42], v14[58], v14[56]));
    faces.push(new Face(color14, v14[40], v14[42], v14[106], v14[104]));
    faces.push(new Face(color14, v14[40], v14[44], v14[60], v14[56]));
    faces.push(new Face(color14, v14[40], v14[44], v14[108], v14[104]));
    faces.push(new Face(color14, v14[40], v14[56], v14[120], v14[104]));
    faces.push(new Face(color14, v14[41], v14[43], v14[47], v14[45]));
    faces.push(new Face(color14, v14[41], v14[43], v14[59], v14[57]));
    faces.push(new Face(color14, v14[41], v14[43], v14[107], v14[105]));
    faces.push(new Face(color14, v14[41], v14[45], v14[61], v14[57]));
    faces.push(new Face(color14, v14[41], v14[45], v14[109], v14[105]));
    faces.push(new Face(color14, v14[41], v14[57], v14[121], v14[105]));
    faces.push(new Face(color14, v14[42], v14[43], v14[47], v14[46]));
    faces.push(new Face(color14, v14[42], v14[43], v14[59], v14[58]));
    faces.push(new Face(color14, v14[42], v14[43], v14[107], v14[106]));
    faces.push(new Face(color14, v14[42], v14[46], v14[62], v14[58]));
    faces.push(new Face(color14, v14[42], v14[46], v14[110], v14[106]));
    faces.push(new Face(color14, v14[42], v14[58], v14[122], v14[106]));
    faces.push(new Face(color14, v14[43], v14[47], v14[63], v14[59]));
    faces.push(new Face(color14, v14[43], v14[47], v14[111], v14[107]));
    faces.push(new Face(color14, v14[43], v14[59], v14[123], v14[107]));
    faces.push(new Face(color14, v14[44], v14[45], v14[47], v14[46]));
    faces.push(new Face(color14, v14[44], v14[45], v14[61], v14[60]));
    faces.push(new Face(color14, v14[44], v14[45], v14[109], v14[108]));
    faces.push(new Face(color14, v14[44], v14[46], v14[62], v14[60]));
    faces.push(new Face(color14, v14[44], v14[46], v14[110], v14[108]));
    faces.push(new Face(color14, v14[44], v14[60], v14[124], v14[108]));
    faces.push(new Face(color14, v14[45], v14[47], v14[63], v14[61]));
    faces.push(new Face(color14, v14[45], v14[47], v14[111], v14[109]));
    faces.push(new Face(color14, v14[45], v14[61], v14[125], v14[109]));
    faces.push(new Face(color14, v14[46], v14[47], v14[63], v14[62]));
    faces.push(new Face(color14, v14[46], v14[47], v14[111], v14[110]));
    faces.push(new Face(color14, v14[46], v14[62], v14[126], v14[110]));
    faces.push(new Face(color14, v14[47], v14[63], v14[127], v14[111]));
    faces.push(new Face(color14, v14[48], v14[49], v14[51], v14[50]));
    faces.push(new Face(color14, v14[48], v14[49], v14[53], v14[52]));
    faces.push(new Face(color14, v14[48], v14[49], v14[57], v14[56]));
    faces.push(new Face(color14, v14[48], v14[49], v14[113], v14[112]));
    faces.push(new Face(color14, v14[48], v14[50], v14[54], v14[52]));
    faces.push(new Face(color14, v14[48], v14[50], v14[58], v14[56]));
    faces.push(new Face(color14, v14[48], v14[50], v14[114], v14[112]));
    faces.push(new Face(color14, v14[48], v14[52], v14[60], v14[56]));
    faces.push(new Face(color14, v14[48], v14[52], v14[116], v14[112]));
    faces.push(new Face(color14, v14[48], v14[56], v14[120], v14[112]));
    faces.push(new Face(color14, v14[49], v14[51], v14[55], v14[53]));
    faces.push(new Face(color14, v14[49], v14[51], v14[59], v14[57]));
    faces.push(new Face(color14, v14[49], v14[51], v14[115], v14[113]));
    faces.push(new Face(color14, v14[49], v14[53], v14[61], v14[57]));
    faces.push(new Face(color14, v14[49], v14[53], v14[117], v14[113]));
    faces.push(new Face(color14, v14[49], v14[57], v14[121], v14[113]));
    faces.push(new Face(color14, v14[50], v14[51], v14[55], v14[54]));
    faces.push(new Face(color14, v14[50], v14[51], v14[59], v14[58]));
    faces.push(new Face(color14, v14[50], v14[51], v14[115], v14[114]));
    faces.push(new Face(color14, v14[50], v14[54], v14[62], v14[58]));
    faces.push(new Face(color14, v14[50], v14[54], v14[118], v14[114]));
    faces.push(new Face(color14, v14[50], v14[58], v14[122], v14[114]));
    faces.push(new Face(color14, v14[51], v14[55], v14[63], v14[59]));
    faces.push(new Face(color14, v14[51], v14[55], v14[119], v14[115]));
    faces.push(new Face(color14, v14[51], v14[59], v14[123], v14[115]));
    faces.push(new Face(color14, v14[52], v14[53], v14[55], v14[54]));
    faces.push(new Face(color14, v14[52], v14[53], v14[61], v14[60]));
    faces.push(new Face(color14, v14[52], v14[53], v14[117], v14[116]));
    faces.push(new Face(color14, v14[52], v14[54], v14[62], v14[60]));
    faces.push(new Face(color14, v14[52], v14[54], v14[118], v14[116]));
    faces.push(new Face(color14, v14[52], v14[60], v14[124], v14[116]));
    faces.push(new Face(color14, v14[53], v14[55], v14[63], v14[61]));
    faces.push(new Face(color14, v14[53], v14[55], v14[119], v14[117]));
    faces.push(new Face(color14, v14[53], v14[61], v14[125], v14[117]));
    faces.push(new Face(color14, v14[54], v14[55], v14[63], v14[62]));
    faces.push(new Face(color14, v14[54], v14[55], v14[119], v14[118]));
    faces.push(new Face(color14, v14[54], v14[62], v14[126], v14[118]));
    faces.push(new Face(color14, v14[55], v14[63], v14[127], v14[119]));
    faces.push(new Face(color14, v14[56], v14[57], v14[59], v14[58]));
    faces.push(new Face(color14, v14[56], v14[57], v14[61], v14[60]));
    faces.push(new Face(color14, v14[56], v14[57], v14[121], v14[120]));
    faces.push(new Face(color14, v14[56], v14[58], v14[62], v14[60]));
    faces.push(new Face(color14, v14[56], v14[58], v14[122], v14[120]));
    faces.push(new Face(color14, v14[56], v14[60], v14[124], v14[120]));
    faces.push(new Face(color14, v14[57], v14[59], v14[63], v14[61]));
    faces.push(new Face(color14, v14[57], v14[59], v14[123], v14[121]));
    faces.push(new Face(color14, v14[57], v14[61], v14[125], v14[121]));
    faces.push(new Face(color14, v14[58], v14[59], v14[63], v14[62]));
    faces.push(new Face(color14, v14[58], v14[59], v14[123], v14[122]));
    faces.push(new Face(color14, v14[58], v14[62], v14[126], v14[122]));
    faces.push(new Face(color14, v14[59], v14[63], v14[127], v14[123]));
    faces.push(new Face(color14, v14[60], v14[61], v14[63], v14[62]));
    faces.push(new Face(color14, v14[60], v14[61], v14[125], v14[124]));
    faces.push(new Face(color14, v14[60], v14[62], v14[126], v14[124]));
    faces.push(new Face(color14, v14[61], v14[63], v14[127], v14[125]));
    faces.push(new Face(color14, v14[62], v14[63], v14[127], v14[126]));
    faces.push(new Face(color14, v14[64], v14[65], v14[67], v14[66]));
    faces.push(new Face(color14, v14[64], v14[65], v14[69], v14[68]));
    faces.push(new Face(color14, v14[64], v14[65], v14[73], v14[72]));
    faces.push(new Face(color14, v14[64], v14[65], v14[81], v14[80]));
    faces.push(new Face(color14, v14[64], v14[65], v14[97], v14[96]));
    faces.push(new Face(color14, v14[64], v14[66], v14[70], v14[68]));
    faces.push(new Face(color14, v14[64], v14[66], v14[74], v14[72]));
    faces.push(new Face(color14, v14[64], v14[66], v14[82], v14[80]));
    faces.push(new Face(color14, v14[64], v14[66], v14[98], v14[96]));
    faces.push(new Face(color14, v14[64], v14[68], v14[76], v14[72]));
    faces.push(new Face(color14, v14[64], v14[68], v14[84], v14[80]));
    faces.push(new Face(color14, v14[64], v14[68], v14[100], v14[96]));
    faces.push(new Face(color14, v14[64], v14[72], v14[88], v14[80]));
    faces.push(new Face(color14, v14[64], v14[72], v14[104], v14[96]));
    faces.push(new Face(color14, v14[64], v14[80], v14[112], v14[96]));
    faces.push(new Face(color14, v14[65], v14[67], v14[71], v14[69]));
    faces.push(new Face(color14, v14[65], v14[67], v14[75], v14[73]));
    faces.push(new Face(color14, v14[65], v14[67], v14[83], v14[81]));
    faces.push(new Face(color14, v14[65], v14[67], v14[99], v14[97]));
    faces.push(new Face(color14, v14[65], v14[69], v14[77], v14[73]));
    faces.push(new Face(color14, v14[65], v14[69], v14[85], v14[81]));
    faces.push(new Face(color14, v14[65], v14[69], v14[101], v14[97]));
    faces.push(new Face(color14, v14[65], v14[73], v14[89], v14[81]));
    faces.push(new Face(color14, v14[65], v14[73], v14[105], v14[97]));
    faces.push(new Face(color14, v14[65], v14[81], v14[113], v14[97]));
    faces.push(new Face(color14, v14[66], v14[67], v14[71], v14[70]));
    faces.push(new Face(color14, v14[66], v14[67], v14[75], v14[74]));
    faces.push(new Face(color14, v14[66], v14[67], v14[83], v14[82]));
    faces.push(new Face(color14, v14[66], v14[67], v14[99], v14[98]));
    faces.push(new Face(color14, v14[66], v14[70], v14[78], v14[74]));
    faces.push(new Face(color14, v14[66], v14[70], v14[86], v14[82]));
    faces.push(new Face(color14, v14[66], v14[70], v14[102], v14[98]));
    faces.push(new Face(color14, v14[66], v14[74], v14[90], v14[82]));
    faces.push(new Face(color14, v14[66], v14[74], v14[106], v14[98]));
    faces.push(new Face(color14, v14[66], v14[82], v14[114], v14[98]));
    faces.push(new Face(color14, v14[67], v14[71], v14[79], v14[75]));
    faces.push(new Face(color14, v14[67], v14[71], v14[87], v14[83]));
    faces.push(new Face(color14, v14[67], v14[71], v14[103], v14[99]));
    faces.push(new Face(color14, v14[67], v14[75], v14[91], v14[83]));
    faces.push(new Face(color14, v14[67], v14[75], v14[107], v14[99]));
    faces.push(new Face(color14, v14[67], v14[83], v14[115], v14[99]));
    faces.push(new Face(color14, v14[68], v14[69], v14[71], v14[70]));
    faces.push(new Face(color14, v14[68], v14[69], v14[77], v14[76]));
    faces.push(new Face(color14, v14[68], v14[69], v14[85], v14[84]));
    faces.push(new Face(color14, v14[68], v14[69], v14[101], v14[100]));
    faces.push(new Face(color14, v14[68], v14[70], v14[78], v14[76]));
    faces.push(new Face(color14, v14[68], v14[70], v14[86], v14[84]));
    faces.push(new Face(color14, v14[68], v14[70], v14[102], v14[100]));
    faces.push(new Face(color14, v14[68], v14[76], v14[92], v14[84]));
    faces.push(new Face(color14, v14[68], v14[76], v14[108], v14[100]));
    faces.push(new Face(color14, v14[68], v14[84], v14[116], v14[100]));
    faces.push(new Face(color14, v14[69], v14[71], v14[79], v14[77]));
    faces.push(new Face(color14, v14[69], v14[71], v14[87], v14[85]));
    faces.push(new Face(color14, v14[69], v14[71], v14[103], v14[101]));
    faces.push(new Face(color14, v14[69], v14[77], v14[93], v14[85]));
    faces.push(new Face(color14, v14[69], v14[77], v14[109], v14[101]));
    faces.push(new Face(color14, v14[69], v14[85], v14[117], v14[101]));
    faces.push(new Face(color14, v14[70], v14[71], v14[79], v14[78]));
    faces.push(new Face(color14, v14[70], v14[71], v14[87], v14[86]));
    faces.push(new Face(color14, v14[70], v14[71], v14[103], v14[102]));
    faces.push(new Face(color14, v14[70], v14[78], v14[94], v14[86]));
    faces.push(new Face(color14, v14[70], v14[78], v14[110], v14[102]));
    faces.push(new Face(color14, v14[70], v14[86], v14[118], v14[102]));
    faces.push(new Face(color14, v14[71], v14[79], v14[95], v14[87]));
    faces.push(new Face(color14, v14[71], v14[79], v14[111], v14[103]));
    faces.push(new Face(color14, v14[71], v14[87], v14[119], v14[103]));
    faces.push(new Face(color14, v14[72], v14[73], v14[75], v14[74]));
    faces.push(new Face(color14, v14[72], v14[73], v14[77], v14[76]));
    faces.push(new Face(color14, v14[72], v14[73], v14[89], v14[88]));
    faces.push(new Face(color14, v14[72], v14[73], v14[105], v14[104]));
    faces.push(new Face(color14, v14[72], v14[74], v14[78], v14[76]));
    faces.push(new Face(color14, v14[72], v14[74], v14[90], v14[88]));
    faces.push(new Face(color14, v14[72], v14[74], v14[106], v14[104]));
    faces.push(new Face(color14, v14[72], v14[76], v14[92], v14[88]));
    faces.push(new Face(color14, v14[72], v14[76], v14[108], v14[104]));
    faces.push(new Face(color14, v14[72], v14[88], v14[120], v14[104]));
    faces.push(new Face(color14, v14[73], v14[75], v14[79], v14[77]));
    faces.push(new Face(color14, v14[73], v14[75], v14[91], v14[89]));
    faces.push(new Face(color14, v14[73], v14[75], v14[107], v14[105]));
    faces.push(new Face(color14, v14[73], v14[77], v14[93], v14[89]));
    faces.push(new Face(color14, v14[73], v14[77], v14[109], v14[105]));
    faces.push(new Face(color14, v14[73], v14[89], v14[121], v14[105]));
    faces.push(new Face(color14, v14[74], v14[75], v14[79], v14[78]));
    faces.push(new Face(color14, v14[74], v14[75], v14[91], v14[90]));
    faces.push(new Face(color14, v14[74], v14[75], v14[107], v14[106]));
    faces.push(new Face(color14, v14[74], v14[78], v14[94], v14[90]));
    faces.push(new Face(color14, v14[74], v14[78], v14[110], v14[106]));
    faces.push(new Face(color14, v14[74], v14[90], v14[122], v14[106]));
    faces.push(new Face(color14, v14[75], v14[79], v14[95], v14[91]));
    faces.push(new Face(color14, v14[75], v14[79], v14[111], v14[107]));
    faces.push(new Face(color14, v14[75], v14[91], v14[123], v14[107]));
    faces.push(new Face(color14, v14[76], v14[77], v14[79], v14[78]));
    faces.push(new Face(color14, v14[76], v14[77], v14[93], v14[92]));
    faces.push(new Face(color14, v14[76], v14[77], v14[109], v14[108]));
    faces.push(new Face(color14, v14[76], v14[78], v14[94], v14[92]));
    faces.push(new Face(color14, v14[76], v14[78], v14[110], v14[108]));
    faces.push(new Face(color14, v14[76], v14[92], v14[124], v14[108]));
    faces.push(new Face(color14, v14[77], v14[79], v14[95], v14[93]));
    faces.push(new Face(color14, v14[77], v14[79], v14[111], v14[109]));
    faces.push(new Face(color14, v14[77], v14[93], v14[125], v14[109]));
    faces.push(new Face(color14, v14[78], v14[79], v14[95], v14[94]));
    faces.push(new Face(color14, v14[78], v14[79], v14[111], v14[110]));
    faces.push(new Face(color14, v14[78], v14[94], v14[126], v14[110]));
    faces.push(new Face(color14, v14[79], v14[95], v14[127], v14[111]));
    faces.push(new Face(color14, v14[80], v14[81], v14[83], v14[82]));
    faces.push(new Face(color14, v14[80], v14[81], v14[85], v14[84]));
    faces.push(new Face(color14, v14[80], v14[81], v14[89], v14[88]));
    faces.push(new Face(color14, v14[80], v14[81], v14[113], v14[112]));
    faces.push(new Face(color14, v14[80], v14[82], v14[86], v14[84]));
    faces.push(new Face(color14, v14[80], v14[82], v14[90], v14[88]));
    faces.push(new Face(color14, v14[80], v14[82], v14[114], v14[112]));
    faces.push(new Face(color14, v14[80], v14[84], v14[92], v14[88]));
    faces.push(new Face(color14, v14[80], v14[84], v14[116], v14[112]));
    faces.push(new Face(color14, v14[80], v14[88], v14[120], v14[112]));
    faces.push(new Face(color14, v14[81], v14[83], v14[87], v14[85]));
    faces.push(new Face(color14, v14[81], v14[83], v14[91], v14[89]));
    faces.push(new Face(color14, v14[81], v14[83], v14[115], v14[113]));
    faces.push(new Face(color14, v14[81], v14[85], v14[93], v14[89]));
    faces.push(new Face(color14, v14[81], v14[85], v14[117], v14[113]));
    faces.push(new Face(color14, v14[81], v14[89], v14[121], v14[113]));
    faces.push(new Face(color14, v14[82], v14[83], v14[87], v14[86]));
    faces.push(new Face(color14, v14[82], v14[83], v14[91], v14[90]));
    faces.push(new Face(color14, v14[82], v14[83], v14[115], v14[114]));
    faces.push(new Face(color14, v14[82], v14[86], v14[94], v14[90]));
    faces.push(new Face(color14, v14[82], v14[86], v14[118], v14[114]));
    faces.push(new Face(color14, v14[82], v14[90], v14[122], v14[114]));
    faces.push(new Face(color14, v14[83], v14[87], v14[95], v14[91]));
    faces.push(new Face(color14, v14[83], v14[87], v14[119], v14[115]));
    faces.push(new Face(color14, v14[83], v14[91], v14[123], v14[115]));
    faces.push(new Face(color14, v14[84], v14[85], v14[87], v14[86]));
    faces.push(new Face(color14, v14[84], v14[85], v14[93], v14[92]));
    faces.push(new Face(color14, v14[84], v14[85], v14[117], v14[116]));
    faces.push(new Face(color14, v14[84], v14[86], v14[94], v14[92]));
    faces.push(new Face(color14, v14[84], v14[86], v14[118], v14[116]));
    faces.push(new Face(color14, v14[84], v14[92], v14[124], v14[116]));
    faces.push(new Face(color14, v14[85], v14[87], v14[95], v14[93]));
    faces.push(new Face(color14, v14[85], v14[87], v14[119], v14[117]));
    faces.push(new Face(color14, v14[85], v14[93], v14[125], v14[117]));
    faces.push(new Face(color14, v14[86], v14[87], v14[95], v14[94]));
    faces.push(new Face(color14, v14[86], v14[87], v14[119], v14[118]));
    faces.push(new Face(color14, v14[86], v14[94], v14[126], v14[118]));
    faces.push(new Face(color14, v14[87], v14[95], v14[127], v14[119]));
    faces.push(new Face(color14, v14[88], v14[89], v14[91], v14[90]));
    faces.push(new Face(color14, v14[88], v14[89], v14[93], v14[92]));
    faces.push(new Face(color14, v14[88], v14[89], v14[121], v14[120]));
    faces.push(new Face(color14, v14[88], v14[90], v14[94], v14[92]));
    faces.push(new Face(color14, v14[88], v14[90], v14[122], v14[120]));
    faces.push(new Face(color14, v14[88], v14[92], v14[124], v14[120]));
    faces.push(new Face(color14, v14[89], v14[91], v14[95], v14[93]));
    faces.push(new Face(color14, v14[89], v14[91], v14[123], v14[121]));
    faces.push(new Face(color14, v14[89], v14[93], v14[125], v14[121]));
    faces.push(new Face(color14, v14[90], v14[91], v14[95], v14[94]));
    faces.push(new Face(color14, v14[90], v14[91], v14[123], v14[122]));
    faces.push(new Face(color14, v14[90], v14[94], v14[126], v14[122]));
    faces.push(new Face(color14, v14[91], v14[95], v14[127], v14[123]));
    faces.push(new Face(color14, v14[92], v14[93], v14[95], v14[94]));
    faces.push(new Face(color14, v14[92], v14[93], v14[125], v14[124]));
    faces.push(new Face(color14, v14[92], v14[94], v14[126], v14[124]));
    faces.push(new Face(color14, v14[93], v14[95], v14[127], v14[125]));
    faces.push(new Face(color14, v14[94], v14[95], v14[127], v14[126]));
    faces.push(new Face(color14, v14[96], v14[97], v14[99], v14[98]));
    faces.push(new Face(color14, v14[96], v14[97], v14[101], v14[100]));
    faces.push(new Face(color14, v14[96], v14[97], v14[105], v14[104]));
    faces.push(new Face(color14, v14[96], v14[97], v14[113], v14[112]));
    faces.push(new Face(color14, v14[96], v14[98], v14[102], v14[100]));
    faces.push(new Face(color14, v14[96], v14[98], v14[106], v14[104]));
    faces.push(new Face(color14, v14[96], v14[98], v14[114], v14[112]));
    faces.push(new Face(color14, v14[96], v14[100], v14[108], v14[104]));
    faces.push(new Face(color14, v14[96], v14[100], v14[116], v14[112]));
    faces.push(new Face(color14, v14[96], v14[104], v14[120], v14[112]));
    faces.push(new Face(color14, v14[97], v14[99], v14[103], v14[101]));
    faces.push(new Face(color14, v14[97], v14[99], v14[107], v14[105]));
    faces.push(new Face(color14, v14[97], v14[99], v14[115], v14[113]));
    faces.push(new Face(color14, v14[97], v14[101], v14[109], v14[105]));
    faces.push(new Face(color14, v14[97], v14[101], v14[117], v14[113]));
    faces.push(new Face(color14, v14[97], v14[105], v14[121], v14[113]));
    faces.push(new Face(color14, v14[98], v14[99], v14[103], v14[102]));
    faces.push(new Face(color14, v14[98], v14[99], v14[107], v14[106]));
    faces.push(new Face(color14, v14[98], v14[99], v14[115], v14[114]));
    faces.push(new Face(color14, v14[98], v14[102], v14[110], v14[106]));
    faces.push(new Face(color14, v14[98], v14[102], v14[118], v14[114]));
    faces.push(new Face(color14, v14[98], v14[106], v14[122], v14[114]));
    faces.push(new Face(color14, v14[99], v14[103], v14[111], v14[107]));
    faces.push(new Face(color14, v14[99], v14[103], v14[119], v14[115]));
    faces.push(new Face(color14, v14[99], v14[107], v14[123], v14[115]));
    faces.push(new Face(color14, v14[100], v14[101], v14[103], v14[102]));
    faces.push(new Face(color14, v14[100], v14[101], v14[109], v14[108]));
    faces.push(new Face(color14, v14[100], v14[101], v14[117], v14[116]));
    faces.push(new Face(color14, v14[100], v14[102], v14[110], v14[108]));
    faces.push(new Face(color14, v14[100], v14[102], v14[118], v14[116]));
    faces.push(new Face(color14, v14[100], v14[108], v14[124], v14[116]));
    faces.push(new Face(color14, v14[101], v14[103], v14[111], v14[109]));
    faces.push(new Face(color14, v14[101], v14[103], v14[119], v14[117]));
    faces.push(new Face(color14, v14[101], v14[109], v14[125], v14[117]));
    faces.push(new Face(color14, v14[102], v14[103], v14[111], v14[110]));
    faces.push(new Face(color14, v14[102], v14[103], v14[119], v14[118]));
    faces.push(new Face(color14, v14[102], v14[110], v14[126], v14[118]));
    faces.push(new Face(color14, v14[103], v14[111], v14[127], v14[119]));
    faces.push(new Face(color14, v14[104], v14[105], v14[107], v14[106]));
    faces.push(new Face(color14, v14[104], v14[105], v14[109], v14[108]));
    faces.push(new Face(color14, v14[104], v14[105], v14[121], v14[120]));
    faces.push(new Face(color14, v14[104], v14[106], v14[110], v14[108]));
    faces.push(new Face(color14, v14[104], v14[106], v14[122], v14[120]));
    faces.push(new Face(color14, v14[104], v14[108], v14[124], v14[120]));
    faces.push(new Face(color14, v14[105], v14[107], v14[111], v14[109]));
    faces.push(new Face(color14, v14[105], v14[107], v14[123], v14[121]));
    faces.push(new Face(color14, v14[105], v14[109], v14[125], v14[121]));
    faces.push(new Face(color14, v14[106], v14[107], v14[111], v14[110]));
    faces.push(new Face(color14, v14[106], v14[107], v14[123], v14[122]));
    faces.push(new Face(color14, v14[106], v14[110], v14[126], v14[122]));
    faces.push(new Face(color14, v14[107], v14[111], v14[127], v14[123]));
    faces.push(new Face(color14, v14[108], v14[109], v14[111], v14[110]));
    faces.push(new Face(color14, v14[108], v14[109], v14[125], v14[124]));
    faces.push(new Face(color14, v14[108], v14[110], v14[126], v14[124]));
    faces.push(new Face(color14, v14[109], v14[111], v14[127], v14[125]));
    faces.push(new Face(color14, v14[110], v14[111], v14[127], v14[126]));
    faces.push(new Face(color14, v14[112], v14[113], v14[115], v14[114]));
    faces.push(new Face(color14, v14[112], v14[113], v14[117], v14[116]));
    faces.push(new Face(color14, v14[112], v14[113], v14[121], v14[120]));
    faces.push(new Face(color14, v14[112], v14[114], v14[118], v14[116]));
    faces.push(new Face(color14, v14[112], v14[114], v14[122], v14[120]));
    faces.push(new Face(color14, v14[112], v14[116], v14[124], v14[120]));
    faces.push(new Face(color14, v14[113], v14[115], v14[119], v14[117]));
    faces.push(new Face(color14, v14[113], v14[115], v14[123], v14[121]));
    faces.push(new Face(color14, v14[113], v14[117], v14[125], v14[121]));
    faces.push(new Face(color14, v14[114], v14[115], v14[119], v14[118]));
    faces.push(new Face(color14, v14[114], v14[115], v14[123], v14[122]));
    faces.push(new Face(color14, v14[114], v14[118], v14[126], v14[122]));
    faces.push(new Face(color14, v14[115], v14[119], v14[127], v14[123]));
    faces.push(new Face(color14, v14[116], v14[117], v14[119], v14[118]));
    faces.push(new Face(color14, v14[116], v14[117], v14[125], v14[124]));
    faces.push(new Face(color14, v14[116], v14[118], v14[126], v14[124]));
    faces.push(new Face(color14, v14[117], v14[119], v14[127], v14[125]));
    faces.push(new Face(color14, v14[118], v14[119], v14[127], v14[126]));
    faces.push(new Face(color14, v14[120], v14[121], v14[123], v14[122]));
    faces.push(new Face(color14, v14[120], v14[121], v14[125], v14[124]));
    faces.push(new Face(color14, v14[120], v14[122], v14[126], v14[124]));
    faces.push(new Face(color14, v14[121], v14[123], v14[127], v14[125]));
    faces.push(new Face(color14, v14[122], v14[123], v14[127], v14[126]));
    faces.push(new Face(color14, v14[124], v14[125], v14[127], v14[126]));
    for (let i = 0; i < v14.length; i++) {
        v14[i].rotate(r);
        v14[i].project();
    }

    v15[0] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v15[1] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v15[2] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v15[3] = new Vertex(-w/2, -w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v15[4] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v15[5] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v15[6] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v15[7] = new Vertex(-w/2, -w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2);
    v15[8] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v15[9] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v15[10] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v15[11] = new Vertex(-w/2, -w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2);
    v15[12] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v15[13] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2);
    v15[14] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2);
    v15[15] = new Vertex(-w/2, -w/2, -w/2, w/2, w/2, w/2, w/2, -w/2);
    v15[16] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v15[17] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v15[18] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v15[19] = new Vertex(-w/2, -w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v15[20] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v15[21] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v15[22] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v15[23] = new Vertex(-w/2, -w/2, w/2, -w/2, w/2, w/2, w/2, -w/2);
    v15[24] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v15[25] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v15[26] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v15[27] = new Vertex(-w/2, -w/2, w/2, w/2, -w/2, w/2, w/2, -w/2);
    v15[28] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v15[29] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, -w/2, w/2, -w/2);
    v15[30] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, w/2, -w/2, -w/2);
    v15[31] = new Vertex(-w/2, -w/2, w/2, w/2, w/2, w/2, w/2, -w/2);
    v15[32] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v15[33] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v15[34] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v15[35] = new Vertex(-w/2, w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v15[36] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v15[37] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v15[38] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v15[39] = new Vertex(-w/2, w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2);
    v15[40] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v15[41] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v15[42] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v15[43] = new Vertex(-w/2, w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2);
    v15[44] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v15[45] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2);
    v15[46] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2);
    v15[47] = new Vertex(-w/2, w/2, -w/2, w/2, w/2, w/2, w/2, -w/2);
    v15[48] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v15[49] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v15[50] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v15[51] = new Vertex(-w/2, w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v15[52] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v15[53] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v15[54] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v15[55] = new Vertex(-w/2, w/2, w/2, -w/2, w/2, w/2, w/2, -w/2);
    v15[56] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v15[57] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v15[58] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v15[59] = new Vertex(-w/2, w/2, w/2, w/2, -w/2, w/2, w/2, -w/2);
    v15[60] = new Vertex(-w/2, w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v15[61] = new Vertex(-w/2, w/2, w/2, w/2, w/2, -w/2, w/2, -w/2);
    v15[62] = new Vertex(-w/2, w/2, w/2, w/2, w/2, w/2, -w/2, -w/2);
    v15[63] = new Vertex(-w/2, w/2, w/2, w/2, w/2, w/2, w/2, -w/2);
    v15[64] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v15[65] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v15[66] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v15[67] = new Vertex(w/2, -w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v15[68] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v15[69] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v15[70] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v15[71] = new Vertex(w/2, -w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2);
    v15[72] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v15[73] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v15[74] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v15[75] = new Vertex(w/2, -w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2);
    v15[76] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v15[77] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2);
    v15[78] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2);
    v15[79] = new Vertex(w/2, -w/2, -w/2, w/2, w/2, w/2, w/2, -w/2);
    v15[80] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v15[81] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v15[82] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v15[83] = new Vertex(w/2, -w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v15[84] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v15[85] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v15[86] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v15[87] = new Vertex(w/2, -w/2, w/2, -w/2, w/2, w/2, w/2, -w/2);
    v15[88] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v15[89] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v15[90] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v15[91] = new Vertex(w/2, -w/2, w/2, w/2, -w/2, w/2, w/2, -w/2);
    v15[92] = new Vertex(w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v15[93] = new Vertex(w/2, -w/2, w/2, w/2, w/2, -w/2, w/2, -w/2);
    v15[94] = new Vertex(w/2, -w/2, w/2, w/2, w/2, w/2, -w/2, -w/2);
    v15[95] = new Vertex(w/2, -w/2, w/2, w/2, w/2, w/2, w/2, -w/2);
    v15[96] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v15[97] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v15[98] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v15[99] = new Vertex(w/2, w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v15[100] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v15[101] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v15[102] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v15[103] = new Vertex(w/2, w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2);
    v15[104] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v15[105] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v15[106] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v15[107] = new Vertex(w/2, w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2);
    v15[108] = new Vertex(w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v15[109] = new Vertex(w/2, w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2);
    v15[110] = new Vertex(w/2, w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2);
    v15[111] = new Vertex(w/2, w/2, -w/2, w/2, w/2, w/2, w/2, -w/2);
    v15[112] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2);
    v15[113] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2);
    v15[114] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2);
    v15[115] = new Vertex(w/2, w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2);
    v15[116] = new Vertex(w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2);
    v15[117] = new Vertex(w/2, w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2);
    v15[118] = new Vertex(w/2, w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2);
    v15[119] = new Vertex(w/2, w/2, w/2, -w/2, w/2, w/2, w/2, -w/2);
    v15[120] = new Vertex(w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2);
    v15[121] = new Vertex(w/2, w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2);
    v15[122] = new Vertex(w/2, w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2);
    v15[123] = new Vertex(w/2, w/2, w/2, w/2, -w/2, w/2, w/2, -w/2);
    v15[124] = new Vertex(w/2, w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2);
    v15[125] = new Vertex(w/2, w/2, w/2, w/2, w/2, -w/2, w/2, -w/2);
    v15[126] = new Vertex(w/2, w/2, w/2, w/2, w/2, w/2, -w/2, -w/2);
    v15[127] = new Vertex(w/2, w/2, w/2, w/2, w/2, w/2, w/2, -w/2);
    faces.push(new Face(color15, v15[0], v15[1], v15[3], v15[2]));
    faces.push(new Face(color15, v15[0], v15[1], v15[5], v15[4]));
    faces.push(new Face(color15, v15[0], v15[1], v15[9], v15[8]));
    faces.push(new Face(color15, v15[0], v15[1], v15[17], v15[16]));
    faces.push(new Face(color15, v15[0], v15[1], v15[33], v15[32]));
    faces.push(new Face(color15, v15[0], v15[1], v15[65], v15[64]));
    faces.push(new Face(color15, v15[0], v15[2], v15[6], v15[4]));
    faces.push(new Face(color15, v15[0], v15[2], v15[10], v15[8]));
    faces.push(new Face(color15, v15[0], v15[2], v15[18], v15[16]));
    faces.push(new Face(color15, v15[0], v15[2], v15[34], v15[32]));
    faces.push(new Face(color15, v15[0], v15[2], v15[66], v15[64]));
    faces.push(new Face(color15, v15[0], v15[4], v15[12], v15[8]));
    faces.push(new Face(color15, v15[0], v15[4], v15[20], v15[16]));
    faces.push(new Face(color15, v15[0], v15[4], v15[36], v15[32]));
    faces.push(new Face(color15, v15[0], v15[4], v15[68], v15[64]));
    faces.push(new Face(color15, v15[0], v15[8], v15[24], v15[16]));
    faces.push(new Face(color15, v15[0], v15[8], v15[40], v15[32]));
    faces.push(new Face(color15, v15[0], v15[8], v15[72], v15[64]));
    faces.push(new Face(color15, v15[0], v15[16], v15[48], v15[32]));
    faces.push(new Face(color15, v15[0], v15[16], v15[80], v15[64]));
    faces.push(new Face(color15, v15[0], v15[32], v15[96], v15[64]));
    faces.push(new Face(color15, v15[1], v15[3], v15[7], v15[5]));
    faces.push(new Face(color15, v15[1], v15[3], v15[11], v15[9]));
    faces.push(new Face(color15, v15[1], v15[3], v15[19], v15[17]));
    faces.push(new Face(color15, v15[1], v15[3], v15[35], v15[33]));
    faces.push(new Face(color15, v15[1], v15[3], v15[67], v15[65]));
    faces.push(new Face(color15, v15[1], v15[5], v15[13], v15[9]));
    faces.push(new Face(color15, v15[1], v15[5], v15[21], v15[17]));
    faces.push(new Face(color15, v15[1], v15[5], v15[37], v15[33]));
    faces.push(new Face(color15, v15[1], v15[5], v15[69], v15[65]));
    faces.push(new Face(color15, v15[1], v15[9], v15[25], v15[17]));
    faces.push(new Face(color15, v15[1], v15[9], v15[41], v15[33]));
    faces.push(new Face(color15, v15[1], v15[9], v15[73], v15[65]));
    faces.push(new Face(color15, v15[1], v15[17], v15[49], v15[33]));
    faces.push(new Face(color15, v15[1], v15[17], v15[81], v15[65]));
    faces.push(new Face(color15, v15[1], v15[33], v15[97], v15[65]));
    faces.push(new Face(color15, v15[2], v15[3], v15[7], v15[6]));
    faces.push(new Face(color15, v15[2], v15[3], v15[11], v15[10]));
    faces.push(new Face(color15, v15[2], v15[3], v15[19], v15[18]));
    faces.push(new Face(color15, v15[2], v15[3], v15[35], v15[34]));
    faces.push(new Face(color15, v15[2], v15[3], v15[67], v15[66]));
    faces.push(new Face(color15, v15[2], v15[6], v15[14], v15[10]));
    faces.push(new Face(color15, v15[2], v15[6], v15[22], v15[18]));
    faces.push(new Face(color15, v15[2], v15[6], v15[38], v15[34]));
    faces.push(new Face(color15, v15[2], v15[6], v15[70], v15[66]));
    faces.push(new Face(color15, v15[2], v15[10], v15[26], v15[18]));
    faces.push(new Face(color15, v15[2], v15[10], v15[42], v15[34]));
    faces.push(new Face(color15, v15[2], v15[10], v15[74], v15[66]));
    faces.push(new Face(color15, v15[2], v15[18], v15[50], v15[34]));
    faces.push(new Face(color15, v15[2], v15[18], v15[82], v15[66]));
    faces.push(new Face(color15, v15[2], v15[34], v15[98], v15[66]));
    faces.push(new Face(color15, v15[3], v15[7], v15[15], v15[11]));
    faces.push(new Face(color15, v15[3], v15[7], v15[23], v15[19]));
    faces.push(new Face(color15, v15[3], v15[7], v15[39], v15[35]));
    faces.push(new Face(color15, v15[3], v15[7], v15[71], v15[67]));
    faces.push(new Face(color15, v15[3], v15[11], v15[27], v15[19]));
    faces.push(new Face(color15, v15[3], v15[11], v15[43], v15[35]));
    faces.push(new Face(color15, v15[3], v15[11], v15[75], v15[67]));
    faces.push(new Face(color15, v15[3], v15[19], v15[51], v15[35]));
    faces.push(new Face(color15, v15[3], v15[19], v15[83], v15[67]));
    faces.push(new Face(color15, v15[3], v15[35], v15[99], v15[67]));
    faces.push(new Face(color15, v15[4], v15[5], v15[7], v15[6]));
    faces.push(new Face(color15, v15[4], v15[5], v15[13], v15[12]));
    faces.push(new Face(color15, v15[4], v15[5], v15[21], v15[20]));
    faces.push(new Face(color15, v15[4], v15[5], v15[37], v15[36]));
    faces.push(new Face(color15, v15[4], v15[5], v15[69], v15[68]));
    faces.push(new Face(color15, v15[4], v15[6], v15[14], v15[12]));
    faces.push(new Face(color15, v15[4], v15[6], v15[22], v15[20]));
    faces.push(new Face(color15, v15[4], v15[6], v15[38], v15[36]));
    faces.push(new Face(color15, v15[4], v15[6], v15[70], v15[68]));
    faces.push(new Face(color15, v15[4], v15[12], v15[28], v15[20]));
    faces.push(new Face(color15, v15[4], v15[12], v15[44], v15[36]));
    faces.push(new Face(color15, v15[4], v15[12], v15[76], v15[68]));
    faces.push(new Face(color15, v15[4], v15[20], v15[52], v15[36]));
    faces.push(new Face(color15, v15[4], v15[20], v15[84], v15[68]));
    faces.push(new Face(color15, v15[4], v15[36], v15[100], v15[68]));
    faces.push(new Face(color15, v15[5], v15[7], v15[15], v15[13]));
    faces.push(new Face(color15, v15[5], v15[7], v15[23], v15[21]));
    faces.push(new Face(color15, v15[5], v15[7], v15[39], v15[37]));
    faces.push(new Face(color15, v15[5], v15[7], v15[71], v15[69]));
    faces.push(new Face(color15, v15[5], v15[13], v15[29], v15[21]));
    faces.push(new Face(color15, v15[5], v15[13], v15[45], v15[37]));
    faces.push(new Face(color15, v15[5], v15[13], v15[77], v15[69]));
    faces.push(new Face(color15, v15[5], v15[21], v15[53], v15[37]));
    faces.push(new Face(color15, v15[5], v15[21], v15[85], v15[69]));
    faces.push(new Face(color15, v15[5], v15[37], v15[101], v15[69]));
    faces.push(new Face(color15, v15[6], v15[7], v15[15], v15[14]));
    faces.push(new Face(color15, v15[6], v15[7], v15[23], v15[22]));
    faces.push(new Face(color15, v15[6], v15[7], v15[39], v15[38]));
    faces.push(new Face(color15, v15[6], v15[7], v15[71], v15[70]));
    faces.push(new Face(color15, v15[6], v15[14], v15[30], v15[22]));
    faces.push(new Face(color15, v15[6], v15[14], v15[46], v15[38]));
    faces.push(new Face(color15, v15[6], v15[14], v15[78], v15[70]));
    faces.push(new Face(color15, v15[6], v15[22], v15[54], v15[38]));
    faces.push(new Face(color15, v15[6], v15[22], v15[86], v15[70]));
    faces.push(new Face(color15, v15[6], v15[38], v15[102], v15[70]));
    faces.push(new Face(color15, v15[7], v15[15], v15[31], v15[23]));
    faces.push(new Face(color15, v15[7], v15[15], v15[47], v15[39]));
    faces.push(new Face(color15, v15[7], v15[15], v15[79], v15[71]));
    faces.push(new Face(color15, v15[7], v15[23], v15[55], v15[39]));
    faces.push(new Face(color15, v15[7], v15[23], v15[87], v15[71]));
    faces.push(new Face(color15, v15[7], v15[39], v15[103], v15[71]));
    faces.push(new Face(color15, v15[8], v15[9], v15[11], v15[10]));
    faces.push(new Face(color15, v15[8], v15[9], v15[13], v15[12]));
    faces.push(new Face(color15, v15[8], v15[9], v15[25], v15[24]));
    faces.push(new Face(color15, v15[8], v15[9], v15[41], v15[40]));
    faces.push(new Face(color15, v15[8], v15[9], v15[73], v15[72]));
    faces.push(new Face(color15, v15[8], v15[10], v15[14], v15[12]));
    faces.push(new Face(color15, v15[8], v15[10], v15[26], v15[24]));
    faces.push(new Face(color15, v15[8], v15[10], v15[42], v15[40]));
    faces.push(new Face(color15, v15[8], v15[10], v15[74], v15[72]));
    faces.push(new Face(color15, v15[8], v15[12], v15[28], v15[24]));
    faces.push(new Face(color15, v15[8], v15[12], v15[44], v15[40]));
    faces.push(new Face(color15, v15[8], v15[12], v15[76], v15[72]));
    faces.push(new Face(color15, v15[8], v15[24], v15[56], v15[40]));
    faces.push(new Face(color15, v15[8], v15[24], v15[88], v15[72]));
    faces.push(new Face(color15, v15[8], v15[40], v15[104], v15[72]));
    faces.push(new Face(color15, v15[9], v15[11], v15[15], v15[13]));
    faces.push(new Face(color15, v15[9], v15[11], v15[27], v15[25]));
    faces.push(new Face(color15, v15[9], v15[11], v15[43], v15[41]));
    faces.push(new Face(color15, v15[9], v15[11], v15[75], v15[73]));
    faces.push(new Face(color15, v15[9], v15[13], v15[29], v15[25]));
    faces.push(new Face(color15, v15[9], v15[13], v15[45], v15[41]));
    faces.push(new Face(color15, v15[9], v15[13], v15[77], v15[73]));
    faces.push(new Face(color15, v15[9], v15[25], v15[57], v15[41]));
    faces.push(new Face(color15, v15[9], v15[25], v15[89], v15[73]));
    faces.push(new Face(color15, v15[9], v15[41], v15[105], v15[73]));
    faces.push(new Face(color15, v15[10], v15[11], v15[15], v15[14]));
    faces.push(new Face(color15, v15[10], v15[11], v15[27], v15[26]));
    faces.push(new Face(color15, v15[10], v15[11], v15[43], v15[42]));
    faces.push(new Face(color15, v15[10], v15[11], v15[75], v15[74]));
    faces.push(new Face(color15, v15[10], v15[14], v15[30], v15[26]));
    faces.push(new Face(color15, v15[10], v15[14], v15[46], v15[42]));
    faces.push(new Face(color15, v15[10], v15[14], v15[78], v15[74]));
    faces.push(new Face(color15, v15[10], v15[26], v15[58], v15[42]));
    faces.push(new Face(color15, v15[10], v15[26], v15[90], v15[74]));
    faces.push(new Face(color15, v15[10], v15[42], v15[106], v15[74]));
    faces.push(new Face(color15, v15[11], v15[15], v15[31], v15[27]));
    faces.push(new Face(color15, v15[11], v15[15], v15[47], v15[43]));
    faces.push(new Face(color15, v15[11], v15[15], v15[79], v15[75]));
    faces.push(new Face(color15, v15[11], v15[27], v15[59], v15[43]));
    faces.push(new Face(color15, v15[11], v15[27], v15[91], v15[75]));
    faces.push(new Face(color15, v15[11], v15[43], v15[107], v15[75]));
    faces.push(new Face(color15, v15[12], v15[13], v15[15], v15[14]));
    faces.push(new Face(color15, v15[12], v15[13], v15[29], v15[28]));
    faces.push(new Face(color15, v15[12], v15[13], v15[45], v15[44]));
    faces.push(new Face(color15, v15[12], v15[13], v15[77], v15[76]));
    faces.push(new Face(color15, v15[12], v15[14], v15[30], v15[28]));
    faces.push(new Face(color15, v15[12], v15[14], v15[46], v15[44]));
    faces.push(new Face(color15, v15[12], v15[14], v15[78], v15[76]));
    faces.push(new Face(color15, v15[12], v15[28], v15[60], v15[44]));
    faces.push(new Face(color15, v15[12], v15[28], v15[92], v15[76]));
    faces.push(new Face(color15, v15[12], v15[44], v15[108], v15[76]));
    faces.push(new Face(color15, v15[13], v15[15], v15[31], v15[29]));
    faces.push(new Face(color15, v15[13], v15[15], v15[47], v15[45]));
    faces.push(new Face(color15, v15[13], v15[15], v15[79], v15[77]));
    faces.push(new Face(color15, v15[13], v15[29], v15[61], v15[45]));
    faces.push(new Face(color15, v15[13], v15[29], v15[93], v15[77]));
    faces.push(new Face(color15, v15[13], v15[45], v15[109], v15[77]));
    faces.push(new Face(color15, v15[14], v15[15], v15[31], v15[30]));
    faces.push(new Face(color15, v15[14], v15[15], v15[47], v15[46]));
    faces.push(new Face(color15, v15[14], v15[15], v15[79], v15[78]));
    faces.push(new Face(color15, v15[14], v15[30], v15[62], v15[46]));
    faces.push(new Face(color15, v15[14], v15[30], v15[94], v15[78]));
    faces.push(new Face(color15, v15[14], v15[46], v15[110], v15[78]));
    faces.push(new Face(color15, v15[15], v15[31], v15[63], v15[47]));
    faces.push(new Face(color15, v15[15], v15[31], v15[95], v15[79]));
    faces.push(new Face(color15, v15[15], v15[47], v15[111], v15[79]));
    faces.push(new Face(color15, v15[16], v15[17], v15[19], v15[18]));
    faces.push(new Face(color15, v15[16], v15[17], v15[21], v15[20]));
    faces.push(new Face(color15, v15[16], v15[17], v15[25], v15[24]));
    faces.push(new Face(color15, v15[16], v15[17], v15[49], v15[48]));
    faces.push(new Face(color15, v15[16], v15[17], v15[81], v15[80]));
    faces.push(new Face(color15, v15[16], v15[18], v15[22], v15[20]));
    faces.push(new Face(color15, v15[16], v15[18], v15[26], v15[24]));
    faces.push(new Face(color15, v15[16], v15[18], v15[50], v15[48]));
    faces.push(new Face(color15, v15[16], v15[18], v15[82], v15[80]));
    faces.push(new Face(color15, v15[16], v15[20], v15[28], v15[24]));
    faces.push(new Face(color15, v15[16], v15[20], v15[52], v15[48]));
    faces.push(new Face(color15, v15[16], v15[20], v15[84], v15[80]));
    faces.push(new Face(color15, v15[16], v15[24], v15[56], v15[48]));
    faces.push(new Face(color15, v15[16], v15[24], v15[88], v15[80]));
    faces.push(new Face(color15, v15[16], v15[48], v15[112], v15[80]));
    faces.push(new Face(color15, v15[17], v15[19], v15[23], v15[21]));
    faces.push(new Face(color15, v15[17], v15[19], v15[27], v15[25]));
    faces.push(new Face(color15, v15[17], v15[19], v15[51], v15[49]));
    faces.push(new Face(color15, v15[17], v15[19], v15[83], v15[81]));
    faces.push(new Face(color15, v15[17], v15[21], v15[29], v15[25]));
    faces.push(new Face(color15, v15[17], v15[21], v15[53], v15[49]));
    faces.push(new Face(color15, v15[17], v15[21], v15[85], v15[81]));
    faces.push(new Face(color15, v15[17], v15[25], v15[57], v15[49]));
    faces.push(new Face(color15, v15[17], v15[25], v15[89], v15[81]));
    faces.push(new Face(color15, v15[17], v15[49], v15[113], v15[81]));
    faces.push(new Face(color15, v15[18], v15[19], v15[23], v15[22]));
    faces.push(new Face(color15, v15[18], v15[19], v15[27], v15[26]));
    faces.push(new Face(color15, v15[18], v15[19], v15[51], v15[50]));
    faces.push(new Face(color15, v15[18], v15[19], v15[83], v15[82]));
    faces.push(new Face(color15, v15[18], v15[22], v15[30], v15[26]));
    faces.push(new Face(color15, v15[18], v15[22], v15[54], v15[50]));
    faces.push(new Face(color15, v15[18], v15[22], v15[86], v15[82]));
    faces.push(new Face(color15, v15[18], v15[26], v15[58], v15[50]));
    faces.push(new Face(color15, v15[18], v15[26], v15[90], v15[82]));
    faces.push(new Face(color15, v15[18], v15[50], v15[114], v15[82]));
    faces.push(new Face(color15, v15[19], v15[23], v15[31], v15[27]));
    faces.push(new Face(color15, v15[19], v15[23], v15[55], v15[51]));
    faces.push(new Face(color15, v15[19], v15[23], v15[87], v15[83]));
    faces.push(new Face(color15, v15[19], v15[27], v15[59], v15[51]));
    faces.push(new Face(color15, v15[19], v15[27], v15[91], v15[83]));
    faces.push(new Face(color15, v15[19], v15[51], v15[115], v15[83]));
    faces.push(new Face(color15, v15[20], v15[21], v15[23], v15[22]));
    faces.push(new Face(color15, v15[20], v15[21], v15[29], v15[28]));
    faces.push(new Face(color15, v15[20], v15[21], v15[53], v15[52]));
    faces.push(new Face(color15, v15[20], v15[21], v15[85], v15[84]));
    faces.push(new Face(color15, v15[20], v15[22], v15[30], v15[28]));
    faces.push(new Face(color15, v15[20], v15[22], v15[54], v15[52]));
    faces.push(new Face(color15, v15[20], v15[22], v15[86], v15[84]));
    faces.push(new Face(color15, v15[20], v15[28], v15[60], v15[52]));
    faces.push(new Face(color15, v15[20], v15[28], v15[92], v15[84]));
    faces.push(new Face(color15, v15[20], v15[52], v15[116], v15[84]));
    faces.push(new Face(color15, v15[21], v15[23], v15[31], v15[29]));
    faces.push(new Face(color15, v15[21], v15[23], v15[55], v15[53]));
    faces.push(new Face(color15, v15[21], v15[23], v15[87], v15[85]));
    faces.push(new Face(color15, v15[21], v15[29], v15[61], v15[53]));
    faces.push(new Face(color15, v15[21], v15[29], v15[93], v15[85]));
    faces.push(new Face(color15, v15[21], v15[53], v15[117], v15[85]));
    faces.push(new Face(color15, v15[22], v15[23], v15[31], v15[30]));
    faces.push(new Face(color15, v15[22], v15[23], v15[55], v15[54]));
    faces.push(new Face(color15, v15[22], v15[23], v15[87], v15[86]));
    faces.push(new Face(color15, v15[22], v15[30], v15[62], v15[54]));
    faces.push(new Face(color15, v15[22], v15[30], v15[94], v15[86]));
    faces.push(new Face(color15, v15[22], v15[54], v15[118], v15[86]));
    faces.push(new Face(color15, v15[23], v15[31], v15[63], v15[55]));
    faces.push(new Face(color15, v15[23], v15[31], v15[95], v15[87]));
    faces.push(new Face(color15, v15[23], v15[55], v15[119], v15[87]));
    faces.push(new Face(color15, v15[24], v15[25], v15[27], v15[26]));
    faces.push(new Face(color15, v15[24], v15[25], v15[29], v15[28]));
    faces.push(new Face(color15, v15[24], v15[25], v15[57], v15[56]));
    faces.push(new Face(color15, v15[24], v15[25], v15[89], v15[88]));
    faces.push(new Face(color15, v15[24], v15[26], v15[30], v15[28]));
    faces.push(new Face(color15, v15[24], v15[26], v15[58], v15[56]));
    faces.push(new Face(color15, v15[24], v15[26], v15[90], v15[88]));
    faces.push(new Face(color15, v15[24], v15[28], v15[60], v15[56]));
    faces.push(new Face(color15, v15[24], v15[28], v15[92], v15[88]));
    faces.push(new Face(color15, v15[24], v15[56], v15[120], v15[88]));
    faces.push(new Face(color15, v15[25], v15[27], v15[31], v15[29]));
    faces.push(new Face(color15, v15[25], v15[27], v15[59], v15[57]));
    faces.push(new Face(color15, v15[25], v15[27], v15[91], v15[89]));
    faces.push(new Face(color15, v15[25], v15[29], v15[61], v15[57]));
    faces.push(new Face(color15, v15[25], v15[29], v15[93], v15[89]));
    faces.push(new Face(color15, v15[25], v15[57], v15[121], v15[89]));
    faces.push(new Face(color15, v15[26], v15[27], v15[31], v15[30]));
    faces.push(new Face(color15, v15[26], v15[27], v15[59], v15[58]));
    faces.push(new Face(color15, v15[26], v15[27], v15[91], v15[90]));
    faces.push(new Face(color15, v15[26], v15[30], v15[62], v15[58]));
    faces.push(new Face(color15, v15[26], v15[30], v15[94], v15[90]));
    faces.push(new Face(color15, v15[26], v15[58], v15[122], v15[90]));
    faces.push(new Face(color15, v15[27], v15[31], v15[63], v15[59]));
    faces.push(new Face(color15, v15[27], v15[31], v15[95], v15[91]));
    faces.push(new Face(color15, v15[27], v15[59], v15[123], v15[91]));
    faces.push(new Face(color15, v15[28], v15[29], v15[31], v15[30]));
    faces.push(new Face(color15, v15[28], v15[29], v15[61], v15[60]));
    faces.push(new Face(color15, v15[28], v15[29], v15[93], v15[92]));
    faces.push(new Face(color15, v15[28], v15[30], v15[62], v15[60]));
    faces.push(new Face(color15, v15[28], v15[30], v15[94], v15[92]));
    faces.push(new Face(color15, v15[28], v15[60], v15[124], v15[92]));
    faces.push(new Face(color15, v15[29], v15[31], v15[63], v15[61]));
    faces.push(new Face(color15, v15[29], v15[31], v15[95], v15[93]));
    faces.push(new Face(color15, v15[29], v15[61], v15[125], v15[93]));
    faces.push(new Face(color15, v15[30], v15[31], v15[63], v15[62]));
    faces.push(new Face(color15, v15[30], v15[31], v15[95], v15[94]));
    faces.push(new Face(color15, v15[30], v15[62], v15[126], v15[94]));
    faces.push(new Face(color15, v15[31], v15[63], v15[127], v15[95]));
    faces.push(new Face(color15, v15[32], v15[33], v15[35], v15[34]));
    faces.push(new Face(color15, v15[32], v15[33], v15[37], v15[36]));
    faces.push(new Face(color15, v15[32], v15[33], v15[41], v15[40]));
    faces.push(new Face(color15, v15[32], v15[33], v15[49], v15[48]));
    faces.push(new Face(color15, v15[32], v15[33], v15[97], v15[96]));
    faces.push(new Face(color15, v15[32], v15[34], v15[38], v15[36]));
    faces.push(new Face(color15, v15[32], v15[34], v15[42], v15[40]));
    faces.push(new Face(color15, v15[32], v15[34], v15[50], v15[48]));
    faces.push(new Face(color15, v15[32], v15[34], v15[98], v15[96]));
    faces.push(new Face(color15, v15[32], v15[36], v15[44], v15[40]));
    faces.push(new Face(color15, v15[32], v15[36], v15[52], v15[48]));
    faces.push(new Face(color15, v15[32], v15[36], v15[100], v15[96]));
    faces.push(new Face(color15, v15[32], v15[40], v15[56], v15[48]));
    faces.push(new Face(color15, v15[32], v15[40], v15[104], v15[96]));
    faces.push(new Face(color15, v15[32], v15[48], v15[112], v15[96]));
    faces.push(new Face(color15, v15[33], v15[35], v15[39], v15[37]));
    faces.push(new Face(color15, v15[33], v15[35], v15[43], v15[41]));
    faces.push(new Face(color15, v15[33], v15[35], v15[51], v15[49]));
    faces.push(new Face(color15, v15[33], v15[35], v15[99], v15[97]));
    faces.push(new Face(color15, v15[33], v15[37], v15[45], v15[41]));
    faces.push(new Face(color15, v15[33], v15[37], v15[53], v15[49]));
    faces.push(new Face(color15, v15[33], v15[37], v15[101], v15[97]));
    faces.push(new Face(color15, v15[33], v15[41], v15[57], v15[49]));
    faces.push(new Face(color15, v15[33], v15[41], v15[105], v15[97]));
    faces.push(new Face(color15, v15[33], v15[49], v15[113], v15[97]));
    faces.push(new Face(color15, v15[34], v15[35], v15[39], v15[38]));
    faces.push(new Face(color15, v15[34], v15[35], v15[43], v15[42]));
    faces.push(new Face(color15, v15[34], v15[35], v15[51], v15[50]));
    faces.push(new Face(color15, v15[34], v15[35], v15[99], v15[98]));
    faces.push(new Face(color15, v15[34], v15[38], v15[46], v15[42]));
    faces.push(new Face(color15, v15[34], v15[38], v15[54], v15[50]));
    faces.push(new Face(color15, v15[34], v15[38], v15[102], v15[98]));
    faces.push(new Face(color15, v15[34], v15[42], v15[58], v15[50]));
    faces.push(new Face(color15, v15[34], v15[42], v15[106], v15[98]));
    faces.push(new Face(color15, v15[34], v15[50], v15[114], v15[98]));
    faces.push(new Face(color15, v15[35], v15[39], v15[47], v15[43]));
    faces.push(new Face(color15, v15[35], v15[39], v15[55], v15[51]));
    faces.push(new Face(color15, v15[35], v15[39], v15[103], v15[99]));
    faces.push(new Face(color15, v15[35], v15[43], v15[59], v15[51]));
    faces.push(new Face(color15, v15[35], v15[43], v15[107], v15[99]));
    faces.push(new Face(color15, v15[35], v15[51], v15[115], v15[99]));
    faces.push(new Face(color15, v15[36], v15[37], v15[39], v15[38]));
    faces.push(new Face(color15, v15[36], v15[37], v15[45], v15[44]));
    faces.push(new Face(color15, v15[36], v15[37], v15[53], v15[52]));
    faces.push(new Face(color15, v15[36], v15[37], v15[101], v15[100]));
    faces.push(new Face(color15, v15[36], v15[38], v15[46], v15[44]));
    faces.push(new Face(color15, v15[36], v15[38], v15[54], v15[52]));
    faces.push(new Face(color15, v15[36], v15[38], v15[102], v15[100]));
    faces.push(new Face(color15, v15[36], v15[44], v15[60], v15[52]));
    faces.push(new Face(color15, v15[36], v15[44], v15[108], v15[100]));
    faces.push(new Face(color15, v15[36], v15[52], v15[116], v15[100]));
    faces.push(new Face(color15, v15[37], v15[39], v15[47], v15[45]));
    faces.push(new Face(color15, v15[37], v15[39], v15[55], v15[53]));
    faces.push(new Face(color15, v15[37], v15[39], v15[103], v15[101]));
    faces.push(new Face(color15, v15[37], v15[45], v15[61], v15[53]));
    faces.push(new Face(color15, v15[37], v15[45], v15[109], v15[101]));
    faces.push(new Face(color15, v15[37], v15[53], v15[117], v15[101]));
    faces.push(new Face(color15, v15[38], v15[39], v15[47], v15[46]));
    faces.push(new Face(color15, v15[38], v15[39], v15[55], v15[54]));
    faces.push(new Face(color15, v15[38], v15[39], v15[103], v15[102]));
    faces.push(new Face(color15, v15[38], v15[46], v15[62], v15[54]));
    faces.push(new Face(color15, v15[38], v15[46], v15[110], v15[102]));
    faces.push(new Face(color15, v15[38], v15[54], v15[118], v15[102]));
    faces.push(new Face(color15, v15[39], v15[47], v15[63], v15[55]));
    faces.push(new Face(color15, v15[39], v15[47], v15[111], v15[103]));
    faces.push(new Face(color15, v15[39], v15[55], v15[119], v15[103]));
    faces.push(new Face(color15, v15[40], v15[41], v15[43], v15[42]));
    faces.push(new Face(color15, v15[40], v15[41], v15[45], v15[44]));
    faces.push(new Face(color15, v15[40], v15[41], v15[57], v15[56]));
    faces.push(new Face(color15, v15[40], v15[41], v15[105], v15[104]));
    faces.push(new Face(color15, v15[40], v15[42], v15[46], v15[44]));
    faces.push(new Face(color15, v15[40], v15[42], v15[58], v15[56]));
    faces.push(new Face(color15, v15[40], v15[42], v15[106], v15[104]));
    faces.push(new Face(color15, v15[40], v15[44], v15[60], v15[56]));
    faces.push(new Face(color15, v15[40], v15[44], v15[108], v15[104]));
    faces.push(new Face(color15, v15[40], v15[56], v15[120], v15[104]));
    faces.push(new Face(color15, v15[41], v15[43], v15[47], v15[45]));
    faces.push(new Face(color15, v15[41], v15[43], v15[59], v15[57]));
    faces.push(new Face(color15, v15[41], v15[43], v15[107], v15[105]));
    faces.push(new Face(color15, v15[41], v15[45], v15[61], v15[57]));
    faces.push(new Face(color15, v15[41], v15[45], v15[109], v15[105]));
    faces.push(new Face(color15, v15[41], v15[57], v15[121], v15[105]));
    faces.push(new Face(color15, v15[42], v15[43], v15[47], v15[46]));
    faces.push(new Face(color15, v15[42], v15[43], v15[59], v15[58]));
    faces.push(new Face(color15, v15[42], v15[43], v15[107], v15[106]));
    faces.push(new Face(color15, v15[42], v15[46], v15[62], v15[58]));
    faces.push(new Face(color15, v15[42], v15[46], v15[110], v15[106]));
    faces.push(new Face(color15, v15[42], v15[58], v15[122], v15[106]));
    faces.push(new Face(color15, v15[43], v15[47], v15[63], v15[59]));
    faces.push(new Face(color15, v15[43], v15[47], v15[111], v15[107]));
    faces.push(new Face(color15, v15[43], v15[59], v15[123], v15[107]));
    faces.push(new Face(color15, v15[44], v15[45], v15[47], v15[46]));
    faces.push(new Face(color15, v15[44], v15[45], v15[61], v15[60]));
    faces.push(new Face(color15, v15[44], v15[45], v15[109], v15[108]));
    faces.push(new Face(color15, v15[44], v15[46], v15[62], v15[60]));
    faces.push(new Face(color15, v15[44], v15[46], v15[110], v15[108]));
    faces.push(new Face(color15, v15[44], v15[60], v15[124], v15[108]));
    faces.push(new Face(color15, v15[45], v15[47], v15[63], v15[61]));
    faces.push(new Face(color15, v15[45], v15[47], v15[111], v15[109]));
    faces.push(new Face(color15, v15[45], v15[61], v15[125], v15[109]));
    faces.push(new Face(color15, v15[46], v15[47], v15[63], v15[62]));
    faces.push(new Face(color15, v15[46], v15[47], v15[111], v15[110]));
    faces.push(new Face(color15, v15[46], v15[62], v15[126], v15[110]));
    faces.push(new Face(color15, v15[47], v15[63], v15[127], v15[111]));
    faces.push(new Face(color15, v15[48], v15[49], v15[51], v15[50]));
    faces.push(new Face(color15, v15[48], v15[49], v15[53], v15[52]));
    faces.push(new Face(color15, v15[48], v15[49], v15[57], v15[56]));
    faces.push(new Face(color15, v15[48], v15[49], v15[113], v15[112]));
    faces.push(new Face(color15, v15[48], v15[50], v15[54], v15[52]));
    faces.push(new Face(color15, v15[48], v15[50], v15[58], v15[56]));
    faces.push(new Face(color15, v15[48], v15[50], v15[114], v15[112]));
    faces.push(new Face(color15, v15[48], v15[52], v15[60], v15[56]));
    faces.push(new Face(color15, v15[48], v15[52], v15[116], v15[112]));
    faces.push(new Face(color15, v15[48], v15[56], v15[120], v15[112]));
    faces.push(new Face(color15, v15[49], v15[51], v15[55], v15[53]));
    faces.push(new Face(color15, v15[49], v15[51], v15[59], v15[57]));
    faces.push(new Face(color15, v15[49], v15[51], v15[115], v15[113]));
    faces.push(new Face(color15, v15[49], v15[53], v15[61], v15[57]));
    faces.push(new Face(color15, v15[49], v15[53], v15[117], v15[113]));
    faces.push(new Face(color15, v15[49], v15[57], v15[121], v15[113]));
    faces.push(new Face(color15, v15[50], v15[51], v15[55], v15[54]));
    faces.push(new Face(color15, v15[50], v15[51], v15[59], v15[58]));
    faces.push(new Face(color15, v15[50], v15[51], v15[115], v15[114]));
    faces.push(new Face(color15, v15[50], v15[54], v15[62], v15[58]));
    faces.push(new Face(color15, v15[50], v15[54], v15[118], v15[114]));
    faces.push(new Face(color15, v15[50], v15[58], v15[122], v15[114]));
    faces.push(new Face(color15, v15[51], v15[55], v15[63], v15[59]));
    faces.push(new Face(color15, v15[51], v15[55], v15[119], v15[115]));
    faces.push(new Face(color15, v15[51], v15[59], v15[123], v15[115]));
    faces.push(new Face(color15, v15[52], v15[53], v15[55], v15[54]));
    faces.push(new Face(color15, v15[52], v15[53], v15[61], v15[60]));
    faces.push(new Face(color15, v15[52], v15[53], v15[117], v15[116]));
    faces.push(new Face(color15, v15[52], v15[54], v15[62], v15[60]));
    faces.push(new Face(color15, v15[52], v15[54], v15[118], v15[116]));
    faces.push(new Face(color15, v15[52], v15[60], v15[124], v15[116]));
    faces.push(new Face(color15, v15[53], v15[55], v15[63], v15[61]));
    faces.push(new Face(color15, v15[53], v15[55], v15[119], v15[117]));
    faces.push(new Face(color15, v15[53], v15[61], v15[125], v15[117]));
    faces.push(new Face(color15, v15[54], v15[55], v15[63], v15[62]));
    faces.push(new Face(color15, v15[54], v15[55], v15[119], v15[118]));
    faces.push(new Face(color15, v15[54], v15[62], v15[126], v15[118]));
    faces.push(new Face(color15, v15[55], v15[63], v15[127], v15[119]));
    faces.push(new Face(color15, v15[56], v15[57], v15[59], v15[58]));
    faces.push(new Face(color15, v15[56], v15[57], v15[61], v15[60]));
    faces.push(new Face(color15, v15[56], v15[57], v15[121], v15[120]));
    faces.push(new Face(color15, v15[56], v15[58], v15[62], v15[60]));
    faces.push(new Face(color15, v15[56], v15[58], v15[122], v15[120]));
    faces.push(new Face(color15, v15[56], v15[60], v15[124], v15[120]));
    faces.push(new Face(color15, v15[57], v15[59], v15[63], v15[61]));
    faces.push(new Face(color15, v15[57], v15[59], v15[123], v15[121]));
    faces.push(new Face(color15, v15[57], v15[61], v15[125], v15[121]));
    faces.push(new Face(color15, v15[58], v15[59], v15[63], v15[62]));
    faces.push(new Face(color15, v15[58], v15[59], v15[123], v15[122]));
    faces.push(new Face(color15, v15[58], v15[62], v15[126], v15[122]));
    faces.push(new Face(color15, v15[59], v15[63], v15[127], v15[123]));
    faces.push(new Face(color15, v15[60], v15[61], v15[63], v15[62]));
    faces.push(new Face(color15, v15[60], v15[61], v15[125], v15[124]));
    faces.push(new Face(color15, v15[60], v15[62], v15[126], v15[124]));
    faces.push(new Face(color15, v15[61], v15[63], v15[127], v15[125]));
    faces.push(new Face(color15, v15[62], v15[63], v15[127], v15[126]));
    faces.push(new Face(color15, v15[64], v15[65], v15[67], v15[66]));
    faces.push(new Face(color15, v15[64], v15[65], v15[69], v15[68]));
    faces.push(new Face(color15, v15[64], v15[65], v15[73], v15[72]));
    faces.push(new Face(color15, v15[64], v15[65], v15[81], v15[80]));
    faces.push(new Face(color15, v15[64], v15[65], v15[97], v15[96]));
    faces.push(new Face(color15, v15[64], v15[66], v15[70], v15[68]));
    faces.push(new Face(color15, v15[64], v15[66], v15[74], v15[72]));
    faces.push(new Face(color15, v15[64], v15[66], v15[82], v15[80]));
    faces.push(new Face(color15, v15[64], v15[66], v15[98], v15[96]));
    faces.push(new Face(color15, v15[64], v15[68], v15[76], v15[72]));
    faces.push(new Face(color15, v15[64], v15[68], v15[84], v15[80]));
    faces.push(new Face(color15, v15[64], v15[68], v15[100], v15[96]));
    faces.push(new Face(color15, v15[64], v15[72], v15[88], v15[80]));
    faces.push(new Face(color15, v15[64], v15[72], v15[104], v15[96]));
    faces.push(new Face(color15, v15[64], v15[80], v15[112], v15[96]));
    faces.push(new Face(color15, v15[65], v15[67], v15[71], v15[69]));
    faces.push(new Face(color15, v15[65], v15[67], v15[75], v15[73]));
    faces.push(new Face(color15, v15[65], v15[67], v15[83], v15[81]));
    faces.push(new Face(color15, v15[65], v15[67], v15[99], v15[97]));
    faces.push(new Face(color15, v15[65], v15[69], v15[77], v15[73]));
    faces.push(new Face(color15, v15[65], v15[69], v15[85], v15[81]));
    faces.push(new Face(color15, v15[65], v15[69], v15[101], v15[97]));
    faces.push(new Face(color15, v15[65], v15[73], v15[89], v15[81]));
    faces.push(new Face(color15, v15[65], v15[73], v15[105], v15[97]));
    faces.push(new Face(color15, v15[65], v15[81], v15[113], v15[97]));
    faces.push(new Face(color15, v15[66], v15[67], v15[71], v15[70]));
    faces.push(new Face(color15, v15[66], v15[67], v15[75], v15[74]));
    faces.push(new Face(color15, v15[66], v15[67], v15[83], v15[82]));
    faces.push(new Face(color15, v15[66], v15[67], v15[99], v15[98]));
    faces.push(new Face(color15, v15[66], v15[70], v15[78], v15[74]));
    faces.push(new Face(color15, v15[66], v15[70], v15[86], v15[82]));
    faces.push(new Face(color15, v15[66], v15[70], v15[102], v15[98]));
    faces.push(new Face(color15, v15[66], v15[74], v15[90], v15[82]));
    faces.push(new Face(color15, v15[66], v15[74], v15[106], v15[98]));
    faces.push(new Face(color15, v15[66], v15[82], v15[114], v15[98]));
    faces.push(new Face(color15, v15[67], v15[71], v15[79], v15[75]));
    faces.push(new Face(color15, v15[67], v15[71], v15[87], v15[83]));
    faces.push(new Face(color15, v15[67], v15[71], v15[103], v15[99]));
    faces.push(new Face(color15, v15[67], v15[75], v15[91], v15[83]));
    faces.push(new Face(color15, v15[67], v15[75], v15[107], v15[99]));
    faces.push(new Face(color15, v15[67], v15[83], v15[115], v15[99]));
    faces.push(new Face(color15, v15[68], v15[69], v15[71], v15[70]));
    faces.push(new Face(color15, v15[68], v15[69], v15[77], v15[76]));
    faces.push(new Face(color15, v15[68], v15[69], v15[85], v15[84]));
    faces.push(new Face(color15, v15[68], v15[69], v15[101], v15[100]));
    faces.push(new Face(color15, v15[68], v15[70], v15[78], v15[76]));
    faces.push(new Face(color15, v15[68], v15[70], v15[86], v15[84]));
    faces.push(new Face(color15, v15[68], v15[70], v15[102], v15[100]));
    faces.push(new Face(color15, v15[68], v15[76], v15[92], v15[84]));
    faces.push(new Face(color15, v15[68], v15[76], v15[108], v15[100]));
    faces.push(new Face(color15, v15[68], v15[84], v15[116], v15[100]));
    faces.push(new Face(color15, v15[69], v15[71], v15[79], v15[77]));
    faces.push(new Face(color15, v15[69], v15[71], v15[87], v15[85]));
    faces.push(new Face(color15, v15[69], v15[71], v15[103], v15[101]));
    faces.push(new Face(color15, v15[69], v15[77], v15[93], v15[85]));
    faces.push(new Face(color15, v15[69], v15[77], v15[109], v15[101]));
    faces.push(new Face(color15, v15[69], v15[85], v15[117], v15[101]));
    faces.push(new Face(color15, v15[70], v15[71], v15[79], v15[78]));
    faces.push(new Face(color15, v15[70], v15[71], v15[87], v15[86]));
    faces.push(new Face(color15, v15[70], v15[71], v15[103], v15[102]));
    faces.push(new Face(color15, v15[70], v15[78], v15[94], v15[86]));
    faces.push(new Face(color15, v15[70], v15[78], v15[110], v15[102]));
    faces.push(new Face(color15, v15[70], v15[86], v15[118], v15[102]));
    faces.push(new Face(color15, v15[71], v15[79], v15[95], v15[87]));
    faces.push(new Face(color15, v15[71], v15[79], v15[111], v15[103]));
    faces.push(new Face(color15, v15[71], v15[87], v15[119], v15[103]));
    faces.push(new Face(color15, v15[72], v15[73], v15[75], v15[74]));
    faces.push(new Face(color15, v15[72], v15[73], v15[77], v15[76]));
    faces.push(new Face(color15, v15[72], v15[73], v15[89], v15[88]));
    faces.push(new Face(color15, v15[72], v15[73], v15[105], v15[104]));
    faces.push(new Face(color15, v15[72], v15[74], v15[78], v15[76]));
    faces.push(new Face(color15, v15[72], v15[74], v15[90], v15[88]));
    faces.push(new Face(color15, v15[72], v15[74], v15[106], v15[104]));
    faces.push(new Face(color15, v15[72], v15[76], v15[92], v15[88]));
    faces.push(new Face(color15, v15[72], v15[76], v15[108], v15[104]));
    faces.push(new Face(color15, v15[72], v15[88], v15[120], v15[104]));
    faces.push(new Face(color15, v15[73], v15[75], v15[79], v15[77]));
    faces.push(new Face(color15, v15[73], v15[75], v15[91], v15[89]));
    faces.push(new Face(color15, v15[73], v15[75], v15[107], v15[105]));
    faces.push(new Face(color15, v15[73], v15[77], v15[93], v15[89]));
    faces.push(new Face(color15, v15[73], v15[77], v15[109], v15[105]));
    faces.push(new Face(color15, v15[73], v15[89], v15[121], v15[105]));
    faces.push(new Face(color15, v15[74], v15[75], v15[79], v15[78]));
    faces.push(new Face(color15, v15[74], v15[75], v15[91], v15[90]));
    faces.push(new Face(color15, v15[74], v15[75], v15[107], v15[106]));
    faces.push(new Face(color15, v15[74], v15[78], v15[94], v15[90]));
    faces.push(new Face(color15, v15[74], v15[78], v15[110], v15[106]));
    faces.push(new Face(color15, v15[74], v15[90], v15[122], v15[106]));
    faces.push(new Face(color15, v15[75], v15[79], v15[95], v15[91]));
    faces.push(new Face(color15, v15[75], v15[79], v15[111], v15[107]));
    faces.push(new Face(color15, v15[75], v15[91], v15[123], v15[107]));
    faces.push(new Face(color15, v15[76], v15[77], v15[79], v15[78]));
    faces.push(new Face(color15, v15[76], v15[77], v15[93], v15[92]));
    faces.push(new Face(color15, v15[76], v15[77], v15[109], v15[108]));
    faces.push(new Face(color15, v15[76], v15[78], v15[94], v15[92]));
    faces.push(new Face(color15, v15[76], v15[78], v15[110], v15[108]));
    faces.push(new Face(color15, v15[76], v15[92], v15[124], v15[108]));
    faces.push(new Face(color15, v15[77], v15[79], v15[95], v15[93]));
    faces.push(new Face(color15, v15[77], v15[79], v15[111], v15[109]));
    faces.push(new Face(color15, v15[77], v15[93], v15[125], v15[109]));
    faces.push(new Face(color15, v15[78], v15[79], v15[95], v15[94]));
    faces.push(new Face(color15, v15[78], v15[79], v15[111], v15[110]));
    faces.push(new Face(color15, v15[78], v15[94], v15[126], v15[110]));
    faces.push(new Face(color15, v15[79], v15[95], v15[127], v15[111]));
    faces.push(new Face(color15, v15[80], v15[81], v15[83], v15[82]));
    faces.push(new Face(color15, v15[80], v15[81], v15[85], v15[84]));
    faces.push(new Face(color15, v15[80], v15[81], v15[89], v15[88]));
    faces.push(new Face(color15, v15[80], v15[81], v15[113], v15[112]));
    faces.push(new Face(color15, v15[80], v15[82], v15[86], v15[84]));
    faces.push(new Face(color15, v15[80], v15[82], v15[90], v15[88]));
    faces.push(new Face(color15, v15[80], v15[82], v15[114], v15[112]));
    faces.push(new Face(color15, v15[80], v15[84], v15[92], v15[88]));
    faces.push(new Face(color15, v15[80], v15[84], v15[116], v15[112]));
    faces.push(new Face(color15, v15[80], v15[88], v15[120], v15[112]));
    faces.push(new Face(color15, v15[81], v15[83], v15[87], v15[85]));
    faces.push(new Face(color15, v15[81], v15[83], v15[91], v15[89]));
    faces.push(new Face(color15, v15[81], v15[83], v15[115], v15[113]));
    faces.push(new Face(color15, v15[81], v15[85], v15[93], v15[89]));
    faces.push(new Face(color15, v15[81], v15[85], v15[117], v15[113]));
    faces.push(new Face(color15, v15[81], v15[89], v15[121], v15[113]));
    faces.push(new Face(color15, v15[82], v15[83], v15[87], v15[86]));
    faces.push(new Face(color15, v15[82], v15[83], v15[91], v15[90]));
    faces.push(new Face(color15, v15[82], v15[83], v15[115], v15[114]));
    faces.push(new Face(color15, v15[82], v15[86], v15[94], v15[90]));
    faces.push(new Face(color15, v15[82], v15[86], v15[118], v15[114]));
    faces.push(new Face(color15, v15[82], v15[90], v15[122], v15[114]));
    faces.push(new Face(color15, v15[83], v15[87], v15[95], v15[91]));
    faces.push(new Face(color15, v15[83], v15[87], v15[119], v15[115]));
    faces.push(new Face(color15, v15[83], v15[91], v15[123], v15[115]));
    faces.push(new Face(color15, v15[84], v15[85], v15[87], v15[86]));
    faces.push(new Face(color15, v15[84], v15[85], v15[93], v15[92]));
    faces.push(new Face(color15, v15[84], v15[85], v15[117], v15[116]));
    faces.push(new Face(color15, v15[84], v15[86], v15[94], v15[92]));
    faces.push(new Face(color15, v15[84], v15[86], v15[118], v15[116]));
    faces.push(new Face(color15, v15[84], v15[92], v15[124], v15[116]));
    faces.push(new Face(color15, v15[85], v15[87], v15[95], v15[93]));
    faces.push(new Face(color15, v15[85], v15[87], v15[119], v15[117]));
    faces.push(new Face(color15, v15[85], v15[93], v15[125], v15[117]));
    faces.push(new Face(color15, v15[86], v15[87], v15[95], v15[94]));
    faces.push(new Face(color15, v15[86], v15[87], v15[119], v15[118]));
    faces.push(new Face(color15, v15[86], v15[94], v15[126], v15[118]));
    faces.push(new Face(color15, v15[87], v15[95], v15[127], v15[119]));
    faces.push(new Face(color15, v15[88], v15[89], v15[91], v15[90]));
    faces.push(new Face(color15, v15[88], v15[89], v15[93], v15[92]));
    faces.push(new Face(color15, v15[88], v15[89], v15[121], v15[120]));
    faces.push(new Face(color15, v15[88], v15[90], v15[94], v15[92]));
    faces.push(new Face(color15, v15[88], v15[90], v15[122], v15[120]));
    faces.push(new Face(color15, v15[88], v15[92], v15[124], v15[120]));
    faces.push(new Face(color15, v15[89], v15[91], v15[95], v15[93]));
    faces.push(new Face(color15, v15[89], v15[91], v15[123], v15[121]));
    faces.push(new Face(color15, v15[89], v15[93], v15[125], v15[121]));
    faces.push(new Face(color15, v15[90], v15[91], v15[95], v15[94]));
    faces.push(new Face(color15, v15[90], v15[91], v15[123], v15[122]));
    faces.push(new Face(color15, v15[90], v15[94], v15[126], v15[122]));
    faces.push(new Face(color15, v15[91], v15[95], v15[127], v15[123]));
    faces.push(new Face(color15, v15[92], v15[93], v15[95], v15[94]));
    faces.push(new Face(color15, v15[92], v15[93], v15[125], v15[124]));
    faces.push(new Face(color15, v15[92], v15[94], v15[126], v15[124]));
    faces.push(new Face(color15, v15[93], v15[95], v15[127], v15[125]));
    faces.push(new Face(color15, v15[94], v15[95], v15[127], v15[126]));
    faces.push(new Face(color15, v15[96], v15[97], v15[99], v15[98]));
    faces.push(new Face(color15, v15[96], v15[97], v15[101], v15[100]));
    faces.push(new Face(color15, v15[96], v15[97], v15[105], v15[104]));
    faces.push(new Face(color15, v15[96], v15[97], v15[113], v15[112]));
    faces.push(new Face(color15, v15[96], v15[98], v15[102], v15[100]));
    faces.push(new Face(color15, v15[96], v15[98], v15[106], v15[104]));
    faces.push(new Face(color15, v15[96], v15[98], v15[114], v15[112]));
    faces.push(new Face(color15, v15[96], v15[100], v15[108], v15[104]));
    faces.push(new Face(color15, v15[96], v15[100], v15[116], v15[112]));
    faces.push(new Face(color15, v15[96], v15[104], v15[120], v15[112]));
    faces.push(new Face(color15, v15[97], v15[99], v15[103], v15[101]));
    faces.push(new Face(color15, v15[97], v15[99], v15[107], v15[105]));
    faces.push(new Face(color15, v15[97], v15[99], v15[115], v15[113]));
    faces.push(new Face(color15, v15[97], v15[101], v15[109], v15[105]));
    faces.push(new Face(color15, v15[97], v15[101], v15[117], v15[113]));
    faces.push(new Face(color15, v15[97], v15[105], v15[121], v15[113]));
    faces.push(new Face(color15, v15[98], v15[99], v15[103], v15[102]));
    faces.push(new Face(color15, v15[98], v15[99], v15[107], v15[106]));
    faces.push(new Face(color15, v15[98], v15[99], v15[115], v15[114]));
    faces.push(new Face(color15, v15[98], v15[102], v15[110], v15[106]));
    faces.push(new Face(color15, v15[98], v15[102], v15[118], v15[114]));
    faces.push(new Face(color15, v15[98], v15[106], v15[122], v15[114]));
    faces.push(new Face(color15, v15[99], v15[103], v15[111], v15[107]));
    faces.push(new Face(color15, v15[99], v15[103], v15[119], v15[115]));
    faces.push(new Face(color15, v15[99], v15[107], v15[123], v15[115]));
    faces.push(new Face(color15, v15[100], v15[101], v15[103], v15[102]));
    faces.push(new Face(color15, v15[100], v15[101], v15[109], v15[108]));
    faces.push(new Face(color15, v15[100], v15[101], v15[117], v15[116]));
    faces.push(new Face(color15, v15[100], v15[102], v15[110], v15[108]));
    faces.push(new Face(color15, v15[100], v15[102], v15[118], v15[116]));
    faces.push(new Face(color15, v15[100], v15[108], v15[124], v15[116]));
    faces.push(new Face(color15, v15[101], v15[103], v15[111], v15[109]));
    faces.push(new Face(color15, v15[101], v15[103], v15[119], v15[117]));
    faces.push(new Face(color15, v15[101], v15[109], v15[125], v15[117]));
    faces.push(new Face(color15, v15[102], v15[103], v15[111], v15[110]));
    faces.push(new Face(color15, v15[102], v15[103], v15[119], v15[118]));
    faces.push(new Face(color15, v15[102], v15[110], v15[126], v15[118]));
    faces.push(new Face(color15, v15[103], v15[111], v15[127], v15[119]));
    faces.push(new Face(color15, v15[104], v15[105], v15[107], v15[106]));
    faces.push(new Face(color15, v15[104], v15[105], v15[109], v15[108]));
    faces.push(new Face(color15, v15[104], v15[105], v15[121], v15[120]));
    faces.push(new Face(color15, v15[104], v15[106], v15[110], v15[108]));
    faces.push(new Face(color15, v15[104], v15[106], v15[122], v15[120]));
    faces.push(new Face(color15, v15[104], v15[108], v15[124], v15[120]));
    faces.push(new Face(color15, v15[105], v15[107], v15[111], v15[109]));
    faces.push(new Face(color15, v15[105], v15[107], v15[123], v15[121]));
    faces.push(new Face(color15, v15[105], v15[109], v15[125], v15[121]));
    faces.push(new Face(color15, v15[106], v15[107], v15[111], v15[110]));
    faces.push(new Face(color15, v15[106], v15[107], v15[123], v15[122]));
    faces.push(new Face(color15, v15[106], v15[110], v15[126], v15[122]));
    faces.push(new Face(color15, v15[107], v15[111], v15[127], v15[123]));
    faces.push(new Face(color15, v15[108], v15[109], v15[111], v15[110]));
    faces.push(new Face(color15, v15[108], v15[109], v15[125], v15[124]));
    faces.push(new Face(color15, v15[108], v15[110], v15[126], v15[124]));
    faces.push(new Face(color15, v15[109], v15[111], v15[127], v15[125]));
    faces.push(new Face(color15, v15[110], v15[111], v15[127], v15[126]));
    faces.push(new Face(color15, v15[112], v15[113], v15[115], v15[114]));
    faces.push(new Face(color15, v15[112], v15[113], v15[117], v15[116]));
    faces.push(new Face(color15, v15[112], v15[113], v15[121], v15[120]));
    faces.push(new Face(color15, v15[112], v15[114], v15[118], v15[116]));
    faces.push(new Face(color15, v15[112], v15[114], v15[122], v15[120]));
    faces.push(new Face(color15, v15[112], v15[116], v15[124], v15[120]));
    faces.push(new Face(color15, v15[113], v15[115], v15[119], v15[117]));
    faces.push(new Face(color15, v15[113], v15[115], v15[123], v15[121]));
    faces.push(new Face(color15, v15[113], v15[117], v15[125], v15[121]));
    faces.push(new Face(color15, v15[114], v15[115], v15[119], v15[118]));
    faces.push(new Face(color15, v15[114], v15[115], v15[123], v15[122]));
    faces.push(new Face(color15, v15[114], v15[118], v15[126], v15[122]));
    faces.push(new Face(color15, v15[115], v15[119], v15[127], v15[123]));
    faces.push(new Face(color15, v15[116], v15[117], v15[119], v15[118]));
    faces.push(new Face(color15, v15[116], v15[117], v15[125], v15[124]));
    faces.push(new Face(color15, v15[116], v15[118], v15[126], v15[124]));
    faces.push(new Face(color15, v15[117], v15[119], v15[127], v15[125]));
    faces.push(new Face(color15, v15[118], v15[119], v15[127], v15[126]));
    faces.push(new Face(color15, v15[120], v15[121], v15[123], v15[122]));
    faces.push(new Face(color15, v15[120], v15[121], v15[125], v15[124]));
    faces.push(new Face(color15, v15[120], v15[122], v15[126], v15[124]));
    faces.push(new Face(color15, v15[121], v15[123], v15[127], v15[125]));
    faces.push(new Face(color15, v15[122], v15[123], v15[127], v15[126]));
    faces.push(new Face(color15, v15[124], v15[125], v15[127], v15[126]));
    for (let i = 0; i < v15.length; i++) {
        v15[i].rotate(r);
        v15[i].project();
    }

    v16[0] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[1] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, -w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[2] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, -w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[3] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, -w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[4] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, -w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[5] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, -w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[6] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, -w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[7] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, -w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[8] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, -w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[9] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, -w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[10] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, -w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[11] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, -w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[12] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, -w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[13] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, -w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[14] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, -w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[15] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, -w/2, -w/2, w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[16] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, -w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[17] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, -w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[18] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, -w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[19] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, -w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[20] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, -w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[21] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, -w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[22] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, -w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[23] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, -w/2, w/2, -w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[24] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, -w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[25] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, -w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[26] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, -w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[27] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, -w/2, w/2, w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[28] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, -w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[29] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, -w/2, w/2, w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[30] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, -w/2, w/2, w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[31] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, -w/2, w/2, w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[32] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[33] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[34] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[35] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[36] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[37] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[38] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[39] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[40] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[41] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[42] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[43] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[44] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[45] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[46] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[47] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, w/2, -w/2, w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[48] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[49] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[50] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[51] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[52] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[53] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[54] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[55] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, w/2, w/2, -w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[56] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[57] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[58] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[59] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, w/2, w/2, w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[60] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[61] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, w/2, w/2, w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[62] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, w/2, w/2, w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[63] = new Vertex(w/2+Math.sin(theta)*w-Math.cos(theta*2)*w, w/2, w/2, w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w+Math.sin(theta*2)*w);
    v16[64] = new Vertex(w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v16[65] = new Vertex(w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v16[66] = new Vertex(w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v16[67] = new Vertex(w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v16[68] = new Vertex(w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v16[69] = new Vertex(w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v16[70] = new Vertex(w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v16[71] = new Vertex(w/2+Math.sin(theta)*w, -w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v16[72] = new Vertex(w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v16[73] = new Vertex(w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v16[74] = new Vertex(w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v16[75] = new Vertex(w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v16[76] = new Vertex(w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v16[77] = new Vertex(w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v16[78] = new Vertex(w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v16[79] = new Vertex(w/2+Math.sin(theta)*w, -w/2, -w/2, w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v16[80] = new Vertex(w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v16[81] = new Vertex(w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v16[82] = new Vertex(w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v16[83] = new Vertex(w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v16[84] = new Vertex(w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v16[85] = new Vertex(w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v16[86] = new Vertex(w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v16[87] = new Vertex(w/2+Math.sin(theta)*w, -w/2, w/2, -w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v16[88] = new Vertex(w/2+Math.sin(theta)*w, -w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v16[89] = new Vertex(w/2+Math.sin(theta)*w, -w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v16[90] = new Vertex(w/2+Math.sin(theta)*w, -w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v16[91] = new Vertex(w/2+Math.sin(theta)*w, -w/2, w/2, w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v16[92] = new Vertex(w/2+Math.sin(theta)*w, -w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v16[93] = new Vertex(w/2+Math.sin(theta)*w, -w/2, w/2, w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v16[94] = new Vertex(w/2+Math.sin(theta)*w, -w/2, w/2, w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v16[95] = new Vertex(w/2+Math.sin(theta)*w, -w/2, w/2, w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v16[96] = new Vertex(w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v16[97] = new Vertex(w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v16[98] = new Vertex(w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v16[99] = new Vertex(w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v16[100] = new Vertex(w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v16[101] = new Vertex(w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v16[102] = new Vertex(w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v16[103] = new Vertex(w/2+Math.sin(theta)*w, w/2, -w/2, -w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v16[104] = new Vertex(w/2+Math.sin(theta)*w, w/2, -w/2, w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v16[105] = new Vertex(w/2+Math.sin(theta)*w, w/2, -w/2, w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v16[106] = new Vertex(w/2+Math.sin(theta)*w, w/2, -w/2, w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v16[107] = new Vertex(w/2+Math.sin(theta)*w, w/2, -w/2, w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v16[108] = new Vertex(w/2+Math.sin(theta)*w, w/2, -w/2, w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v16[109] = new Vertex(w/2+Math.sin(theta)*w, w/2, -w/2, w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v16[110] = new Vertex(w/2+Math.sin(theta)*w, w/2, -w/2, w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v16[111] = new Vertex(w/2+Math.sin(theta)*w, w/2, -w/2, w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v16[112] = new Vertex(w/2+Math.sin(theta)*w, w/2, w/2, -w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v16[113] = new Vertex(w/2+Math.sin(theta)*w, w/2, w/2, -w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v16[114] = new Vertex(w/2+Math.sin(theta)*w, w/2, w/2, -w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v16[115] = new Vertex(w/2+Math.sin(theta)*w, w/2, w/2, -w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v16[116] = new Vertex(w/2+Math.sin(theta)*w, w/2, w/2, -w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v16[117] = new Vertex(w/2+Math.sin(theta)*w, w/2, w/2, -w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v16[118] = new Vertex(w/2+Math.sin(theta)*w, w/2, w/2, -w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v16[119] = new Vertex(w/2+Math.sin(theta)*w, w/2, w/2, -w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v16[120] = new Vertex(w/2+Math.sin(theta)*w, w/2, w/2, w/2, -w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v16[121] = new Vertex(w/2+Math.sin(theta)*w, w/2, w/2, w/2, -w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v16[122] = new Vertex(w/2+Math.sin(theta)*w, w/2, w/2, w/2, -w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v16[123] = new Vertex(w/2+Math.sin(theta)*w, w/2, w/2, w/2, -w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    v16[124] = new Vertex(w/2+Math.sin(theta)*w, w/2, w/2, w/2, w/2, -w/2, -w/2, -w/2+Math.cos(theta)*w);
    v16[125] = new Vertex(w/2+Math.sin(theta)*w, w/2, w/2, w/2, w/2, -w/2, w/2, -w/2+Math.cos(theta)*w);
    v16[126] = new Vertex(w/2+Math.sin(theta)*w, w/2, w/2, w/2, w/2, w/2, -w/2, -w/2+Math.cos(theta)*w);
    v16[127] = new Vertex(w/2+Math.sin(theta)*w, w/2, w/2, w/2, w/2, w/2, w/2, -w/2+Math.cos(theta)*w);
    faces.push(new Face(color16, v16[0], v16[1], v16[3], v16[2]));
    faces.push(new Face(color16, v16[0], v16[1], v16[5], v16[4]));
    faces.push(new Face(color16, v16[0], v16[1], v16[9], v16[8]));
    faces.push(new Face(color16, v16[0], v16[1], v16[17], v16[16]));
    faces.push(new Face(color16, v16[0], v16[1], v16[33], v16[32]));
    faces.push(new Face(color16, v16[0], v16[1], v16[65], v16[64]));
    faces.push(new Face(color16, v16[0], v16[2], v16[6], v16[4]));
    faces.push(new Face(color16, v16[0], v16[2], v16[10], v16[8]));
    faces.push(new Face(color16, v16[0], v16[2], v16[18], v16[16]));
    faces.push(new Face(color16, v16[0], v16[2], v16[34], v16[32]));
    faces.push(new Face(color16, v16[0], v16[2], v16[66], v16[64]));
    faces.push(new Face(color16, v16[0], v16[4], v16[12], v16[8]));
    faces.push(new Face(color16, v16[0], v16[4], v16[20], v16[16]));
    faces.push(new Face(color16, v16[0], v16[4], v16[36], v16[32]));
    faces.push(new Face(color16, v16[0], v16[4], v16[68], v16[64]));
    faces.push(new Face(color16, v16[0], v16[8], v16[24], v16[16]));
    faces.push(new Face(color16, v16[0], v16[8], v16[40], v16[32]));
    faces.push(new Face(color16, v16[0], v16[8], v16[72], v16[64]));
    faces.push(new Face(color16, v16[0], v16[16], v16[48], v16[32]));
    faces.push(new Face(color16, v16[0], v16[16], v16[80], v16[64]));
    faces.push(new Face(color16, v16[0], v16[32], v16[96], v16[64]));
    faces.push(new Face(color16, v16[1], v16[3], v16[7], v16[5]));
    faces.push(new Face(color16, v16[1], v16[3], v16[11], v16[9]));
    faces.push(new Face(color16, v16[1], v16[3], v16[19], v16[17]));
    faces.push(new Face(color16, v16[1], v16[3], v16[35], v16[33]));
    faces.push(new Face(color16, v16[1], v16[3], v16[67], v16[65]));
    faces.push(new Face(color16, v16[1], v16[5], v16[13], v16[9]));
    faces.push(new Face(color16, v16[1], v16[5], v16[21], v16[17]));
    faces.push(new Face(color16, v16[1], v16[5], v16[37], v16[33]));
    faces.push(new Face(color16, v16[1], v16[5], v16[69], v16[65]));
    faces.push(new Face(color16, v16[1], v16[9], v16[25], v16[17]));
    faces.push(new Face(color16, v16[1], v16[9], v16[41], v16[33]));
    faces.push(new Face(color16, v16[1], v16[9], v16[73], v16[65]));
    faces.push(new Face(color16, v16[1], v16[17], v16[49], v16[33]));
    faces.push(new Face(color16, v16[1], v16[17], v16[81], v16[65]));
    faces.push(new Face(color16, v16[1], v16[33], v16[97], v16[65]));
    faces.push(new Face(color16, v16[2], v16[3], v16[7], v16[6]));
    faces.push(new Face(color16, v16[2], v16[3], v16[11], v16[10]));
    faces.push(new Face(color16, v16[2], v16[3], v16[19], v16[18]));
    faces.push(new Face(color16, v16[2], v16[3], v16[35], v16[34]));
    faces.push(new Face(color16, v16[2], v16[3], v16[67], v16[66]));
    faces.push(new Face(color16, v16[2], v16[6], v16[14], v16[10]));
    faces.push(new Face(color16, v16[2], v16[6], v16[22], v16[18]));
    faces.push(new Face(color16, v16[2], v16[6], v16[38], v16[34]));
    faces.push(new Face(color16, v16[2], v16[6], v16[70], v16[66]));
    faces.push(new Face(color16, v16[2], v16[10], v16[26], v16[18]));
    faces.push(new Face(color16, v16[2], v16[10], v16[42], v16[34]));
    faces.push(new Face(color16, v16[2], v16[10], v16[74], v16[66]));
    faces.push(new Face(color16, v16[2], v16[18], v16[50], v16[34]));
    faces.push(new Face(color16, v16[2], v16[18], v16[82], v16[66]));
    faces.push(new Face(color16, v16[2], v16[34], v16[98], v16[66]));
    faces.push(new Face(color16, v16[3], v16[7], v16[15], v16[11]));
    faces.push(new Face(color16, v16[3], v16[7], v16[23], v16[19]));
    faces.push(new Face(color16, v16[3], v16[7], v16[39], v16[35]));
    faces.push(new Face(color16, v16[3], v16[7], v16[71], v16[67]));
    faces.push(new Face(color16, v16[3], v16[11], v16[27], v16[19]));
    faces.push(new Face(color16, v16[3], v16[11], v16[43], v16[35]));
    faces.push(new Face(color16, v16[3], v16[11], v16[75], v16[67]));
    faces.push(new Face(color16, v16[3], v16[19], v16[51], v16[35]));
    faces.push(new Face(color16, v16[3], v16[19], v16[83], v16[67]));
    faces.push(new Face(color16, v16[3], v16[35], v16[99], v16[67]));
    faces.push(new Face(color16, v16[4], v16[5], v16[7], v16[6]));
    faces.push(new Face(color16, v16[4], v16[5], v16[13], v16[12]));
    faces.push(new Face(color16, v16[4], v16[5], v16[21], v16[20]));
    faces.push(new Face(color16, v16[4], v16[5], v16[37], v16[36]));
    faces.push(new Face(color16, v16[4], v16[5], v16[69], v16[68]));
    faces.push(new Face(color16, v16[4], v16[6], v16[14], v16[12]));
    faces.push(new Face(color16, v16[4], v16[6], v16[22], v16[20]));
    faces.push(new Face(color16, v16[4], v16[6], v16[38], v16[36]));
    faces.push(new Face(color16, v16[4], v16[6], v16[70], v16[68]));
    faces.push(new Face(color16, v16[4], v16[12], v16[28], v16[20]));
    faces.push(new Face(color16, v16[4], v16[12], v16[44], v16[36]));
    faces.push(new Face(color16, v16[4], v16[12], v16[76], v16[68]));
    faces.push(new Face(color16, v16[4], v16[20], v16[52], v16[36]));
    faces.push(new Face(color16, v16[4], v16[20], v16[84], v16[68]));
    faces.push(new Face(color16, v16[4], v16[36], v16[100], v16[68]));
    faces.push(new Face(color16, v16[5], v16[7], v16[15], v16[13]));
    faces.push(new Face(color16, v16[5], v16[7], v16[23], v16[21]));
    faces.push(new Face(color16, v16[5], v16[7], v16[39], v16[37]));
    faces.push(new Face(color16, v16[5], v16[7], v16[71], v16[69]));
    faces.push(new Face(color16, v16[5], v16[13], v16[29], v16[21]));
    faces.push(new Face(color16, v16[5], v16[13], v16[45], v16[37]));
    faces.push(new Face(color16, v16[5], v16[13], v16[77], v16[69]));
    faces.push(new Face(color16, v16[5], v16[21], v16[53], v16[37]));
    faces.push(new Face(color16, v16[5], v16[21], v16[85], v16[69]));
    faces.push(new Face(color16, v16[5], v16[37], v16[101], v16[69]));
    faces.push(new Face(color16, v16[6], v16[7], v16[15], v16[14]));
    faces.push(new Face(color16, v16[6], v16[7], v16[23], v16[22]));
    faces.push(new Face(color16, v16[6], v16[7], v16[39], v16[38]));
    faces.push(new Face(color16, v16[6], v16[7], v16[71], v16[70]));
    faces.push(new Face(color16, v16[6], v16[14], v16[30], v16[22]));
    faces.push(new Face(color16, v16[6], v16[14], v16[46], v16[38]));
    faces.push(new Face(color16, v16[6], v16[14], v16[78], v16[70]));
    faces.push(new Face(color16, v16[6], v16[22], v16[54], v16[38]));
    faces.push(new Face(color16, v16[6], v16[22], v16[86], v16[70]));
    faces.push(new Face(color16, v16[6], v16[38], v16[102], v16[70]));
    faces.push(new Face(color16, v16[7], v16[15], v16[31], v16[23]));
    faces.push(new Face(color16, v16[7], v16[15], v16[47], v16[39]));
    faces.push(new Face(color16, v16[7], v16[15], v16[79], v16[71]));
    faces.push(new Face(color16, v16[7], v16[23], v16[55], v16[39]));
    faces.push(new Face(color16, v16[7], v16[23], v16[87], v16[71]));
    faces.push(new Face(color16, v16[7], v16[39], v16[103], v16[71]));
    faces.push(new Face(color16, v16[8], v16[9], v16[11], v16[10]));
    faces.push(new Face(color16, v16[8], v16[9], v16[13], v16[12]));
    faces.push(new Face(color16, v16[8], v16[9], v16[25], v16[24]));
    faces.push(new Face(color16, v16[8], v16[9], v16[41], v16[40]));
    faces.push(new Face(color16, v16[8], v16[9], v16[73], v16[72]));
    faces.push(new Face(color16, v16[8], v16[10], v16[14], v16[12]));
    faces.push(new Face(color16, v16[8], v16[10], v16[26], v16[24]));
    faces.push(new Face(color16, v16[8], v16[10], v16[42], v16[40]));
    faces.push(new Face(color16, v16[8], v16[10], v16[74], v16[72]));
    faces.push(new Face(color16, v16[8], v16[12], v16[28], v16[24]));
    faces.push(new Face(color16, v16[8], v16[12], v16[44], v16[40]));
    faces.push(new Face(color16, v16[8], v16[12], v16[76], v16[72]));
    faces.push(new Face(color16, v16[8], v16[24], v16[56], v16[40]));
    faces.push(new Face(color16, v16[8], v16[24], v16[88], v16[72]));
    faces.push(new Face(color16, v16[8], v16[40], v16[104], v16[72]));
    faces.push(new Face(color16, v16[9], v16[11], v16[15], v16[13]));
    faces.push(new Face(color16, v16[9], v16[11], v16[27], v16[25]));
    faces.push(new Face(color16, v16[9], v16[11], v16[43], v16[41]));
    faces.push(new Face(color16, v16[9], v16[11], v16[75], v16[73]));
    faces.push(new Face(color16, v16[9], v16[13], v16[29], v16[25]));
    faces.push(new Face(color16, v16[9], v16[13], v16[45], v16[41]));
    faces.push(new Face(color16, v16[9], v16[13], v16[77], v16[73]));
    faces.push(new Face(color16, v16[9], v16[25], v16[57], v16[41]));
    faces.push(new Face(color16, v16[9], v16[25], v16[89], v16[73]));
    faces.push(new Face(color16, v16[9], v16[41], v16[105], v16[73]));
    faces.push(new Face(color16, v16[10], v16[11], v16[15], v16[14]));
    faces.push(new Face(color16, v16[10], v16[11], v16[27], v16[26]));
    faces.push(new Face(color16, v16[10], v16[11], v16[43], v16[42]));
    faces.push(new Face(color16, v16[10], v16[11], v16[75], v16[74]));
    faces.push(new Face(color16, v16[10], v16[14], v16[30], v16[26]));
    faces.push(new Face(color16, v16[10], v16[14], v16[46], v16[42]));
    faces.push(new Face(color16, v16[10], v16[14], v16[78], v16[74]));
    faces.push(new Face(color16, v16[10], v16[26], v16[58], v16[42]));
    faces.push(new Face(color16, v16[10], v16[26], v16[90], v16[74]));
    faces.push(new Face(color16, v16[10], v16[42], v16[106], v16[74]));
    faces.push(new Face(color16, v16[11], v16[15], v16[31], v16[27]));
    faces.push(new Face(color16, v16[11], v16[15], v16[47], v16[43]));
    faces.push(new Face(color16, v16[11], v16[15], v16[79], v16[75]));
    faces.push(new Face(color16, v16[11], v16[27], v16[59], v16[43]));
    faces.push(new Face(color16, v16[11], v16[27], v16[91], v16[75]));
    faces.push(new Face(color16, v16[11], v16[43], v16[107], v16[75]));
    faces.push(new Face(color16, v16[12], v16[13], v16[15], v16[14]));
    faces.push(new Face(color16, v16[12], v16[13], v16[29], v16[28]));
    faces.push(new Face(color16, v16[12], v16[13], v16[45], v16[44]));
    faces.push(new Face(color16, v16[12], v16[13], v16[77], v16[76]));
    faces.push(new Face(color16, v16[12], v16[14], v16[30], v16[28]));
    faces.push(new Face(color16, v16[12], v16[14], v16[46], v16[44]));
    faces.push(new Face(color16, v16[12], v16[14], v16[78], v16[76]));
    faces.push(new Face(color16, v16[12], v16[28], v16[60], v16[44]));
    faces.push(new Face(color16, v16[12], v16[28], v16[92], v16[76]));
    faces.push(new Face(color16, v16[12], v16[44], v16[108], v16[76]));
    faces.push(new Face(color16, v16[13], v16[15], v16[31], v16[29]));
    faces.push(new Face(color16, v16[13], v16[15], v16[47], v16[45]));
    faces.push(new Face(color16, v16[13], v16[15], v16[79], v16[77]));
    faces.push(new Face(color16, v16[13], v16[29], v16[61], v16[45]));
    faces.push(new Face(color16, v16[13], v16[29], v16[93], v16[77]));
    faces.push(new Face(color16, v16[13], v16[45], v16[109], v16[77]));
    faces.push(new Face(color16, v16[14], v16[15], v16[31], v16[30]));
    faces.push(new Face(color16, v16[14], v16[15], v16[47], v16[46]));
    faces.push(new Face(color16, v16[14], v16[15], v16[79], v16[78]));
    faces.push(new Face(color16, v16[14], v16[30], v16[62], v16[46]));
    faces.push(new Face(color16, v16[14], v16[30], v16[94], v16[78]));
    faces.push(new Face(color16, v16[14], v16[46], v16[110], v16[78]));
    faces.push(new Face(color16, v16[15], v16[31], v16[63], v16[47]));
    faces.push(new Face(color16, v16[15], v16[31], v16[95], v16[79]));
    faces.push(new Face(color16, v16[15], v16[47], v16[111], v16[79]));
    faces.push(new Face(color16, v16[16], v16[17], v16[19], v16[18]));
    faces.push(new Face(color16, v16[16], v16[17], v16[21], v16[20]));
    faces.push(new Face(color16, v16[16], v16[17], v16[25], v16[24]));
    faces.push(new Face(color16, v16[16], v16[17], v16[49], v16[48]));
    faces.push(new Face(color16, v16[16], v16[17], v16[81], v16[80]));
    faces.push(new Face(color16, v16[16], v16[18], v16[22], v16[20]));
    faces.push(new Face(color16, v16[16], v16[18], v16[26], v16[24]));
    faces.push(new Face(color16, v16[16], v16[18], v16[50], v16[48]));
    faces.push(new Face(color16, v16[16], v16[18], v16[82], v16[80]));
    faces.push(new Face(color16, v16[16], v16[20], v16[28], v16[24]));
    faces.push(new Face(color16, v16[16], v16[20], v16[52], v16[48]));
    faces.push(new Face(color16, v16[16], v16[20], v16[84], v16[80]));
    faces.push(new Face(color16, v16[16], v16[24], v16[56], v16[48]));
    faces.push(new Face(color16, v16[16], v16[24], v16[88], v16[80]));
    faces.push(new Face(color16, v16[16], v16[48], v16[112], v16[80]));
    faces.push(new Face(color16, v16[17], v16[19], v16[23], v16[21]));
    faces.push(new Face(color16, v16[17], v16[19], v16[27], v16[25]));
    faces.push(new Face(color16, v16[17], v16[19], v16[51], v16[49]));
    faces.push(new Face(color16, v16[17], v16[19], v16[83], v16[81]));
    faces.push(new Face(color16, v16[17], v16[21], v16[29], v16[25]));
    faces.push(new Face(color16, v16[17], v16[21], v16[53], v16[49]));
    faces.push(new Face(color16, v16[17], v16[21], v16[85], v16[81]));
    faces.push(new Face(color16, v16[17], v16[25], v16[57], v16[49]));
    faces.push(new Face(color16, v16[17], v16[25], v16[89], v16[81]));
    faces.push(new Face(color16, v16[17], v16[49], v16[113], v16[81]));
    faces.push(new Face(color16, v16[18], v16[19], v16[23], v16[22]));
    faces.push(new Face(color16, v16[18], v16[19], v16[27], v16[26]));
    faces.push(new Face(color16, v16[18], v16[19], v16[51], v16[50]));
    faces.push(new Face(color16, v16[18], v16[19], v16[83], v16[82]));
    faces.push(new Face(color16, v16[18], v16[22], v16[30], v16[26]));
    faces.push(new Face(color16, v16[18], v16[22], v16[54], v16[50]));
    faces.push(new Face(color16, v16[18], v16[22], v16[86], v16[82]));
    faces.push(new Face(color16, v16[18], v16[26], v16[58], v16[50]));
    faces.push(new Face(color16, v16[18], v16[26], v16[90], v16[82]));
    faces.push(new Face(color16, v16[18], v16[50], v16[114], v16[82]));
    faces.push(new Face(color16, v16[19], v16[23], v16[31], v16[27]));
    faces.push(new Face(color16, v16[19], v16[23], v16[55], v16[51]));
    faces.push(new Face(color16, v16[19], v16[23], v16[87], v16[83]));
    faces.push(new Face(color16, v16[19], v16[27], v16[59], v16[51]));
    faces.push(new Face(color16, v16[19], v16[27], v16[91], v16[83]));
    faces.push(new Face(color16, v16[19], v16[51], v16[115], v16[83]));
    faces.push(new Face(color16, v16[20], v16[21], v16[23], v16[22]));
    faces.push(new Face(color16, v16[20], v16[21], v16[29], v16[28]));
    faces.push(new Face(color16, v16[20], v16[21], v16[53], v16[52]));
    faces.push(new Face(color16, v16[20], v16[21], v16[85], v16[84]));
    faces.push(new Face(color16, v16[20], v16[22], v16[30], v16[28]));
    faces.push(new Face(color16, v16[20], v16[22], v16[54], v16[52]));
    faces.push(new Face(color16, v16[20], v16[22], v16[86], v16[84]));
    faces.push(new Face(color16, v16[20], v16[28], v16[60], v16[52]));
    faces.push(new Face(color16, v16[20], v16[28], v16[92], v16[84]));
    faces.push(new Face(color16, v16[20], v16[52], v16[116], v16[84]));
    faces.push(new Face(color16, v16[21], v16[23], v16[31], v16[29]));
    faces.push(new Face(color16, v16[21], v16[23], v16[55], v16[53]));
    faces.push(new Face(color16, v16[21], v16[23], v16[87], v16[85]));
    faces.push(new Face(color16, v16[21], v16[29], v16[61], v16[53]));
    faces.push(new Face(color16, v16[21], v16[29], v16[93], v16[85]));
    faces.push(new Face(color16, v16[21], v16[53], v16[117], v16[85]));
    faces.push(new Face(color16, v16[22], v16[23], v16[31], v16[30]));
    faces.push(new Face(color16, v16[22], v16[23], v16[55], v16[54]));
    faces.push(new Face(color16, v16[22], v16[23], v16[87], v16[86]));
    faces.push(new Face(color16, v16[22], v16[30], v16[62], v16[54]));
    faces.push(new Face(color16, v16[22], v16[30], v16[94], v16[86]));
    faces.push(new Face(color16, v16[22], v16[54], v16[118], v16[86]));
    faces.push(new Face(color16, v16[23], v16[31], v16[63], v16[55]));
    faces.push(new Face(color16, v16[23], v16[31], v16[95], v16[87]));
    faces.push(new Face(color16, v16[23], v16[55], v16[119], v16[87]));
    faces.push(new Face(color16, v16[24], v16[25], v16[27], v16[26]));
    faces.push(new Face(color16, v16[24], v16[25], v16[29], v16[28]));
    faces.push(new Face(color16, v16[24], v16[25], v16[57], v16[56]));
    faces.push(new Face(color16, v16[24], v16[25], v16[89], v16[88]));
    faces.push(new Face(color16, v16[24], v16[26], v16[30], v16[28]));
    faces.push(new Face(color16, v16[24], v16[26], v16[58], v16[56]));
    faces.push(new Face(color16, v16[24], v16[26], v16[90], v16[88]));
    faces.push(new Face(color16, v16[24], v16[28], v16[60], v16[56]));
    faces.push(new Face(color16, v16[24], v16[28], v16[92], v16[88]));
    faces.push(new Face(color16, v16[24], v16[56], v16[120], v16[88]));
    faces.push(new Face(color16, v16[25], v16[27], v16[31], v16[29]));
    faces.push(new Face(color16, v16[25], v16[27], v16[59], v16[57]));
    faces.push(new Face(color16, v16[25], v16[27], v16[91], v16[89]));
    faces.push(new Face(color16, v16[25], v16[29], v16[61], v16[57]));
    faces.push(new Face(color16, v16[25], v16[29], v16[93], v16[89]));
    faces.push(new Face(color16, v16[25], v16[57], v16[121], v16[89]));
    faces.push(new Face(color16, v16[26], v16[27], v16[31], v16[30]));
    faces.push(new Face(color16, v16[26], v16[27], v16[59], v16[58]));
    faces.push(new Face(color16, v16[26], v16[27], v16[91], v16[90]));
    faces.push(new Face(color16, v16[26], v16[30], v16[62], v16[58]));
    faces.push(new Face(color16, v16[26], v16[30], v16[94], v16[90]));
    faces.push(new Face(color16, v16[26], v16[58], v16[122], v16[90]));
    faces.push(new Face(color16, v16[27], v16[31], v16[63], v16[59]));
    faces.push(new Face(color16, v16[27], v16[31], v16[95], v16[91]));
    faces.push(new Face(color16, v16[27], v16[59], v16[123], v16[91]));
    faces.push(new Face(color16, v16[28], v16[29], v16[31], v16[30]));
    faces.push(new Face(color16, v16[28], v16[29], v16[61], v16[60]));
    faces.push(new Face(color16, v16[28], v16[29], v16[93], v16[92]));
    faces.push(new Face(color16, v16[28], v16[30], v16[62], v16[60]));
    faces.push(new Face(color16, v16[28], v16[30], v16[94], v16[92]));
    faces.push(new Face(color16, v16[28], v16[60], v16[124], v16[92]));
    faces.push(new Face(color16, v16[29], v16[31], v16[63], v16[61]));
    faces.push(new Face(color16, v16[29], v16[31], v16[95], v16[93]));
    faces.push(new Face(color16, v16[29], v16[61], v16[125], v16[93]));
    faces.push(new Face(color16, v16[30], v16[31], v16[63], v16[62]));
    faces.push(new Face(color16, v16[30], v16[31], v16[95], v16[94]));
    faces.push(new Face(color16, v16[30], v16[62], v16[126], v16[94]));
    faces.push(new Face(color16, v16[31], v16[63], v16[127], v16[95]));
    faces.push(new Face(color16, v16[32], v16[33], v16[35], v16[34]));
    faces.push(new Face(color16, v16[32], v16[33], v16[37], v16[36]));
    faces.push(new Face(color16, v16[32], v16[33], v16[41], v16[40]));
    faces.push(new Face(color16, v16[32], v16[33], v16[49], v16[48]));
    faces.push(new Face(color16, v16[32], v16[33], v16[97], v16[96]));
    faces.push(new Face(color16, v16[32], v16[34], v16[38], v16[36]));
    faces.push(new Face(color16, v16[32], v16[34], v16[42], v16[40]));
    faces.push(new Face(color16, v16[32], v16[34], v16[50], v16[48]));
    faces.push(new Face(color16, v16[32], v16[34], v16[98], v16[96]));
    faces.push(new Face(color16, v16[32], v16[36], v16[44], v16[40]));
    faces.push(new Face(color16, v16[32], v16[36], v16[52], v16[48]));
    faces.push(new Face(color16, v16[32], v16[36], v16[100], v16[96]));
    faces.push(new Face(color16, v16[32], v16[40], v16[56], v16[48]));
    faces.push(new Face(color16, v16[32], v16[40], v16[104], v16[96]));
    faces.push(new Face(color16, v16[32], v16[48], v16[112], v16[96]));
    faces.push(new Face(color16, v16[33], v16[35], v16[39], v16[37]));
    faces.push(new Face(color16, v16[33], v16[35], v16[43], v16[41]));
    faces.push(new Face(color16, v16[33], v16[35], v16[51], v16[49]));
    faces.push(new Face(color16, v16[33], v16[35], v16[99], v16[97]));
    faces.push(new Face(color16, v16[33], v16[37], v16[45], v16[41]));
    faces.push(new Face(color16, v16[33], v16[37], v16[53], v16[49]));
    faces.push(new Face(color16, v16[33], v16[37], v16[101], v16[97]));
    faces.push(new Face(color16, v16[33], v16[41], v16[57], v16[49]));
    faces.push(new Face(color16, v16[33], v16[41], v16[105], v16[97]));
    faces.push(new Face(color16, v16[33], v16[49], v16[113], v16[97]));
    faces.push(new Face(color16, v16[34], v16[35], v16[39], v16[38]));
    faces.push(new Face(color16, v16[34], v16[35], v16[43], v16[42]));
    faces.push(new Face(color16, v16[34], v16[35], v16[51], v16[50]));
    faces.push(new Face(color16, v16[34], v16[35], v16[99], v16[98]));
    faces.push(new Face(color16, v16[34], v16[38], v16[46], v16[42]));
    faces.push(new Face(color16, v16[34], v16[38], v16[54], v16[50]));
    faces.push(new Face(color16, v16[34], v16[38], v16[102], v16[98]));
    faces.push(new Face(color16, v16[34], v16[42], v16[58], v16[50]));
    faces.push(new Face(color16, v16[34], v16[42], v16[106], v16[98]));
    faces.push(new Face(color16, v16[34], v16[50], v16[114], v16[98]));
    faces.push(new Face(color16, v16[35], v16[39], v16[47], v16[43]));
    faces.push(new Face(color16, v16[35], v16[39], v16[55], v16[51]));
    faces.push(new Face(color16, v16[35], v16[39], v16[103], v16[99]));
    faces.push(new Face(color16, v16[35], v16[43], v16[59], v16[51]));
    faces.push(new Face(color16, v16[35], v16[43], v16[107], v16[99]));
    faces.push(new Face(color16, v16[35], v16[51], v16[115], v16[99]));
    faces.push(new Face(color16, v16[36], v16[37], v16[39], v16[38]));
    faces.push(new Face(color16, v16[36], v16[37], v16[45], v16[44]));
    faces.push(new Face(color16, v16[36], v16[37], v16[53], v16[52]));
    faces.push(new Face(color16, v16[36], v16[37], v16[101], v16[100]));
    faces.push(new Face(color16, v16[36], v16[38], v16[46], v16[44]));
    faces.push(new Face(color16, v16[36], v16[38], v16[54], v16[52]));
    faces.push(new Face(color16, v16[36], v16[38], v16[102], v16[100]));
    faces.push(new Face(color16, v16[36], v16[44], v16[60], v16[52]));
    faces.push(new Face(color16, v16[36], v16[44], v16[108], v16[100]));
    faces.push(new Face(color16, v16[36], v16[52], v16[116], v16[100]));
    faces.push(new Face(color16, v16[37], v16[39], v16[47], v16[45]));
    faces.push(new Face(color16, v16[37], v16[39], v16[55], v16[53]));
    faces.push(new Face(color16, v16[37], v16[39], v16[103], v16[101]));
    faces.push(new Face(color16, v16[37], v16[45], v16[61], v16[53]));
    faces.push(new Face(color16, v16[37], v16[45], v16[109], v16[101]));
    faces.push(new Face(color16, v16[37], v16[53], v16[117], v16[101]));
    faces.push(new Face(color16, v16[38], v16[39], v16[47], v16[46]));
    faces.push(new Face(color16, v16[38], v16[39], v16[55], v16[54]));
    faces.push(new Face(color16, v16[38], v16[39], v16[103], v16[102]));
    faces.push(new Face(color16, v16[38], v16[46], v16[62], v16[54]));
    faces.push(new Face(color16, v16[38], v16[46], v16[110], v16[102]));
    faces.push(new Face(color16, v16[38], v16[54], v16[118], v16[102]));
    faces.push(new Face(color16, v16[39], v16[47], v16[63], v16[55]));
    faces.push(new Face(color16, v16[39], v16[47], v16[111], v16[103]));
    faces.push(new Face(color16, v16[39], v16[55], v16[119], v16[103]));
    faces.push(new Face(color16, v16[40], v16[41], v16[43], v16[42]));
    faces.push(new Face(color16, v16[40], v16[41], v16[45], v16[44]));
    faces.push(new Face(color16, v16[40], v16[41], v16[57], v16[56]));
    faces.push(new Face(color16, v16[40], v16[41], v16[105], v16[104]));
    faces.push(new Face(color16, v16[40], v16[42], v16[46], v16[44]));
    faces.push(new Face(color16, v16[40], v16[42], v16[58], v16[56]));
    faces.push(new Face(color16, v16[40], v16[42], v16[106], v16[104]));
    faces.push(new Face(color16, v16[40], v16[44], v16[60], v16[56]));
    faces.push(new Face(color16, v16[40], v16[44], v16[108], v16[104]));
    faces.push(new Face(color16, v16[40], v16[56], v16[120], v16[104]));
    faces.push(new Face(color16, v16[41], v16[43], v16[47], v16[45]));
    faces.push(new Face(color16, v16[41], v16[43], v16[59], v16[57]));
    faces.push(new Face(color16, v16[41], v16[43], v16[107], v16[105]));
    faces.push(new Face(color16, v16[41], v16[45], v16[61], v16[57]));
    faces.push(new Face(color16, v16[41], v16[45], v16[109], v16[105]));
    faces.push(new Face(color16, v16[41], v16[57], v16[121], v16[105]));
    faces.push(new Face(color16, v16[42], v16[43], v16[47], v16[46]));
    faces.push(new Face(color16, v16[42], v16[43], v16[59], v16[58]));
    faces.push(new Face(color16, v16[42], v16[43], v16[107], v16[106]));
    faces.push(new Face(color16, v16[42], v16[46], v16[62], v16[58]));
    faces.push(new Face(color16, v16[42], v16[46], v16[110], v16[106]));
    faces.push(new Face(color16, v16[42], v16[58], v16[122], v16[106]));
    faces.push(new Face(color16, v16[43], v16[47], v16[63], v16[59]));
    faces.push(new Face(color16, v16[43], v16[47], v16[111], v16[107]));
    faces.push(new Face(color16, v16[43], v16[59], v16[123], v16[107]));
    faces.push(new Face(color16, v16[44], v16[45], v16[47], v16[46]));
    faces.push(new Face(color16, v16[44], v16[45], v16[61], v16[60]));
    faces.push(new Face(color16, v16[44], v16[45], v16[109], v16[108]));
    faces.push(new Face(color16, v16[44], v16[46], v16[62], v16[60]));
    faces.push(new Face(color16, v16[44], v16[46], v16[110], v16[108]));
    faces.push(new Face(color16, v16[44], v16[60], v16[124], v16[108]));
    faces.push(new Face(color16, v16[45], v16[47], v16[63], v16[61]));
    faces.push(new Face(color16, v16[45], v16[47], v16[111], v16[109]));
    faces.push(new Face(color16, v16[45], v16[61], v16[125], v16[109]));
    faces.push(new Face(color16, v16[46], v16[47], v16[63], v16[62]));
    faces.push(new Face(color16, v16[46], v16[47], v16[111], v16[110]));
    faces.push(new Face(color16, v16[46], v16[62], v16[126], v16[110]));
    faces.push(new Face(color16, v16[47], v16[63], v16[127], v16[111]));
    faces.push(new Face(color16, v16[48], v16[49], v16[51], v16[50]));
    faces.push(new Face(color16, v16[48], v16[49], v16[53], v16[52]));
    faces.push(new Face(color16, v16[48], v16[49], v16[57], v16[56]));
    faces.push(new Face(color16, v16[48], v16[49], v16[113], v16[112]));
    faces.push(new Face(color16, v16[48], v16[50], v16[54], v16[52]));
    faces.push(new Face(color16, v16[48], v16[50], v16[58], v16[56]));
    faces.push(new Face(color16, v16[48], v16[50], v16[114], v16[112]));
    faces.push(new Face(color16, v16[48], v16[52], v16[60], v16[56]));
    faces.push(new Face(color16, v16[48], v16[52], v16[116], v16[112]));
    faces.push(new Face(color16, v16[48], v16[56], v16[120], v16[112]));
    faces.push(new Face(color16, v16[49], v16[51], v16[55], v16[53]));
    faces.push(new Face(color16, v16[49], v16[51], v16[59], v16[57]));
    faces.push(new Face(color16, v16[49], v16[51], v16[115], v16[113]));
    faces.push(new Face(color16, v16[49], v16[53], v16[61], v16[57]));
    faces.push(new Face(color16, v16[49], v16[53], v16[117], v16[113]));
    faces.push(new Face(color16, v16[49], v16[57], v16[121], v16[113]));
    faces.push(new Face(color16, v16[50], v16[51], v16[55], v16[54]));
    faces.push(new Face(color16, v16[50], v16[51], v16[59], v16[58]));
    faces.push(new Face(color16, v16[50], v16[51], v16[115], v16[114]));
    faces.push(new Face(color16, v16[50], v16[54], v16[62], v16[58]));
    faces.push(new Face(color16, v16[50], v16[54], v16[118], v16[114]));
    faces.push(new Face(color16, v16[50], v16[58], v16[122], v16[114]));
    faces.push(new Face(color16, v16[51], v16[55], v16[63], v16[59]));
    faces.push(new Face(color16, v16[51], v16[55], v16[119], v16[115]));
    faces.push(new Face(color16, v16[51], v16[59], v16[123], v16[115]));
    faces.push(new Face(color16, v16[52], v16[53], v16[55], v16[54]));
    faces.push(new Face(color16, v16[52], v16[53], v16[61], v16[60]));
    faces.push(new Face(color16, v16[52], v16[53], v16[117], v16[116]));
    faces.push(new Face(color16, v16[52], v16[54], v16[62], v16[60]));
    faces.push(new Face(color16, v16[52], v16[54], v16[118], v16[116]));
    faces.push(new Face(color16, v16[52], v16[60], v16[124], v16[116]));
    faces.push(new Face(color16, v16[53], v16[55], v16[63], v16[61]));
    faces.push(new Face(color16, v16[53], v16[55], v16[119], v16[117]));
    faces.push(new Face(color16, v16[53], v16[61], v16[125], v16[117]));
    faces.push(new Face(color16, v16[54], v16[55], v16[63], v16[62]));
    faces.push(new Face(color16, v16[54], v16[55], v16[119], v16[118]));
    faces.push(new Face(color16, v16[54], v16[62], v16[126], v16[118]));
    faces.push(new Face(color16, v16[55], v16[63], v16[127], v16[119]));
    faces.push(new Face(color16, v16[56], v16[57], v16[59], v16[58]));
    faces.push(new Face(color16, v16[56], v16[57], v16[61], v16[60]));
    faces.push(new Face(color16, v16[56], v16[57], v16[121], v16[120]));
    faces.push(new Face(color16, v16[56], v16[58], v16[62], v16[60]));
    faces.push(new Face(color16, v16[56], v16[58], v16[122], v16[120]));
    faces.push(new Face(color16, v16[56], v16[60], v16[124], v16[120]));
    faces.push(new Face(color16, v16[57], v16[59], v16[63], v16[61]));
    faces.push(new Face(color16, v16[57], v16[59], v16[123], v16[121]));
    faces.push(new Face(color16, v16[57], v16[61], v16[125], v16[121]));
    faces.push(new Face(color16, v16[58], v16[59], v16[63], v16[62]));
    faces.push(new Face(color16, v16[58], v16[59], v16[123], v16[122]));
    faces.push(new Face(color16, v16[58], v16[62], v16[126], v16[122]));
    faces.push(new Face(color16, v16[59], v16[63], v16[127], v16[123]));
    faces.push(new Face(color16, v16[60], v16[61], v16[63], v16[62]));
    faces.push(new Face(color16, v16[60], v16[61], v16[125], v16[124]));
    faces.push(new Face(color16, v16[60], v16[62], v16[126], v16[124]));
    faces.push(new Face(color16, v16[61], v16[63], v16[127], v16[125]));
    faces.push(new Face(color16, v16[62], v16[63], v16[127], v16[126]));
    faces.push(new Face(color16, v16[64], v16[65], v16[67], v16[66]));
    faces.push(new Face(color16, v16[64], v16[65], v16[69], v16[68]));
    faces.push(new Face(color16, v16[64], v16[65], v16[73], v16[72]));
    faces.push(new Face(color16, v16[64], v16[65], v16[81], v16[80]));
    faces.push(new Face(color16, v16[64], v16[65], v16[97], v16[96]));
    faces.push(new Face(color16, v16[64], v16[66], v16[70], v16[68]));
    faces.push(new Face(color16, v16[64], v16[66], v16[74], v16[72]));
    faces.push(new Face(color16, v16[64], v16[66], v16[82], v16[80]));
    faces.push(new Face(color16, v16[64], v16[66], v16[98], v16[96]));
    faces.push(new Face(color16, v16[64], v16[68], v16[76], v16[72]));
    faces.push(new Face(color16, v16[64], v16[68], v16[84], v16[80]));
    faces.push(new Face(color16, v16[64], v16[68], v16[100], v16[96]));
    faces.push(new Face(color16, v16[64], v16[72], v16[88], v16[80]));
    faces.push(new Face(color16, v16[64], v16[72], v16[104], v16[96]));
    faces.push(new Face(color16, v16[64], v16[80], v16[112], v16[96]));
    faces.push(new Face(color16, v16[65], v16[67], v16[71], v16[69]));
    faces.push(new Face(color16, v16[65], v16[67], v16[75], v16[73]));
    faces.push(new Face(color16, v16[65], v16[67], v16[83], v16[81]));
    faces.push(new Face(color16, v16[65], v16[67], v16[99], v16[97]));
    faces.push(new Face(color16, v16[65], v16[69], v16[77], v16[73]));
    faces.push(new Face(color16, v16[65], v16[69], v16[85], v16[81]));
    faces.push(new Face(color16, v16[65], v16[69], v16[101], v16[97]));
    faces.push(new Face(color16, v16[65], v16[73], v16[89], v16[81]));
    faces.push(new Face(color16, v16[65], v16[73], v16[105], v16[97]));
    faces.push(new Face(color16, v16[65], v16[81], v16[113], v16[97]));
    faces.push(new Face(color16, v16[66], v16[67], v16[71], v16[70]));
    faces.push(new Face(color16, v16[66], v16[67], v16[75], v16[74]));
    faces.push(new Face(color16, v16[66], v16[67], v16[83], v16[82]));
    faces.push(new Face(color16, v16[66], v16[67], v16[99], v16[98]));
    faces.push(new Face(color16, v16[66], v16[70], v16[78], v16[74]));
    faces.push(new Face(color16, v16[66], v16[70], v16[86], v16[82]));
    faces.push(new Face(color16, v16[66], v16[70], v16[102], v16[98]));
    faces.push(new Face(color16, v16[66], v16[74], v16[90], v16[82]));
    faces.push(new Face(color16, v16[66], v16[74], v16[106], v16[98]));
    faces.push(new Face(color16, v16[66], v16[82], v16[114], v16[98]));
    faces.push(new Face(color16, v16[67], v16[71], v16[79], v16[75]));
    faces.push(new Face(color16, v16[67], v16[71], v16[87], v16[83]));
    faces.push(new Face(color16, v16[67], v16[71], v16[103], v16[99]));
    faces.push(new Face(color16, v16[67], v16[75], v16[91], v16[83]));
    faces.push(new Face(color16, v16[67], v16[75], v16[107], v16[99]));
    faces.push(new Face(color16, v16[67], v16[83], v16[115], v16[99]));
    faces.push(new Face(color16, v16[68], v16[69], v16[71], v16[70]));
    faces.push(new Face(color16, v16[68], v16[69], v16[77], v16[76]));
    faces.push(new Face(color16, v16[68], v16[69], v16[85], v16[84]));
    faces.push(new Face(color16, v16[68], v16[69], v16[101], v16[100]));
    faces.push(new Face(color16, v16[68], v16[70], v16[78], v16[76]));
    faces.push(new Face(color16, v16[68], v16[70], v16[86], v16[84]));
    faces.push(new Face(color16, v16[68], v16[70], v16[102], v16[100]));
    faces.push(new Face(color16, v16[68], v16[76], v16[92], v16[84]));
    faces.push(new Face(color16, v16[68], v16[76], v16[108], v16[100]));
    faces.push(new Face(color16, v16[68], v16[84], v16[116], v16[100]));
    faces.push(new Face(color16, v16[69], v16[71], v16[79], v16[77]));
    faces.push(new Face(color16, v16[69], v16[71], v16[87], v16[85]));
    faces.push(new Face(color16, v16[69], v16[71], v16[103], v16[101]));
    faces.push(new Face(color16, v16[69], v16[77], v16[93], v16[85]));
    faces.push(new Face(color16, v16[69], v16[77], v16[109], v16[101]));
    faces.push(new Face(color16, v16[69], v16[85], v16[117], v16[101]));
    faces.push(new Face(color16, v16[70], v16[71], v16[79], v16[78]));
    faces.push(new Face(color16, v16[70], v16[71], v16[87], v16[86]));
    faces.push(new Face(color16, v16[70], v16[71], v16[103], v16[102]));
    faces.push(new Face(color16, v16[70], v16[78], v16[94], v16[86]));
    faces.push(new Face(color16, v16[70], v16[78], v16[110], v16[102]));
    faces.push(new Face(color16, v16[70], v16[86], v16[118], v16[102]));
    faces.push(new Face(color16, v16[71], v16[79], v16[95], v16[87]));
    faces.push(new Face(color16, v16[71], v16[79], v16[111], v16[103]));
    faces.push(new Face(color16, v16[71], v16[87], v16[119], v16[103]));
    faces.push(new Face(color16, v16[72], v16[73], v16[75], v16[74]));
    faces.push(new Face(color16, v16[72], v16[73], v16[77], v16[76]));
    faces.push(new Face(color16, v16[72], v16[73], v16[89], v16[88]));
    faces.push(new Face(color16, v16[72], v16[73], v16[105], v16[104]));
    faces.push(new Face(color16, v16[72], v16[74], v16[78], v16[76]));
    faces.push(new Face(color16, v16[72], v16[74], v16[90], v16[88]));
    faces.push(new Face(color16, v16[72], v16[74], v16[106], v16[104]));
    faces.push(new Face(color16, v16[72], v16[76], v16[92], v16[88]));
    faces.push(new Face(color16, v16[72], v16[76], v16[108], v16[104]));
    faces.push(new Face(color16, v16[72], v16[88], v16[120], v16[104]));
    faces.push(new Face(color16, v16[73], v16[75], v16[79], v16[77]));
    faces.push(new Face(color16, v16[73], v16[75], v16[91], v16[89]));
    faces.push(new Face(color16, v16[73], v16[75], v16[107], v16[105]));
    faces.push(new Face(color16, v16[73], v16[77], v16[93], v16[89]));
    faces.push(new Face(color16, v16[73], v16[77], v16[109], v16[105]));
    faces.push(new Face(color16, v16[73], v16[89], v16[121], v16[105]));
    faces.push(new Face(color16, v16[74], v16[75], v16[79], v16[78]));
    faces.push(new Face(color16, v16[74], v16[75], v16[91], v16[90]));
    faces.push(new Face(color16, v16[74], v16[75], v16[107], v16[106]));
    faces.push(new Face(color16, v16[74], v16[78], v16[94], v16[90]));
    faces.push(new Face(color16, v16[74], v16[78], v16[110], v16[106]));
    faces.push(new Face(color16, v16[74], v16[90], v16[122], v16[106]));
    faces.push(new Face(color16, v16[75], v16[79], v16[95], v16[91]));
    faces.push(new Face(color16, v16[75], v16[79], v16[111], v16[107]));
    faces.push(new Face(color16, v16[75], v16[91], v16[123], v16[107]));
    faces.push(new Face(color16, v16[76], v16[77], v16[79], v16[78]));
    faces.push(new Face(color16, v16[76], v16[77], v16[93], v16[92]));
    faces.push(new Face(color16, v16[76], v16[77], v16[109], v16[108]));
    faces.push(new Face(color16, v16[76], v16[78], v16[94], v16[92]));
    faces.push(new Face(color16, v16[76], v16[78], v16[110], v16[108]));
    faces.push(new Face(color16, v16[76], v16[92], v16[124], v16[108]));
    faces.push(new Face(color16, v16[77], v16[79], v16[95], v16[93]));
    faces.push(new Face(color16, v16[77], v16[79], v16[111], v16[109]));
    faces.push(new Face(color16, v16[77], v16[93], v16[125], v16[109]));
    faces.push(new Face(color16, v16[78], v16[79], v16[95], v16[94]));
    faces.push(new Face(color16, v16[78], v16[79], v16[111], v16[110]));
    faces.push(new Face(color16, v16[78], v16[94], v16[126], v16[110]));
    faces.push(new Face(color16, v16[79], v16[95], v16[127], v16[111]));
    faces.push(new Face(color16, v16[80], v16[81], v16[83], v16[82]));
    faces.push(new Face(color16, v16[80], v16[81], v16[85], v16[84]));
    faces.push(new Face(color16, v16[80], v16[81], v16[89], v16[88]));
    faces.push(new Face(color16, v16[80], v16[81], v16[113], v16[112]));
    faces.push(new Face(color16, v16[80], v16[82], v16[86], v16[84]));
    faces.push(new Face(color16, v16[80], v16[82], v16[90], v16[88]));
    faces.push(new Face(color16, v16[80], v16[82], v16[114], v16[112]));
    faces.push(new Face(color16, v16[80], v16[84], v16[92], v16[88]));
    faces.push(new Face(color16, v16[80], v16[84], v16[116], v16[112]));
    faces.push(new Face(color16, v16[80], v16[88], v16[120], v16[112]));
    faces.push(new Face(color16, v16[81], v16[83], v16[87], v16[85]));
    faces.push(new Face(color16, v16[81], v16[83], v16[91], v16[89]));
    faces.push(new Face(color16, v16[81], v16[83], v16[115], v16[113]));
    faces.push(new Face(color16, v16[81], v16[85], v16[93], v16[89]));
    faces.push(new Face(color16, v16[81], v16[85], v16[117], v16[113]));
    faces.push(new Face(color16, v16[81], v16[89], v16[121], v16[113]));
    faces.push(new Face(color16, v16[82], v16[83], v16[87], v16[86]));
    faces.push(new Face(color16, v16[82], v16[83], v16[91], v16[90]));
    faces.push(new Face(color16, v16[82], v16[83], v16[115], v16[114]));
    faces.push(new Face(color16, v16[82], v16[86], v16[94], v16[90]));
    faces.push(new Face(color16, v16[82], v16[86], v16[118], v16[114]));
    faces.push(new Face(color16, v16[82], v16[90], v16[122], v16[114]));
    faces.push(new Face(color16, v16[83], v16[87], v16[95], v16[91]));
    faces.push(new Face(color16, v16[83], v16[87], v16[119], v16[115]));
    faces.push(new Face(color16, v16[83], v16[91], v16[123], v16[115]));
    faces.push(new Face(color16, v16[84], v16[85], v16[87], v16[86]));
    faces.push(new Face(color16, v16[84], v16[85], v16[93], v16[92]));
    faces.push(new Face(color16, v16[84], v16[85], v16[117], v16[116]));
    faces.push(new Face(color16, v16[84], v16[86], v16[94], v16[92]));
    faces.push(new Face(color16, v16[84], v16[86], v16[118], v16[116]));
    faces.push(new Face(color16, v16[84], v16[92], v16[124], v16[116]));
    faces.push(new Face(color16, v16[85], v16[87], v16[95], v16[93]));
    faces.push(new Face(color16, v16[85], v16[87], v16[119], v16[117]));
    faces.push(new Face(color16, v16[85], v16[93], v16[125], v16[117]));
    faces.push(new Face(color16, v16[86], v16[87], v16[95], v16[94]));
    faces.push(new Face(color16, v16[86], v16[87], v16[119], v16[118]));
    faces.push(new Face(color16, v16[86], v16[94], v16[126], v16[118]));
    faces.push(new Face(color16, v16[87], v16[95], v16[127], v16[119]));
    faces.push(new Face(color16, v16[88], v16[89], v16[91], v16[90]));
    faces.push(new Face(color16, v16[88], v16[89], v16[93], v16[92]));
    faces.push(new Face(color16, v16[88], v16[89], v16[121], v16[120]));
    faces.push(new Face(color16, v16[88], v16[90], v16[94], v16[92]));
    faces.push(new Face(color16, v16[88], v16[90], v16[122], v16[120]));
    faces.push(new Face(color16, v16[88], v16[92], v16[124], v16[120]));
    faces.push(new Face(color16, v16[89], v16[91], v16[95], v16[93]));
    faces.push(new Face(color16, v16[89], v16[91], v16[123], v16[121]));
    faces.push(new Face(color16, v16[89], v16[93], v16[125], v16[121]));
    faces.push(new Face(color16, v16[90], v16[91], v16[95], v16[94]));
    faces.push(new Face(color16, v16[90], v16[91], v16[123], v16[122]));
    faces.push(new Face(color16, v16[90], v16[94], v16[126], v16[122]));
    faces.push(new Face(color16, v16[91], v16[95], v16[127], v16[123]));
    faces.push(new Face(color16, v16[92], v16[93], v16[95], v16[94]));
    faces.push(new Face(color16, v16[92], v16[93], v16[125], v16[124]));
    faces.push(new Face(color16, v16[92], v16[94], v16[126], v16[124]));
    faces.push(new Face(color16, v16[93], v16[95], v16[127], v16[125]));
    faces.push(new Face(color16, v16[94], v16[95], v16[127], v16[126]));
    faces.push(new Face(color16, v16[96], v16[97], v16[99], v16[98]));
    faces.push(new Face(color16, v16[96], v16[97], v16[101], v16[100]));
    faces.push(new Face(color16, v16[96], v16[97], v16[105], v16[104]));
    faces.push(new Face(color16, v16[96], v16[97], v16[113], v16[112]));
    faces.push(new Face(color16, v16[96], v16[98], v16[102], v16[100]));
    faces.push(new Face(color16, v16[96], v16[98], v16[106], v16[104]));
    faces.push(new Face(color16, v16[96], v16[98], v16[114], v16[112]));
    faces.push(new Face(color16, v16[96], v16[100], v16[108], v16[104]));
    faces.push(new Face(color16, v16[96], v16[100], v16[116], v16[112]));
    faces.push(new Face(color16, v16[96], v16[104], v16[120], v16[112]));
    faces.push(new Face(color16, v16[97], v16[99], v16[103], v16[101]));
    faces.push(new Face(color16, v16[97], v16[99], v16[107], v16[105]));
    faces.push(new Face(color16, v16[97], v16[99], v16[115], v16[113]));
    faces.push(new Face(color16, v16[97], v16[101], v16[109], v16[105]));
    faces.push(new Face(color16, v16[97], v16[101], v16[117], v16[113]));
    faces.push(new Face(color16, v16[97], v16[105], v16[121], v16[113]));
    faces.push(new Face(color16, v16[98], v16[99], v16[103], v16[102]));
    faces.push(new Face(color16, v16[98], v16[99], v16[107], v16[106]));
    faces.push(new Face(color16, v16[98], v16[99], v16[115], v16[114]));
    faces.push(new Face(color16, v16[98], v16[102], v16[110], v16[106]));
    faces.push(new Face(color16, v16[98], v16[102], v16[118], v16[114]));
    faces.push(new Face(color16, v16[98], v16[106], v16[122], v16[114]));
    faces.push(new Face(color16, v16[99], v16[103], v16[111], v16[107]));
    faces.push(new Face(color16, v16[99], v16[103], v16[119], v16[115]));
    faces.push(new Face(color16, v16[99], v16[107], v16[123], v16[115]));
    faces.push(new Face(color16, v16[100], v16[101], v16[103], v16[102]));
    faces.push(new Face(color16, v16[100], v16[101], v16[109], v16[108]));
    faces.push(new Face(color16, v16[100], v16[101], v16[117], v16[116]));
    faces.push(new Face(color16, v16[100], v16[102], v16[110], v16[108]));
    faces.push(new Face(color16, v16[100], v16[102], v16[118], v16[116]));
    faces.push(new Face(color16, v16[100], v16[108], v16[124], v16[116]));
    faces.push(new Face(color16, v16[101], v16[103], v16[111], v16[109]));
    faces.push(new Face(color16, v16[101], v16[103], v16[119], v16[117]));
    faces.push(new Face(color16, v16[101], v16[109], v16[125], v16[117]));
    faces.push(new Face(color16, v16[102], v16[103], v16[111], v16[110]));
    faces.push(new Face(color16, v16[102], v16[103], v16[119], v16[118]));
    faces.push(new Face(color16, v16[102], v16[110], v16[126], v16[118]));
    faces.push(new Face(color16, v16[103], v16[111], v16[127], v16[119]));
    faces.push(new Face(color16, v16[104], v16[105], v16[107], v16[106]));
    faces.push(new Face(color16, v16[104], v16[105], v16[109], v16[108]));
    faces.push(new Face(color16, v16[104], v16[105], v16[121], v16[120]));
    faces.push(new Face(color16, v16[104], v16[106], v16[110], v16[108]));
    faces.push(new Face(color16, v16[104], v16[106], v16[122], v16[120]));
    faces.push(new Face(color16, v16[104], v16[108], v16[124], v16[120]));
    faces.push(new Face(color16, v16[105], v16[107], v16[111], v16[109]));
    faces.push(new Face(color16, v16[105], v16[107], v16[123], v16[121]));
    faces.push(new Face(color16, v16[105], v16[109], v16[125], v16[121]));
    faces.push(new Face(color16, v16[106], v16[107], v16[111], v16[110]));
    faces.push(new Face(color16, v16[106], v16[107], v16[123], v16[122]));
    faces.push(new Face(color16, v16[106], v16[110], v16[126], v16[122]));
    faces.push(new Face(color16, v16[107], v16[111], v16[127], v16[123]));
    faces.push(new Face(color16, v16[108], v16[109], v16[111], v16[110]));
    faces.push(new Face(color16, v16[108], v16[109], v16[125], v16[124]));
    faces.push(new Face(color16, v16[108], v16[110], v16[126], v16[124]));
    faces.push(new Face(color16, v16[109], v16[111], v16[127], v16[125]));
    faces.push(new Face(color16, v16[110], v16[111], v16[127], v16[126]));
    faces.push(new Face(color16, v16[112], v16[113], v16[115], v16[114]));
    faces.push(new Face(color16, v16[112], v16[113], v16[117], v16[116]));
    faces.push(new Face(color16, v16[112], v16[113], v16[121], v16[120]));
    faces.push(new Face(color16, v16[112], v16[114], v16[118], v16[116]));
    faces.push(new Face(color16, v16[112], v16[114], v16[122], v16[120]));
    faces.push(new Face(color16, v16[112], v16[116], v16[124], v16[120]));
    faces.push(new Face(color16, v16[113], v16[115], v16[119], v16[117]));
    faces.push(new Face(color16, v16[113], v16[115], v16[123], v16[121]));
    faces.push(new Face(color16, v16[113], v16[117], v16[125], v16[121]));
    faces.push(new Face(color16, v16[114], v16[115], v16[119], v16[118]));
    faces.push(new Face(color16, v16[114], v16[115], v16[123], v16[122]));
    faces.push(new Face(color16, v16[114], v16[118], v16[126], v16[122]));
    faces.push(new Face(color16, v16[115], v16[119], v16[127], v16[123]));
    faces.push(new Face(color16, v16[116], v16[117], v16[119], v16[118]));
    faces.push(new Face(color16, v16[116], v16[117], v16[125], v16[124]));
    faces.push(new Face(color16, v16[116], v16[118], v16[126], v16[124]));
    faces.push(new Face(color16, v16[117], v16[119], v16[127], v16[125]));
    faces.push(new Face(color16, v16[118], v16[119], v16[127], v16[126]));
    faces.push(new Face(color16, v16[120], v16[121], v16[123], v16[122]));
    faces.push(new Face(color16, v16[120], v16[121], v16[125], v16[124]));
    faces.push(new Face(color16, v16[120], v16[122], v16[126], v16[124]));
    faces.push(new Face(color16, v16[121], v16[123], v16[127], v16[125]));
    faces.push(new Face(color16, v16[122], v16[123], v16[127], v16[126]));
    faces.push(new Face(color16, v16[124], v16[125], v16[127], v16[126]));
    for (let i = 0; i < v16.length; i++) {
        v16[i].rotate(r);
        v16[i].project();
    }
	
	
	for(let i=0; i<faces.length; i++) faces[i].render();
}

draw();